{"version":3,"file":"main.31f779f80c85b7e54bed.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;;;;;;;AC1BA","sources":["webpack://adiba-central/./src/redux/rootReducer.tsx","webpack://adiba-central/./src/redux/store.tsx","webpack://adiba-central/webpack/runtime/getFullHash"],"sourcesContent":["import { all } from \"redux-saga/effects\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nimport * as auth from \"../app/modules/Auth/_redux/authRedux\";\r\nimport { DashboardSlice } from \"../app/modules/Dashbord/_redux/dashboard/Slice\";\r\nimport { AlertSlice } from \"../app/modules/Incidents/_redux/incidents/Slice\";\r\nimport { AccountSlice } from \"../app/modules/Agents/_redux/accounts/Slice\";\r\nimport { BillingSlice } from \"../app/modules/Billing/_redux/billing/Slice\";\r\nimport { CosumersSlice } from \"../app/modules/User/_redux/customers/Slice\";\r\nimport { BusinessSlice } from \"../app/modules/Businesses/_redux/incidents/Slice\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  auth: auth.reducer,\r\n  dashboard: DashboardSlice.reducer,\r\n  alert: AlertSlice.reducer,\r\n  customers: CosumersSlice.reducer,\r\n  accounts: AccountSlice.reducer,\r\n  billing: BillingSlice.reducer,\r\n  business: BusinessSlice.reducer,\r\n});\r\n\r\nexport function* rootSaga() {\r\n  yield all([auth.saga()]);\r\n}\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { reduxBatch } from \"@manaflair/redux-batch\";\nimport { persistStore } from \"redux-persist\";\nimport { rootReducer, rootSaga } from \"./rootReducer\";\nimport createSagaMiddleware from \"redux-saga\";\n\nconst sagaMiddleware = createSagaMiddleware;\nconst middleware = [\n  ...getDefaultMiddleware({\n    immutableCheck: false,\n    serializableCheck: false,\n    thunk: true,\n  }),\n  sagaMiddleware,\n];\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware,\n  devTools: process.env.NODE_ENV !== \"production\",\n  enhancers: [reduxBatch],\n});\n\nexport const persistor = persistStore(store);\n\nsagaMiddleware.run(rootSaga);\nexport default store;\n","__webpack_require__.h = () => (\"d67ea82fb78756db6e1a\")"],"names":[],"sourceRoot":""}