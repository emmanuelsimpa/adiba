{"version":3,"file":"main.38450c00c796f8919f73.hot-update.js","mappings":";;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;;;;;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;AC5BA;;AAEA;AAAA;AAIA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;;AAEA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvGA;AACA;AAMA;AACA;AACA;AACA;AACA;AAAA;AAHA;AAAA;AAKA;AACA;AAIA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAIA;AACA;AAAA;AAIA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAOA;AACA;AAAA;AAIA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAMA;AAAA;AAEA;AACA;AAAA;AASA;AACA;AAAA;AAOA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AASA;;;;;;;;;;;;;;;;;ACtIA;AAEA;AAEA;AACA;AACA;;;;;;;;ACNA","sources":["webpack://adiba-central/./src/_app/shared/ViewModels/UserMgtViewModel.ts","webpack://adiba-central/./src/_app/shared/models/_BaseViewModel.ts","webpack://adiba-central/./src/member/SignUpForms/SignInContent.tsx","webpack://adiba-central/./src/member/login.tsx","webpack://adiba-central/webpack/runtime/getFullHash"],"sourcesContent":["import _BaseViewModel from \"../models/_BaseViewModel\";\n\nclass UserMgtViewModel extends _BaseViewModel {\n  constructor(data: any) {\n    super(data);\n  }\n\n  async signIn(data: any) {\n    this._set(\"path\", \"91cb5408-382c-40c2-9ccb-615b028fc16d\");\n    return await this.post(data);\n  }\n\n  async signUp(data: any) {\n    this._set(\"path\", \"91cb5408-382c-40c2-9ccb-615b028fc16d\");\n    return await this.post(data);\n  }\n\n  async emailVerify(data: any) {\n    this._set(\"path\", \"91cb5408-382c-40c2-9ccb-615b028fc16d\");\n    return await this.post(data);\n  }\n\n  async forgotPassword(data: any) {\n    this._set(\"path\", \"91cb5408-382c-40c2-9ccb-615b028fc16d\");\n    return await this.post(data);\n  }\n}\n\nexport default UserMgtViewModel;\n","// import { navigation } from \"../components/navigations/ChannelsMenu\"\n\nconst baseUrl = \"https://run.mocky.io/v3/\"\n\nexport default class _BaseViewModel{\n    private _props: any\n    constructor(data: any){\n        const _init = data\n        if(typeof _init === 'object'){\n            this._props = _init\n        }else if (typeof _init === 'string'){\n            this._props = {'name': _init}\n        }else{\n            this._props = {}\n        }\n        this._init()\n    }\n\n    _init(){\n        if(!this._props['baseUrl']) {\n            this._props['baseUrl'] = baseUrl\n        }\n    }\n\n    _preconnect(data: any){\n        const queryParam = this._props['hasQueryParam'] ? (\"?\" + new URLSearchParams(this._props['queryParams']).toString()) : \"\"\n        const fullPath = this._props['baseUrl'] + this._props['path'] + queryParam\n        const url = new URL(fullPath)\n        // const credsEncoded = base64.encode('admin@turog.com.ng:Y0hKdmFtVmpkQzF3');\n        \n        const headers = new Headers({\n            'Content-Type': this._props['ContentType'] || 'application/json',\n            'authorization':  `Bearer ${this._props.authorization}`,\n            'accept': this._props['accept'] || 'application/json',\n            // 'X-EncodedURL': 'https://odoo.apps.turog.com.ng',\n            // 'X-Database': 'turog-odoo-sandbox',\n            // 'X-UID': 2,\n            // 'X-Auth': credsEncoded\n        })\n        const opts : {\n            method: any;\n            mode: RequestMode;\n            cache: RequestCache;\n            credentials: RequestCredentials;\n            headers: Headers;\n            redirect: RequestRedirect;\n            referrerPolicy: ReferrerPolicy;\n            body?: BodyInit;\n        } = {\n            method: this._props.httpVerb,\n            mode: 'cors' as RequestMode, \n            cache: 'no-cache' as RequestCache, \n            credentials: 'same-origin' as RequestCredentials, \n            headers: headers,\n            redirect: 'follow' as RequestRedirect,\n            referrerPolicy: 'no-referrer' as ReferrerPolicy, // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n            body: JSON.stringify(data) || {} as BodyInit\n        }\n        if(this._props.httpVerb === 'GET'){\n            delete opts.body\n        }\n        return { url, opts }\n    }\n\n    _connect(data: any){\n        const builder = async () => {\n            const { url, opts } = this._preconnect(data)\n            const response = await fetch(url, opts);\n            return response\n        }\n\n        return builder\n    }\n\n    get(data: any = null) {\n        this._props.httpVerb = 'GET'\n        const req = this._connect(data);\n        return req()\n    }\n\n    post(data: any) {\n        this._props.httpVerb = 'GET'\n        const req = this._connect(data);\n        return req();\n    }\n\n    _get(fieldName: any){\n        if(fieldName)\n            return this._props[fieldName]\n    }\n\n    _set(fieldName: any, fieldValue: any){\n        this._props[fieldName] = fieldValue;\n    }\n\n    _getAll(){\n        return this._props\n    }\n\n    _setAll(fieldValues: any){\n        for (var k in fieldValues) {\n            this._set(k, fieldValues[k])\n        }\n    }\n\n}","import * as React from \"react\";\nimport UserMgtViewModel from \"../../_app/shared/ViewModels/UserMgtViewModel\";\ninterface SignInViewModel {\n  email: string;\n  password: string;\n}\n\nexport default function SignInContent() {\n  const [viewModel, setViewModel] = React.useState<SignInViewModel>({\n    email: \"\",\n    password: \"\",\n  });\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setViewModel({\n      ...viewModel,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { email, password } = viewModel;\n    const data = { email, password };\n    console.log(data);\n    const clientsViewModelsInstance = new UserMgtViewModel(\"signin\");\n    const signIn = clientsViewModelsInstance.signIn(data);\n    signIn.then((response: any) => {\n      if (response.status == 200) {\n        location.href = \"/\";\n      } else {\n        location.href = \".\";\n      }\n    });\n  };\n\n  return (\n    <div className='mt-8 sm:mx-auto sm:w-full sm:max-w-md'>\n      <div className='bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10'>\n        <form\n          className='space-y-6'\n          action='#'\n          method='POST'\n          onSubmit={handleSubmit}\n        >\n          <div>\n            <label\n              htmlFor='email'\n              className='block text-sm font-medium text-gray-700'\n            >\n              Email address\n            </label>\n            <div className='mt-1'>\n              <input\n                id='email'\n                onChange={handleChange}\n                name='email'\n                type='email'\n                autoComplete='email'\n                required\n                className='block w-full appearance-none rounded-md border border-gray-300 px-3 py-2 placeholder-gray-400 shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-indigo-500 sm:text-sm'\n              />\n            </div>\n          </div>\n\n          <div>\n            <label\n              htmlFor='password'\n              className='block text-sm font-medium text-gray-700'\n            >\n              Password\n            </label>\n            <div className='mt-1'>\n              <input\n                id='password'\n                onChange={handleChange}\n                name='password'\n                type='password'\n                autoComplete='current-password'\n                required\n                className='block w-full appearance-none rounded-md border border-gray-300 px-3 py-2 placeholder-gray-400 shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-indigo-500 sm:text-sm'\n              />\n            </div>\n          </div>\n\n          <div className='flex items-center justify-between'>\n            <div className='flex items-center'>\n              <input\n                id='remember-me'\n                name='remember-me'\n                type='checkbox'\n                className='h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500'\n              />\n              <label\n                htmlFor='remember-me'\n                className='ml-2 block text-sm text-gray-900'\n              >\n                Remember me\n              </label>\n            </div>\n\n            <div className='text-sm'>\n              <a\n                href='/user/forgot-password'\n                className='font-medium text-indigo-600 hover:text-indigo-500'\n              >\n                Forgot your password?\n              </a>\n            </div>\n          </div>\n\n          <div>\n            <button\n              type='submit'\n              className='flex w-full justify-center rounded-md border border-transparent bg-indigo-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2'\n            >\n              Sign in\n            </button>\n          </div>\n        </form>\n\n        <div className='mt-6 flex items-center justify-between'>\n          <div className='text-sm'>\n            <a\n              href='/user/signup'\n              className='font-medium text-indigo-600 hover:text-indigo-500'\n            >\n              Not yet registered? Enroll\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport UserMgtForm from \"../_app/shared/member/UserMgtForm\";\nimport SignInContent from \"./SignUpForms/SignInContent\";\n\nexport default function SignIn() {\n  return <SignInContent />;\n}\n","__webpack_require__.h = () => (\"6b312cd5723a68673bf6\")"],"names":[],"sourceRoot":""}