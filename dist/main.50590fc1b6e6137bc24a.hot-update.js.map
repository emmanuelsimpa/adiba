{"version":3,"file":"main.50590fc1b6e6137bc24a.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AACA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;;;;;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAGA;AAEA;;;;;;;;ACzCA","sources":["webpack://adiba-central/./src/_app/shared/MasterLayout/ViewModels/MasterLayoutViewModel.ts","webpack://adiba-central/webpack/runtime/getFullHash"],"sourcesContent":["import { useState } from \"react\";\nimport _BaseViewModel from \"../../models/_BaseViewModel\";\nimport { NavigationList } from \"../components/SidebarMain\";\n\n// define the interface for the view model\ninterface ViewModel {\n  navs: NavigationList[];\n  updateNavs(newUsers: NavigationList[]): void;\n}\n\n// create a function that returns a view model object\nconst useViewModel = (): ViewModel => {\n  const [navs, setNavs] = useState<NavigationList[]>([]); // initialize the users state\n\n  // define a function that updates the users state\n  const updateNavs = (newUsers: NavigationList[]) => {\n    setNavs(newUsers);\n  };\n\n  // return the view model object\n  return { navs, updateNavs };\n};\n\nclass MasterLayoutViewModel extends _BaseViewModel {\n  constructor(data: any) {\n    super(data);\n  }\n\n  async navList(currentApp: any = null) {\n    if (currentApp === \"channels\") {\n      this._setAll({ path: \"113e80da-23da-4cdd-9fd4-c60b89560ae6\" });\n      console.log(\"hereeee\");\n    } else {\n      this._setAll({ path: \"2d664a5c-b14c-4232-b3d5-43a53679cf0a\" });\n    }\n    return await this.get();\n  }\n}\n\nexport default MasterLayoutViewModel;\n\n// export default useViewModel;\n","__webpack_require__.h = () => (\"e4263bb0927304c1608d\")"],"names":[],"sourceRoot":""}