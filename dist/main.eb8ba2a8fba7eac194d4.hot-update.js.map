{"version":3,"file":"main.eb8ba2a8fba7eac194d4.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAZA;AAAA;AAcA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AAAA;AAEA;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;;AAGA;AAEA;AACA;AACA;AACA;AAQA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAMA;AACA;AACA;AACA;AAAA;AAKA;AACA;AACA;AAAA;AASA;AAAA;AAEA;AAAA;AAAA;AAMA;AAAA;AAAA;AACA;AAAA;AAOA;AAEA;AAEA;;;;;;;;;;;;;;;;;AC7JA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AASA;AAIA;AAFA;AACA;AAEA;AACA;AAAA;AAGA;AAEA;AAMA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAMA;AAAA;AAQA;AAIA;;;;;;;;;;;;;;ACnEA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAUA;AAKA;AAHA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AAMA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAWA;AAGA;AAMA;AAGA;AAAA;AACA;AAAA;AAEA;AAGA;AAKA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AAGA;AAQA;;;;;;;;ACjHA","sources":["webpack://adiba-central/./src/member/formT/SignWizard.tsx","webpack://adiba-central/./src/member/formT/components/Addons.tsx","webpack://adiba-central/./src/member/formT/components/card.tsx","webpack://adiba-central/./src/member/formT/components/selectPlan.tsx","webpack://adiba-central/webpack/runtime/getFullHash"],"sourcesContent":["import { Addon, Plan, UserInfo, UserServiceConfiguration } from \"AppTypes\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport { SignUpSteps } from \"../../_app/shared/member/SignUpSteps\";\nimport UserWizard from \"../../_app/shared/member/UserWizard\";\nimport { Addons } from \"./components/Addons\";\nimport { Button } from \"./components/button\";\nimport { PersonalInfo } from \"./components/personalInfo\";\nimport { SelectPlan } from \"./components/selectPlan\";\nimport { ServiceSummary } from \"./components/serviceSummary\";\nimport { ThankYou } from \"./components/thankYou\";\nimport * as Yup from \"yup\";\n// import { Addon, Plan, UserInfo, UserServiceConfiguration } from 'AppTypes';\n\nfunction SignWizard() {\n  const [step, setStep] = useState(1);\n  const [showRequired, setShowRequiredFields] = useState(false);\n\n  const [userServiceConfiguration, setUserServiceConfiguration] =\n    useState<UserServiceConfiguration>({\n      userInfo: {\n        first_name: \"\",\n        last_name: \"\",\n        email_address: \"\",\n        phone_number: \"\",\n        password: \"\",\n      },\n      selectedPlan: null,\n      monthly: true,\n      addons: [],\n    });\n\n  const updateUserInfo = (userInfo: UserInfo) => {\n    setUserServiceConfiguration({ ...userServiceConfiguration, userInfo });\n  };\n\n  const updateSelectedPlan = (plan: Plan) => {\n    setUserServiceConfiguration({\n      ...userServiceConfiguration,\n      selectedPlan: plan,\n    });\n  };\n\n  const updateMonthly = () => {\n    setUserServiceConfiguration((prevVal) => ({\n      ...userServiceConfiguration,\n      monthly: !prevVal.monthly,\n    }));\n  };\n\n  const updateAddons = (addon: Addon) => {\n    const addons = userServiceConfiguration.addons;\n    const index = addons.findIndex(\n      (currentAddon) => currentAddon.name === addon.name\n    );\n    if (index === -1) {\n      setUserServiceConfiguration({\n        ...userServiceConfiguration,\n        addons: [...addons, addon],\n      });\n    } else {\n      addons.splice(index, 1);\n      setUserServiceConfiguration({\n        ...userServiceConfiguration,\n        addons: [...addons],\n      });\n    }\n  };\n\n  const nextStep = (onGoingStep?: number) => {\n    if (step === 5) return;\n    if (step === 1 || (onGoingStep && onGoingStep !== 1 && step === 1)) {\n      if (\n        !userServiceConfiguration.userInfo.first_name ||\n        !userServiceConfiguration.userInfo.last_name ||\n        !userServiceConfiguration.userInfo.email_address ||\n        !userServiceConfiguration.userInfo.email_address.includes(\"@\") ||\n        !userServiceConfiguration.userInfo.phone_number ||\n        !userServiceConfiguration.userInfo.password\n      ) {\n        setShowRequiredFields(true);\n        return;\n      }\n    }\n    setStep((step) => {\n      if (onGoingStep) return onGoingStep;\n      return step + 1;\n    });\n  };\n\n  const goBack = () => {\n    if (step === 1) return;\n    setStep((step) => step - 1);\n  };\n\n  const handleSwitch = (id: string) => (e: any) => {\n    SignUpSteps[parseInt(id) - 1][\"status\"] = \"current\";\n    setStep(parseInt(id));\n  };\n\n  return (\n    // <Sidebar currentStep={step} handleNextStep={nextStep} />\n    <div>\n      <form>\n        {step === 1 && (\n          <UserWizard\n            handleSwitch={handleSwitch}\n            steps={SignUpSteps}\n            content={\n              <PersonalInfo\n                userInfo={userServiceConfiguration.userInfo}\n                updateUserInfo={updateUserInfo}\n                showRequired={showRequired}\n              />\n            }\n          />\n        )}\n        {step === 2 && (\n          <SelectPlan\n            selectedPlan={userServiceConfiguration.selectedPlan}\n            monthly={userServiceConfiguration.monthly}\n            updateSelectedPlan={updateSelectedPlan}\n            updateIsMonthly={updateMonthly}\n          />\n        )}\n        {step === 3 && (\n          <Addons\n            selectedAddons={userServiceConfiguration.addons}\n            monthly={userServiceConfiguration.monthly}\n            updateAddons={updateAddons}\n          />\n        )}\n        {/* {step === 4 && (\n          <ServiceSummary userServiceConfiguration={userServiceConfiguration} />\n        )} */}\n        {/* {step === 5 && <ThankYou />} */}\n      </form>\n      {step < 5 && (\n        <menu className='flex justify-between p-4 mt-auto'>\n          <li>\n            <Button type='ghost' onClick={goBack}>\n              Go Back\n            </Button>\n          </li>\n          <li>\n            <Button\n              onClick={() => nextStep()}\n              type={step !== 4 ? \"secondary\" : \"primary\"}\n            >\n              {step !== 4 ? \"Next Step\" : \"Confirm\"}\n            </Button>\n          </li>\n        </menu>\n      )}\n    </div>\n  );\n}\n\nexport default SignWizard;\n","import { Addon } from 'AppTypes';\nimport { calculatePrice } from '../utils/calculatePrice';\nimport { Card } from './card';\nimport clsx from 'clsx';\n\nconst activeClasses = 'border border-primary-purplish-blue bg-neutral-magnolia';\n\nconst addons: Addon[] = [\n\t{\n\t\tname: 'Online service',\n\t\tdescription: 'Access to multiplayer games',\n\t\tmonthlyPrice: 1,\n\t},\n\t{\n\t\tname: 'Large storage',\n\t\tdescription: 'Extra 1TB of cloud save',\n\t\tmonthlyPrice: 2,\n\t},\n\t{\n\t\tname: 'Customizable profile',\n\t\tdescription: 'Custom theme on your profile',\n\t\tmonthlyPrice: 2,\n\t},\n];\n\ninterface AddonsProps {\n\tselectedAddons: Addon[];\n\tmonthly: boolean;\n\tupdateAddons: (addon: Addon) => void;\n}\n\nexport const Addons = ({\n\tupdateAddons,\n\tmonthly,\n\tselectedAddons,\n}: AddonsProps) => {\n\treturn (\n\t\t<section className=\"flex flex-col w-full gap-4\">\n\t\t\t<h2>Pick add-ons</h2>\n\t\t\t<p>Add-ons help enhace your gaming experience.</p>\n\t\t\t{addons.map((addon) => (\n\t\t\t\t<Card\n\t\t\t\t\tclassName={clsx(\n\t\t\t\t\t\t`p-4 flex gap-4 transition-all relative w-full hover:border-primary-purplish-blue hover:bg-neutral-magnolia cursor-pointer`,\n\t\t\t\t\t\tselectedAddons.includes(addon)\n\t\t\t\t\t\t\t? activeClasses\n\t\t\t\t\t\t\t: 'border border-neutral-light-gray'\n\t\t\t\t\t)}\n\t\t\t\t\tonClick={() => updateAddons(addon)}\n\t\t\t\t\tkey={addon.name}\n\t\t\t\t>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tchecked={selectedAddons.includes(addon)}\n\t\t\t\t\t\tclassName=\"w-5 h-5 aspect-square rounded-sm self-center checked:accent-primary-purplish-blue \"\n\t\t\t\t\t\tonChange={() => updateAddons(addon)}\n\t\t\t\t\t/>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h3>{addon.name}</h3>\n\t\t\t\t\t\t<p>{addon.description}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<span className=\"w-min ml-auto self-center\">\n\t\t\t\t\t\t$\n\t\t\t\t\t\t{calculatePrice(\n\t\t\t\t\t\t\taddon.monthlyPrice,\n\t\t\t\t\t\t\tmonthly\n\t\t\t\t\t\t).toLocaleString()}\n\t\t\t\t\t\t{monthly ? 'mo' : 'yr'}\n\t\t\t\t\t</span>\n\t\t\t\t</Card>\n\t\t\t))}\n\t\t</section>\n\t);\n};\n","interface CardProps {\n\tchildren: React.ReactNode;\n\tclassName?: string;\n\tonClick?: () => void;\n}\n\nexport const Card = ({ children, className, onClick }: CardProps) => {\n\treturn (\n\t\t<div className={`${className}  rounded-xl`} onClick={onClick}>\n\t\t\t{children}\n\t\t</div>\n\t);\n};\n","import { Plan } from 'AppTypes';\nimport { Card } from './card';\nimport clsx from 'clsx';\nimport { calculatePrice } from '../utils/calculatePrice';\n\nconst activeClasses =\n\t'border border-primary-purplish-blue bg-neutral-magnolia falopa';\n\nconst plans: Plan[] = [\n\t{\n\t\tname: 'Arcade',\n\t\ticon: 'icon-arcade.svg',\n\t\tmonthlyPrice: 9,\n\t},\n\t{\n\t\tname: 'Advanced',\n\t\ticon: 'icon-advanced.svg',\n\t\tmonthlyPrice: 12,\n\t},\n\t{\n\t\tname: 'Pro',\n\t\ticon: 'icon-pro.svg',\n\t\tmonthlyPrice: 15,\n\t},\n];\n\ninterface SelectPlanProps {\n\tselectedPlan: Plan | null;\n\tmonthly: boolean;\n\tupdateSelectedPlan: (selectedPlan: Plan) => void;\n\tupdateIsMonthly: (isMonthly: boolean) => void;\n}\n\nexport const SelectPlan = ({\n\tselectedPlan,\n\tmonthly,\n\tupdateSelectedPlan,\n\tupdateIsMonthly,\n}: SelectPlanProps) => {\n\treturn (\n\t\t<section className=\"flex flex-col gap-4 w-full\">\n\t\t\t<h2>Select your plan</h2>\n\t\t\t<p>You have the option of monthly or yearly billing</p>\n\t\t\t<ul className=\"flex flex-col gap-2 lg:flex-row\">\n\t\t\t\t{plans.map((plan) => (\n\t\t\t\t\t<li key={plan.name} className=\"lg:w-full\">\n\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\tclassName={clsx(\n\t\t\t\t\t\t\t\t'p-4 flex gap-4 transition-all w-full lg:flex-col lg:gap-8 hover:border-primary-purplish-blue hover:bg-neutral-magnolia cursor-pointer',\n\t\t\t\t\t\t\t\tplan.name === selectedPlan?.name\n\t\t\t\t\t\t\t\t\t? activeClasses\n\t\t\t\t\t\t\t\t\t: 'border border-neutral-light-gray'\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tonClick={() => updateSelectedPlan(plan)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<figure className=\"w-10 h-10\">\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc={`./assets/images/${plan.icon}`}\n\t\t\t\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</figure>\n\t\t\t\t\t\t\t<div className=\"\">\n\t\t\t\t\t\t\t\t<h3 className=\"leading-5\">{plan.name}</h3>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t$\n\t\t\t\t\t\t\t\t\t{calculatePrice(\n\t\t\t\t\t\t\t\t\t\tplan.monthlyPrice,\n\t\t\t\t\t\t\t\t\t\tmonthly\n\t\t\t\t\t\t\t\t\t).toLocaleString()}\n\t\t\t\t\t\t\t\t\t/{monthly ? 'mo' : 'yr'}\n\t\t\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t\t\t<p\n\t\t\t\t\t\t\t\t\tclassName={clsx(\n\t\t\t\t\t\t\t\t\t\t'text-primary-marine-blue',\n\t\t\t\t\t\t\t\t\t\tmonthly && 'hidden'\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t2 months free\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t\t<div className=\"bg-neutral-alabaster w-full rounded-sm mt-8 felx p-4\">\n\t\t\t\t<label className=\"flex relative items-center cursor-pointer mx-auto w-min\">\n\t\t\t\t\t<span\n\t\t\t\t\t\tclassName={clsx(\n\t\t\t\t\t\t\t`mr-4 font-medium`,\n\t\t\t\t\t\t\tmonthly ? 'text-primary-marine-blue' : ''\n\t\t\t\t\t\t)}\n\t\t\t\t\t>\n\t\t\t\t\t\tMonthly\n\t\t\t\t\t</span>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tonChange={() => updateIsMonthly(!monthly)}\n\t\t\t\t\t\tclassName=\"sr-only peer\"\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"w-11 h-6 peer-focus:outline-none rounded-full peer bg-primary-marine-blue peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[80px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all\"></div>\n\t\t\t\t\t<span\n\t\t\t\t\t\tclassName={clsx(\n\t\t\t\t\t\t\t`ml-4 font-medium`,\n\t\t\t\t\t\t\t!monthly ? 'text-primary-marine-blue' : ''\n\t\t\t\t\t\t)}\n\t\t\t\t\t>\n\t\t\t\t\t\tYearly\n\t\t\t\t\t</span>\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t</section>\n\t);\n};\n","__webpack_require__.h = () => (\"ebc2e9f7e08d7013230f\")"],"names":[],"sourceRoot":""}