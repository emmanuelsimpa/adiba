{"version":3,"file":"main.f172308f964030d529a4.hot-update.js","mappings":";;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AApBA;AAAA;AAAA;AAsBA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;ACxCA","sources":["webpack://adiba-central/./src/redux/apiSlice.js","webpack://adiba-central/webpack/runtime/getFullHash"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nimport { logOut, setCredentials } from \"../member/redux/authSlice\";\n\nconst baseQuery = fetchBaseQuery({\n  baseUrl: \"http://localhost:3112/\",\n  credentials: \"include\",\n  prepareHeaders: (headers, { getState }) => {\n    const token = getState().auth.token;\n    if (token) {\n      headers.set(\"authorization\", `Bearer ${token}`);\n    }\n    return headers;\n  },\n});\n\nconst baseQueryWithReAuth = async (arg, api, options) => {\n  let result = await baseQuery(arg, api, options);\n\n  if (result?.error?.originalStatus === 403) {\n    console.log(\"sending the refresh token\");\n    const refreshResult = await baseQuery(\"/refresh\", api, options);\n    console.log(\"refresh ln 20\", refreshResult);\n\n    if (refreshResult?.data) {\n      const user = api.getState().auth.user;\n\n      api.dispatch(setCredentials({ ...refreshResult.data, user }));\n\n      result = await baseQuery(arg, api, options);\n    } else {\n      api.dispatch(logOut());\n    }\n  }\n\n  return result;\n};\n\nexport const apiSlice = createApi({\n  baseQuery: baseQueryWithReAuth,\n  endpoints: (builder) => ({}),\n});\n","__webpack_require__.h = () => (\"e7ccc1bed10bc19ef58c\")"],"names":[],"sourceRoot":""}