{"version":3,"file":"main.a0b6d7ba78af27eec6e5.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AACA;AACA;AAEA;AACA;AACA;AASA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAHA;AAAA;AAKA;AACA;AAIA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAHA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAIA;AACA;AAAA;AAIA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAOA;AACA;AAAA;AAIA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAMA;AAAA;AAEA;AACA;AAAA;AASA;AACA;AAAA;AAOA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AASA;AACA;AAEA;;;;;;;;AC7NA","sources":["webpack://adiba-central/./src/member/forms/SignInContent.tsx","webpack://adiba-central/webpack/runtime/getFullHash"],"sourcesContent":["import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useAppDispatch, useAppSelector } from \"../../reduxsss/hook\";\nimport UserMgtViewModel from \"../../_app/shared/ViewModels/UserMgtViewModel\";\nimport { useLoginMutation } from \"../redux/authApiSlice\";\nimport { setCredentials } from \"../redux/authSlice\";\nimport { logins } from \"../redux/_redux/authCrud\";\n// import { connect } from \"react-redux\";\n// import * as auth from \"../redux/_redux/authRedux\";\n\ninterface SignInViewModel {\n  email: string;\n  password: string;\n}\n\nexport default function SignInContent() {\n  const [viewModel, setViewModel] = React.useState<SignInViewModel>({\n    email: \"\",\n    password: \"\",\n  });\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setViewModel({\n      ...viewModel,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    // const { email, password } = viewModel;\n    const { email, password } = state;\n\n    logins({ email: email, password: password })\n      .then((response) => {\n        console.log(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n    // const data = { email, password };\n    // dispatch(setCredentials(state));\n\n    console.log(state);\n    // const clientsViewModelsInstance = new UserMgtViewModel(\"signin\");\n    // const signIn = clientsViewModelsInstance.signIn(data);\n    // dispatch(setCredentials({ ...signIn, email }));\n    // signIn.then((response: any) => {\n    //   if (response.status == 200) {\n    //     location.href = \"/\";\n    //   } else {\n    //     location.href = \".\";\n    //   }\n    // });\n  };\n\n  const userRef = React.useRef<HTMLInputElement>();\n  const errRef = React.useRef<HTMLInputElement>();\n  const [state, setState] = React.useState<SignInViewModel>({\n    email: \"\",\n    password: \"\",\n  });\n  const [errMsg, setErrMsg] = React.useState(\"\");\n  const [login, { isLoading }] = useLoginMutation();\n  const dispatch = useAppDispatch();\n\n  // const { user } = useAppSelector((state) => ({\n  //   user: state.auth.user,\n  // }));\n  // console.log({ auth: user });\n\n  React.useEffect(() => {\n    userRef.current.focus();\n  }, []);\n\n  React.useEffect(() => {\n    setErrMsg(\"\");\n  }, [state]);\n\n  const handleSubmits = async (e: any) => {\n    e.preventDefault();\n\n    const { email, password } = state;\n\n    console.log({ state: state });\n\n    try {\n      const userData = await login({ email, password }).unwrap();\n      console.log(\"srtart ln 68\");\n      dispatch(setCredentials({ ...userData, email }));\n      setState({ email: \"\", password: \"\" });\n      console.log(\"navigate ln 68\");\n    } catch (err) {\n      if (!err?.originalStatus) {\n        setErrMsg(\"No server Response\");\n      } else if (err.originalStatus?.status === 400) {\n        setErrMsg(\"Missing Email or Password\");\n      } else if (err.originalStatus?.status === 401) {\n        setErrMsg(\"Unauthorized\");\n      } else {\n        setErrMsg(\"Login Failed\");\n      }\n      errRef.current.focus();\n    }\n    console.log(\"end ln 83\");\n  };\n  const handleEmail = (e) =>\n    setState({ email: e.target.value, password: state.password });\n  const handleWord = (e) =>\n    setState({ email: state.email, password: e.target.value });\n\n  const content = isLoading ? (\n    <h1>loading...</h1>\n  ) : (\n    <div className='mt-8 sm:mx-auto sm:w-full sm:max-w-md'>\n      <div className='bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10'>\n        <p ref={errRef} className={errMsg ? \"\" : \"\"}></p>\n        <form\n          className='space-y-6'\n          action='#'\n          method='POST'\n          onSubmit={handleSubmit}\n        >\n          <div>\n            <label\n              htmlFor='email'\n              className='block text-sm font-medium text-gray-700'\n            >\n              Email address\n            </label>\n            <div className='mt-1'>\n              <input\n                id='email'\n                // onChange={handleChange}\n                onChange={handleEmail}\n                value={state.email}\n                ref={userRef}\n                // name='email'\n                type='email'\n                autoComplete='email'\n                required\n                className='block w-full appearance-none rounded-md border border-gray-300 px-3 py-2 placeholder-gray-400 shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-indigo-500 sm:text-sm'\n              />\n            </div>\n          </div>\n\n          <div>\n            <label\n              htmlFor='password'\n              className='block text-sm font-medium text-gray-700'\n            >\n              Password\n            </label>\n            <div className='mt-1'>\n              <input\n                id='password'\n                // onChange={handleChange}\n                onChange={handleWord}\n                value={state.password}\n                // name='password'\n                type='password'\n                autoComplete='current-password'\n                required\n                className='block w-full appearance-none rounded-md border border-gray-300 px-3 py-2 placeholder-gray-400 shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-indigo-500 sm:text-sm'\n              />\n            </div>\n          </div>\n\n          <div className='flex items-center justify-between'>\n            <div className='flex items-center'>\n              <input\n                id='remember-me'\n                name='remember-me'\n                type='checkbox'\n                className='h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500'\n              />\n              <label\n                htmlFor='remember-me'\n                className='ml-2 block text-sm text-gray-900'\n              >\n                Remember me\n              </label>\n            </div>\n\n            <div className='text-sm'>\n              <Link\n                to='/forgetpassword'\n                className='font-medium text-indigo-600 hover:text-indigo-500'\n              >\n                Forgot your password?\n              </Link>\n            </div>\n          </div>\n\n          <div>\n            <button\n              type='submit'\n              className='flex w-full justify-center rounded-md border border-transparent bg-indigo-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2'\n            >\n              Sign in\n            </button>\n          </div>\n        </form>\n\n        <div className='mt-6 flex items-center justify-between'>\n          <div className='text-sm'>\n            <Link\n              to='/sign-up'\n              className='font-medium text-indigo-600 hover:text-indigo-500'\n            >\n              Not yet registered? Enroll\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n  return content;\n}\n\n// export default connect(null, auth.actions)(SignInContent);\n","__webpack_require__.h = () => (\"1a86b1c88b2d292bbaf3\")"],"names":[],"sourceRoot":""}