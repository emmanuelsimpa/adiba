{"version":3,"file":"main.f1b935483f175e56b1ad.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAIA;AAEA;AAAA;AAAA;AAIA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAGA;AAEA;AACA;AAEA;AAAA;AAMA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AACA;AAEA;;;;;;;;ACxFA","sources":["webpack://adiba-central/./src/_app/shared/components/layouts/landing.tsx","webpack://adiba-central/webpack/runtime/getFullHash"],"sourcesContent":["import { Menu, Notifications } from \"piral\";\nimport { ComponentsState, SwitchErrorInfo } from \"piral-core\";\nimport * as React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// interface Props {\n//   children: any | JSX.Element;\n// }\n\n// const Landing: React.FC<Props> = ({ children }): JSX.Element => {\n//   return (\n//     <div>\n//       <p>Hello World !!!!!!</p>\n//       <>{children}</>\n//     </div>\n//   );\n// };\n\n// export default Landing;\n\nexport const Landing: Partial<ComponentsState> = {\n  ErrorInfo: (props) => (\n    <div>\n      <h1>Error</h1>\n      <SwitchErrorInfo {...props} />\n    </div>\n  ),\n  DashboardContainer: ({ children }) => (\n    <div>\n      <h1>Hello, world!</h1>\n      <p>Welcome to your new microfrontend app shell, built with:</p>\n      <div className='tiles'>{children}</div>\n    </div>\n  ),\n  DashboardTile: ({ columns, rows, children }) => (\n    <div className={`tile cols-${columns} rows-${rows}`}>{children}</div>\n  ),\n  Layout: ({ children }) => (\n    <div>\n      <Notifications />\n      <Menu type='general' />\n      <div className='container'>{children}</div>\n    </div>\n  ),\n  MenuContainer: ({ children }) => {\n    const [collapsed, setCollapsed] = React.useState(true);\n    return (\n      <header>\n        <nav className='navbar navbar-light navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3'>\n          <div className='container'>\n            <Link className='navbar-brand' to='/'>\n              Piral\n            </Link>\n            <button\n              aria-label='Toggle navigation'\n              type='button'\n              onClick={() => setCollapsed(!collapsed)}\n              className='navbar-toggler mr-2'\n            >\n              <span className='navbar-toggler-icon' />\n            </button>\n            <div\n              className={`collapse navbar-collapse d-sm-inline-flex flex-sm-row-reverse ${\n                collapsed ? \"\" : \"show\"\n              }`}\n              aria-expanded={!collapsed}\n            >\n              <ul className='navbar-nav flex-grow'>{children}</ul>\n            </div>\n          </div>\n        </nav>\n      </header>\n    );\n  },\n  NotificationsHost: ({ children }) => (\n    <div className='notifications'>{children}</div>\n  ),\n  NotificationsToast: ({ options, onClose, children }) => (\n    <div className={`notification-toast ${options.type}`}>\n      <div className='notification-toast-details'>\n        {options.title && (\n          <div className='notification-toast-title'>{options.title}</div>\n        )}\n        <div className='notification-toast-description'>{children}</div>\n      </div>\n      <div className='notification-toast-close' onClick={onClose} />\n    </div>\n  ),\n};\n","__webpack_require__.h = () => (\"01dea195e6d7691dc886\")"],"names":[],"sourceRoot":""}