{"version":3,"file":"main.29b4bf89b82625669e68.hot-update.js","mappings":";;;;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACvBA;AAGA;AACA;AACA;AAEA;AACA;AAMA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxFA","sources":["webpack://adiba-central/./src/_app/app.tsx","webpack://adiba-central/./src/_app/shared/components/layouts/landing.tsx","webpack://adiba-central/webpack/runtime/getFullHash"],"sourcesContent":["import { PiletApi } from \"piral-core\";\nimport * as React from \"react\";\nimport LandingPage from \"../landing\";\nimport Landing from \"./shared/components/layouts/landing\";\n// import { Landing } from \"./shared/components/layouts/landing\";\n\nexport function setupShell(app: PiletApi) {\n  app.registerPageLayout(\"standard\", Landing);\n  //   ({ children }) => {\n  //     console.log({ children: children });\n  //     return (\n  //       <>\n  //         {/* <Header />\n  //       <Navigation /> */}\n  //         {children}\n  //         {/* <Footer /> */}\n  //       </>\n  //     );\n  //   });\n  //   app.registerPageLayout(\"standard\", (children) => (\n  //     <Landing children={children} />\n  //   ));\n  app.registerPage(\"/land\", LandingPage, {\n    layout: \"standard\",\n  });\n}\n","import { Menu, Notifications } from \"piral\";\nimport { ComponentsState, SwitchErrorInfo } from \"piral-core\";\nimport * as React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// interface Props {\n//   children: any | JSX.Element;\n// }\n\nconst Landing: React.FC = (children): any => {\n  return (\n    <div>\n      <p>Hello World !!!!!!</p>\n      <>{children}</>\n    </div>\n  );\n};\n\nexport default Landing;\n\n// export const Landing: Partial<ComponentsState> = {\n//   ErrorInfo: (props) => (\n//     <div>\n//       <h1>Error</h1>\n//       <SwitchErrorInfo {...props} />\n//     </div>\n//   ),\n//   DashboardContainer: ({ children }) => (\n//     <div>\n//       <h1>Hello, world!</h1>\n//       <p>Welcome to your new microfrontend app shell, built with:</p>\n//       <div className='tiles'>{children}</div>\n//     </div>\n//   ),\n//   DashboardTile: ({ columns, rows, children }) => (\n//     <div className={`tile cols-${columns} rows-${rows}`}>{children}</div>\n//   ),\n//   Layout: ({ children }) => (\n//     <div>\n//       <Notifications />\n//       <Menu type='general' />\n//       <div className='container'>{children}</div>\n//     </div>\n//   ),\n//   MenuContainer: ({ children }) => {\n//     const [collapsed, setCollapsed] = React.useState(true);\n//     return (\n//       <header>\n//         <nav className='navbar navbar-light navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3'>\n//           <div className='container'>\n//             <Link className='navbar-brand' to='/'>\n//               Piral\n//             </Link>\n//             <button\n//               aria-label='Toggle navigation'\n//               type='button'\n//               onClick={() => setCollapsed(!collapsed)}\n//               className='navbar-toggler mr-2'\n//             >\n//               <span className='navbar-toggler-icon' />\n//             </button>\n//             <div\n//               className={`collapse navbar-collapse d-sm-inline-flex flex-sm-row-reverse ${\n//                 collapsed ? \"\" : \"show\"\n//               }`}\n//               aria-expanded={!collapsed}\n//             >\n//               <ul className='navbar-nav flex-grow'>{children}</ul>\n//             </div>\n//           </div>\n//         </nav>\n//       </header>\n//     );\n//   },\n//   NotificationsHost: ({ children }) => (\n//     <div className='notifications'>{children}</div>\n//   ),\n//   NotificationsToast: ({ options, onClose, children }) => (\n//     <div className={`notification-toast ${options.type}`}>\n//       <div className='notification-toast-details'>\n//         {options.title && (\n//           <div className='notification-toast-title'>{options.title}</div>\n//         )}\n//         <div className='notification-toast-description'>{children}</div>\n//       </div>\n//       <div className='notification-toast-close' onClick={onClose} />\n//     </div>\n//   ),\n// };\n","__webpack_require__.h = () => (\"2003dd5447f96f7d5b9e\")"],"names":[],"sourceRoot":""}