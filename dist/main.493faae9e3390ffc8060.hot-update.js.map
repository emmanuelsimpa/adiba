{"version":3,"file":"main.493faae9e3390ffc8060.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAGA;AAAA;AAAA;AAMA;AAGA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAGA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAGA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACnEA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AAKA;AAEA;AAEA;AACA;AACA;AACA;;AAEA;AAAA;;AAGA;AAEA;AACA;AACA;AACA;;AAGA;AAAA;;AAQA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AAKA;AACA;AAGA;AAKA;AAAA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AAIA;AAAA;AAGA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAKA;AAAA;AAGA;AAAA;AAGA;AAGA;AACA;AAEA;AAAA;AAGA;AAEA;AAOA;AAAA;AAGA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAKA;AAAA;AAIA;AACA;AACA;AAAA;AAEA;AAAA;AAGA;AASA;AAAA;AAEA;AAAA;AACA;AAEA;AAAA;AAGA;AAAA;AAaA;AAAA;AAEA;AAAA;AACA;AAEA;AAAA;AAGA;AAAA;AAOA;AAAA;AAGA;AAKA;AAIA;AAAA;AACA;AAAA;AAEA;AAKA;AAMA;AAKA;AAaA;;;;;;;;;;;;;;;;;;;;;;;;;ACxQA;AACA;AACA;AAKA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAGA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AACA;AAIA;AAAA;AAEA;AAAA;AAEA;AACA;AAAA;AAKA;AAAA;AAIA;AAAA;AAQA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAKA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAMA;AAKA;AAAA;AAMA;AAAA;AASA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAMA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AAEA;AAGA;AACA;AAGA;AAAA;AAIA;AAIA;AAAA;AASA;AAKA;;;;;;;;;;;;;;;;ACxKA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAKA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AAOA;AAEA;AAEA;AAAA;AAAA;AAAA;AAEA;AAGA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAOA;;;;;;;;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AACA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;;;;;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCA;AACA;AACA;AACA;AASA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAGA;AAIA;AAGA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAIA;AAGA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAGA;AAAA;AACA;AAEA;AAAA;AAEA;AAMA;AAKA;;;;;;;;;;;;;;;;;;;;;AC3IA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAGA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAKA;AAAA;AAEA;AACA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAKA;AAGA;AAKA;AACA;AAGA;AAOA;AAAA;AAAA;AAOA;;;;;;;;;;;;;;;;;AC9GA;AACA;AAQA;AAEA;AAEA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAOA;;;;;;;;;;;;;;;;ACjDA;AAcA;AAEA;AAAA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAGA;AAGA;AAGA;AACA;AAGA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AAAA;AAIA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAOA;;;;;;;;;;;;;;;;;;ACtFA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAKA;AAAA;AAAA;AACA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AA8DA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AASA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAOA;;;;;;;;;;;;;;;;;AC9IA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAKA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAKA;;;;;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;;AAGA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AAGA;AAAA;AAcA;;;;;;;;;;;;;;;;;;ACzGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;;;;;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;AC5BA;AAEA;AACA;AAKA;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AAMA;AAEA;AACA;AAAA;AAEA;AAAA;AAIA;AAAA;AAEA;AAEA;AAEA;AACA;AAAA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAKA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AACA;AAEA;;;;;;;;;;;;;;;ACpDA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACLA;AACA;AAQA;AAEA;AAAA;AAAA;AAEA;AAUA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAQA;;;;;;;;;;;;;;;;;;ACzCA;AACA;AACA;AACA;AAgBA;AAGA;AAAA;AAAA;AAEA;AAEA;AAAA;AAEA;AAAA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAGA;AAMA;AAGA;AAAA;AAAA;AAEA;AAAA;AACA;AAGA;AAGA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAIA;AAAA;AACA;AAAA;AAGA;AAAA;AAOA;AAAA;AAAA;AAEA;AAAA;AACA;AAGA;AAGA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAGA;AAAA;AAOA;AAAA;AAAA;AAEA;AAAA;AACA;AAGA;AAGA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAGA;AAAA;AAYA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAOA;AAKA;AAAA;AACA;AAAA;AAIA;;;;;;;;;;;;;;;;;;ACtKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;;;;;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;ACbA;;AAEA;AAAA;AAIA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;;AAEA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;ACvGA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;AC/BA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AAEA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAIA;AAAA;AAEA;AAAA;AAAA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAKA;AACA;AAAA;AAWA;;;;;;;;;;;;;;;;;ACvHA;AACA;AAQA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAGA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAMA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAKA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAMA;AACA;AACA;AACA;AACA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAQA;;;;;;;;;;;;;;;;AC/NA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAGA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAGA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;ACrGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAIA;AAAA;AAGA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAGA;AAIA;AAAA;AAEA;AACA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAGA;AAIA;AACA;AAAA;AASA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AAEA;AAAA;AAGA;AAAA;AAEA;AAAA;AACA;AAGA;AAAA;AAGA;AAAA;AAKA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AAAA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAIA;AAAA;AAGA;AACA;AAAA;AAEA;AAAA;AAIA;AAAA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAQA;AACA;AAAA;AAEA;AAAA;AAIA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AAOA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAQA;AAAA;AAEA;AAAA;AACA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAKA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAKA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAMA;AACA;AAAA;AAEA;AAAA;AAMA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AAMA;AACA;AAAA;AAMA;AACA;AAAA;AAeA;AAEA;;;;;;;;;;;;;;;;AC3XA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAGA;AAAA;AAIA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAKA;AAAA;AAEA;AACA;AAAA;AAOA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AAAA;AAQA;;;;;;;;;;;;;;;;AC3EA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAEA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AASA;;;;;;;;;;;;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAUA;AAEA;;;;;;;;;;;;;;;;;ACrBA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AAQA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AAIA;AACA;AAKA;AAIA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAEA;AACA;AAAA;AAQA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AASA;AAAA;AAEA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AASA;AAAA;AAEA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAOA;AAAA;AAEA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAOA;AAAA;AAEA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAMA;AAAA;AAEA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAOA;AAAA;AAEA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAMA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAKA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;;AAEA;;;;;;;;;;;;;;;;AC9TA;AASA;AAGA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AAAA;AAEA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AAAA;AAEA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AAAA;AAEA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAeA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAKA;AAAA;AAEA;AACA;AACA;AAAA;AAWA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnJA;AACA;AACA;AAMA;AACA;AACA;AACA;AAAA;AAFA;AAAA;AAIA;AACA;AAIA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAIA;AACA;AAAA;AAIA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AASA;AACA;AAAA;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvFA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AAAA;AAHA;AAAA;AAKA;AACA;AAIA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAIA;AACA;AAAA;AAIA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAOA;AACA;AAAA;AAIA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAMA;AAAA;AAEA;AACA;AAAA;AASA;AACA;AAAA;AAOA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAoFA;AAAA;AAAA;AAAA;AAjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAKA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAKA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAKA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;ACrJA;AAEA;AAOA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAUA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;;;;;;ACzHA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;ACLA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC97DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AChtjrsEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://adiba-central/./src/_app/app.tsx","webpack://adiba-central/./src/_app/shared/ChannelsMenu.tsx","webpack://adiba-central/./src/_app/shared/CommandPalette.tsx","webpack://adiba-central/./src/_app/shared/Feed.tsx","webpack://adiba-central/./src/_app/shared/FeedStandardList.tsx","webpack://adiba-central/./src/_app/shared/MasterLayout/MasterLayout.tsx","webpack://adiba-central/./src/_app/shared/MasterLayout/ViewModels/MasterLayoutViewModel.ts","webpack://adiba-central/./src/_app/shared/MasterLayout/components/FlyoutMenu.tsx","webpack://adiba-central/./src/_app/shared/MasterLayout/components/MobileSidebar.tsx","webpack://adiba-central/./src/_app/shared/MasterLayout/components/MobileSidebarToggle.tsx","webpack://adiba-central/./src/_app/shared/MasterLayout/components/Sidebar.tsx","webpack://adiba-central/./src/_app/shared/MasterLayout/components/SidebarMain.tsx","webpack://adiba-central/./src/_app/shared/MasterLayout/components/Topbar.tsx","webpack://adiba-central/./src/_app/shared/Profile.tsx","webpack://adiba-central/./src/_app/shared/SidebarSecondary.tsx","webpack://adiba-central/./src/_app/shared/SlideOver.tsx","webpack://adiba-central/./src/_app/shared/ViewModels/UserMgtViewModel.ts","webpack://adiba-central/./src/_app/shared/components/layouts/dashboard.tsx","webpack://adiba-central/./src/_app/shared/components/layouts/default.tsx","webpack://adiba-central/./src/_app/shared/member/SignUpSteps.tsx","webpack://adiba-central/./src/_app/shared/member/UserMgtForm.tsx","webpack://adiba-central/./src/_app/shared/member/UserWizard.tsx","webpack://adiba-central/./src/_app/shared/models/FeedViewModel.ts","webpack://adiba-central/./src/_app/shared/models/_BaseViewModel.ts","webpack://adiba-central/./src/_app/shared/utils/className.tsx","webpack://adiba-central/./src/index.tsx","webpack://adiba-central/./src/landing/components/ContactUs.tsx","webpack://adiba-central/./src/landing/components/Features.tsx","webpack://adiba-central/./src/landing/components/Footers.tsx","webpack://adiba-central/./src/landing/components/Hero.tsx","webpack://adiba-central/./src/landing/components/LogoClouds.tsx","webpack://adiba-central/./src/landing/components/Testimonials.tsx","webpack://adiba-central/./src/landing/index.tsx","webpack://adiba-central/./src/member/forgotpassword.tsx","webpack://adiba-central/./src/member/forms/Administrator.tsx","webpack://adiba-central/./src/member/forms/BusinessEntity.tsx","webpack://adiba-central/./src/member/forms/ForgotPasswordContent.tsx","webpack://adiba-central/./src/member/forms/SignInContent.tsx","webpack://adiba-central/./src/member/forms/SignUpWizard.tsx","webpack://adiba-central/./src/member/forms/Summary.tsx","webpack://adiba-central/./src/member/login.tsx","webpack://adiba-central/./src/member/signup.tsx","webpack://adiba-central/./node_modules/formik/dist/formik.esm.js","webpack://adiba-central/./node_modules/formik/node_modules/deepmerge/dist/es.js","webpack://adiba-central/./node_modules/piral-page-layouts/esm/actions.js","webpack://adiba-central/./node_modules/piral-page-layouts/esm/create.js","webpack://adiba-central/./node_modules/piral/esm/api.js","webpack://adiba-central/./node_modules/piral/esm/app.js","webpack://adiba-central/./node_modules/piral/esm/hydrate.js","webpack://adiba-central/./node_modules/piral/esm/index.js","webpack://adiba-central/./node_modules/piral/esm/instance.js","webpack://adiba-central/./node_modules/piral/esm/options.js","webpack://adiba-central/./node_modules/piral/esm/render.js","webpack://adiba-central/./node_modules/piral/esm/run.js","webpack://adiba-central/./node_modules/property-expr/index.js","webpack://adiba-central/./node_modules/react-fast-compare/index.js","webpack://adiba-central/./node_modules/tiny-case/index.js","webpack://adiba-central/./node_modules/toposort/index.js","webpack://adiba-central/./node_modules/yup/index.esm.js","webpack://adiba-central/webpack/runtime/compat get default export","webpack://adiba-central/webpack/runtime/define property getters","webpack://adiba-central/webpack/runtime/getFullHash","webpack://adiba-central/webpack/runtime/make namespace object"],"sourcesContent":["import { PiletApi } from \"piral-core\";\nimport * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Landing from \"../landing\";\nimport LandingPage from \"../landing\";\nimport Forgotpassword from \"../member/forgotpassword\";\nimport SignIn from \"../member/login\";\nimport SignUp from \"../member/signup\";\nimport { DashboardT } from \"./shared/components/layouts/dashboard\";\nimport MasterLayout from \"./shared/MasterLayout/MasterLayout\";\nimport UserMgtForm from \"./shared/member/UserMgtForm\";\n\nexport function setupShell(app: PiletApi) {\n  //   LAYOUTS REGISTRATION\n  app.registerPageLayout(\"dashboard\", ({ children }) => (\n    <>\n      <MasterLayout content={children} />\n    </>\n  ));\n\n  app.registerPageLayout(\"landing\", ({ children }) => (\n    <>\n      <div>Header Landing</div>\n      <div>Navigation </div>\n      {children}\n      <div> footer </div>\n    </>\n  ));\n\n  app.registerPageLayout(\"member-login\", ({ children }) => (\n    <UserMgtForm\n      content={children}\n      title={\"Sign in to your account\"}\n      subtitle={\"Or start your 14-day free trial\"}\n    />\n  ));\n\n  app.registerPageLayout(\"member-signup\", ({ children }) => (\n    <UserMgtForm\n      content={children}\n      title={\"Client Enrollment Wizard\"}\n      subtitle={\"Fill in client information to begin registration\"}\n    />\n  ));\n\n  app.registerPageLayout(\"member-forgotpassword\", ({ children }) => (\n    <UserMgtForm\n      content={children}\n      title={\"Forgot Password\"}\n      subtitle={\n        \"Provide your email address and we will send you a link to reset your password\"\n      }\n    />\n  ));\n  // app.registerPage(\"/\", Landing);\n  app.registerPage(\"/login\", SignIn, {\n    layout: \"member-login\",\n  });\n  app.registerPage(\"/sign-up\", SignUp, {\n    layout: \"member-signup\",\n  });\n  app.registerPage(\"/forgetpassword\", Forgotpassword, {\n    layout: \"member-forgotpassword\",\n  });\n  app.registerPage(\"/dashboard\", DashboardT, {\n    layout: \"dashboard\",\n  });\n}\n","import { CalendarIcon, ChartBarIcon, FolderIcon, HomeIcon, InboxIcon, UsersIcon, Cog6ToothIcon } from '@heroicons/react/24/outline'\nimport { SVGProps } from 'react';\n\nexport const navigation = [\n    { name: 'Dashboard', icon: HomeIcon, href: '/', current: true },\n    { name: 'Team', icon: UsersIcon, href: '#', current: false },\n    { name: 'Projects', icon: FolderIcon, href: '#', current: false },\n    { name: 'Calendar', icon: CalendarIcon, href: '#', current: false },\n    { name: 'Documents', icon: InboxIcon, href: '#', current: false },\n    { name: 'Reports', icon: ChartBarIcon, href: '#', current: false },\n    { name: 'Settings', icon: Cog6ToothIcon, href: '/settings', current: false },\n]\n\nconst icon = navigation.map(()=>{\n\n})\n\nconst iconMapping: { [key: string]: React.ComponentType<SVGProps<SVGSVGElement> & { title?: string; titleId?: string }> } = {\n    \"home\": HomeIcon,\n    \"users\": UsersIcon,\n    \"folder\": FolderIcon,\n    \"calendar\": CalendarIcon,\n    \"inbox\": InboxIcon,\n    \"chartbar\": ChartBarIcon,\n    \"cog\": Cog6ToothIcon\n}\n\n\nexport function setIcon(text: string): any{\n    return iconMapping[text]\n}\n\nexport const secondaryNavigation = [\n    { name: 'Website redesign', href: '#' },\n    { name: 'GraphQL API', href: '#' },\n    { name: 'Customer migration guides', href: '#' },\n    { name: 'Profit sharing program', href: '#' },\n]\n\nexport const userNavigation = [\n    { name: 'Your Profile', href: '#' },\n    { name: 'Settings', href: '#' },\n    { name: 'Sign out', href: '#' },\n]\n\nlet nav = [\n    { \"name\": \"Dashboard\", \"icon\": \"home\", \"href\": \"/\", \"current\": true },\n    { \"name\": \"Team\", \"icon\": \"users\", \"href\": \"#\", \"current\": false },\n    { \"name\": \"Projects\", \"icon\": \"folder\", \"href\": \"#\", \"current\": false },\n    { \"name\": \"Calendar\", \"icon\": \"calendar\", \"href\": \"#\", \"current\": false },\n    { \"name\": \"Documents\", \"icon\": \"inbox\", \"href\": \"#\", \"current\": false },\n    { \"name\": \"Reports\", \"icon\": \"chartbar\", \"href\": \"#\", \"current\": false },\n    { \"name\": \"Settings\", \"icon\": \"cog\", \"href\": \"/settings\", \"current\": false }\n]","import * as React from \"react\";\nimport { Fragment, useState } from \"react\";\nimport { Combobox, Dialog, Transition } from \"@headlessui/react\";\nimport { MagnifyingGlassIcon } from \"@heroicons/react/20/solid\";\nimport {\n  ExclamationTriangleIcon,\n  FolderIcon,\n  LifebuoyIcon,\n} from \"@heroicons/react/24/outline\";\nimport { classNames } from \"./utils/className\";\n\nconst projects = [\n  {\n    id: 1,\n    name: \"Workflow Inc. / Website Redesign\",\n    category: \"Projects\",\n    url: \"#\",\n  },\n  // More projects...\n];\n\nconst users = [\n  {\n    id: 1,\n    name: \"Leslie Alexander\",\n    url: \"#\",\n    imageUrl:\n      \"https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\",\n  },\n  // More users...\n];\n\ninterface CommandPaletteProps {\n  openPalette: boolean;\n  setOpenPalette: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport default function CommandPalette(\n  props: React.PropsWithChildren<CommandPaletteProps>\n) {\n  const { openPalette, setOpenPalette } = props;\n  const [rawQuery, setRawQuery] = useState(\"\");\n\n  const query = rawQuery.toLowerCase().replace(/^[#>]/, \"\");\n\n  const filteredProjects =\n    rawQuery === \"#\"\n      ? projects\n      : query === \"\" || rawQuery.startsWith(\">\")\n      ? []\n      : projects.filter((project) =>\n          project.name.toLowerCase().includes(query)\n        );\n\n  const filteredUsers =\n    rawQuery === \">\"\n      ? users\n      : query === \"\" || rawQuery.startsWith(\"#\")\n      ? []\n      : users.filter((user) => user.name.toLowerCase().includes(query));\n\n  return (\n    <Transition.Root\n      show={openPalette}\n      as={Fragment}\n      afterLeave={() => setRawQuery(\"\")}\n      appear\n    >\n      <Dialog as='div' className='relative z-10' onClose={setOpenPalette}>\n        <Transition.Child\n          as={Fragment}\n          enter='ease-out duration-300'\n          enterFrom='opacity-0'\n          enterTo='opacity-100'\n          leave='ease-in duration-200'\n          leaveFrom='opacity-100'\n          leaveTo='opacity-0'\n        >\n          <div className='fixed inset-0 bg-gray-500 bg-opacity-25 transition-opacity' />\n        </Transition.Child>\n\n        <div className='fixed inset-0 z-10 overflow-y-auto p-4 sm:p-6 md:p-20'>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0 scale-95'\n            enterTo='opacity-100 scale-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100 scale-100'\n            leaveTo='opacity-0 scale-95'\n          >\n            <Dialog.Panel className='mx-auto max-w-xl transform divide-y divide-gray-100 overflow-hidden rounded-xl bg-white shadow-2xl ring-1 ring-black ring-opacity-5 transition-all'>\n              <Combobox\n              //   onChange={(item) => (window.location = item.url)}\n              >\n                <div className='relative'>\n                  <MagnifyingGlassIcon\n                    className='pointer-events-none absolute top-3.5 left-4 h-5 w-5 text-gray-400'\n                    aria-hidden='true'\n                  />\n                  <Combobox.Input\n                    className='h-12 w-full border-0 bg-transparent pl-11 pr-4 text-gray-800 placeholder-gray-400 focus:ring-0 sm:text-sm'\n                    placeholder='Search...'\n                    onChange={(event) => setRawQuery(event.target.value)}\n                  />\n                </div>\n\n                {(filteredProjects.length > 0 || filteredUsers.length > 0) && (\n                  <Combobox.Options\n                    static\n                    className='max-h-80 scroll-py-10 scroll-py-10 scroll-pb-2 scroll-pb-2 space-y-4 overflow-y-auto p-4 pb-2'\n                  >\n                    {filteredProjects.length > 0 && (\n                      <li>\n                        <h2 className='text-xs font-semibold text-gray-900'>\n                          Projects\n                        </h2>\n                        <ul className='-mx-4 mt-2 text-sm text-gray-700'>\n                          {filteredProjects.map((project) => (\n                            <Combobox.Option\n                              key={project.id}\n                              value={project}\n                              className={({ active }) =>\n                                classNames(\n                                  active\n                                    ? \"flex cursor-default select-none items-center px-4 py-2\"\n                                    : \"flex cursor-default select-none items-center px-4 py-2 bg-indigo-600 text-white\"\n                                )\n                              }\n                            >\n                              {({ active }) => (\n                                <>\n                                  <FolderIcon\n                                    className={classNames(\n                                      \"h-6 w-6 flex-none\",\n                                      active ? \"text-white\" : \"text-gray-400\"\n                                    )}\n                                    aria-hidden='true'\n                                  />\n                                  <span className='ml-3 flex-auto truncate'>\n                                    {project.name}\n                                  </span>\n                                </>\n                              )}\n                            </Combobox.Option>\n                          ))}\n                        </ul>\n                      </li>\n                    )}\n                    {filteredUsers.length > 0 && (\n                      <li>\n                        <h2 className='text-xs font-semibold text-gray-900'>\n                          Users\n                        </h2>\n                        <ul className='-mx-4 mt-2 text-sm text-gray-700'>\n                          {filteredUsers.map((user) => (\n                            <Combobox.Option\n                              key={user.id}\n                              value={user}\n                              className={({ active }) =>\n                                classNames(\n                                  active\n                                    ? \"flex cursor-default select-none items-center px-4 py-2\"\n                                    : \"flex cursor-default select-none items-center px-4 py-2 bg-indigo-600 text-white\"\n                                )\n                              }\n                            >\n                              <img\n                                src={user.imageUrl}\n                                alt=''\n                                className='h-6 w-6 flex-none rounded-full'\n                              />\n                              <span className='ml-3 flex-auto truncate'>\n                                {user.name}\n                              </span>\n                            </Combobox.Option>\n                          ))}\n                        </ul>\n                      </li>\n                    )}\n                  </Combobox.Options>\n                )}\n\n                {rawQuery === \"?\" && (\n                  <div className='py-14 px-6 text-center text-sm sm:px-14'>\n                    <LifebuoyIcon\n                      className='mx-auto h-6 w-6 text-gray-400'\n                      aria-hidden='true'\n                    />\n                    <p className='mt-4 font-semibold text-gray-900'>\n                      Help with searching\n                    </p>\n                    <p className='mt-2 text-gray-500'>\n                      Use this tool to quickly search for users and projects\n                      across our entire platform. You can also use the search\n                      modifiers found in the footer below to limit the results\n                      to just users or projects.\n                    </p>\n                  </div>\n                )}\n\n                {query !== \"\" &&\n                  rawQuery !== \"?\" &&\n                  filteredProjects.length === 0 &&\n                  filteredUsers.length === 0 && (\n                    <div className='py-14 px-6 text-center text-sm sm:px-14'>\n                      <ExclamationTriangleIcon\n                        className='mx-auto h-6 w-6 text-gray-400'\n                        aria-hidden='true'\n                      />\n                      <p className='mt-4 font-semibold text-gray-900'>\n                        No results found\n                      </p>\n                      <p className='mt-2 text-gray-500'>\n                        We couldn’t find anything with that term. Please try\n                        again.\n                      </p>\n                    </div>\n                  )}\n\n                <div className='flex flex-wrap items-center bg-gray-50 py-2.5 px-4 text-xs text-gray-700'>\n                  Type{\" \"}\n                  <kbd\n                    className={classNames(\n                      \"mx-1 flex h-5 w-5 items-center justify-center rounded border bg-white font-semibold sm:mx-2\",\n                      rawQuery.startsWith(\"#\")\n                        ? \"border-indigo-600 text-indigo-600\"\n                        : \"border-gray-400 text-gray-900\"\n                    )}\n                  >\n                    #\n                  </kbd>{\" \"}\n                  <span className='sm:hidden'>for projects,</span>\n                  <span className='hidden sm:inline'>to access projects,</span>\n                  <kbd\n                    className={classNames(\n                      \"mx-1 flex h-5 w-5 items-center justify-center rounded border bg-white font-semibold sm:mx-2\",\n                      rawQuery.startsWith(\">\")\n                        ? \"border-indigo-600 text-indigo-600\"\n                        : \"border-gray-400 text-gray-900\"\n                    )}\n                  >\n                    &gt;\n                  </kbd>{\" \"}\n                  for users, and{\" \"}\n                  <kbd\n                    className={classNames(\n                      \"mx-1 flex h-5 w-5 items-center justify-center rounded border bg-white font-semibold sm:mx-2\",\n                      rawQuery === \"?\"\n                        ? \"border-indigo-600 text-indigo-600\"\n                        : \"border-gray-400 text-gray-900\"\n                    )}\n                  >\n                    ?\n                  </kbd>{\" \"}\n                  for help.\n                </div>\n              </Combobox>\n            </Dialog.Panel>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  );\n}\n","import * as React from \"react\";\nimport { Fragment } from \"react\";\nimport {\n  ChatBubbleLeftEllipsisIcon,\n  TagIcon,\n  UserCircleIcon,\n} from \"@heroicons/react/20/solid\";\nimport { classNames } from \"./utils/className\";\nimport FeedViewModel from \"./models/FeedViewModel\";\n\nexport default function Feed() {\n  const [activity, setActivity] = React.useState([]);\n  React.useEffect(() => {\n    const feedViewModelsInstance = new FeedViewModel(\"feed\");\n    const listTable = feedViewModelsInstance.list();\n    listTable\n      .then((response: any) => response.json())\n      .then((data: any) => setActivity(data));\n  }, []);\n  return (\n    <div className='flow-root'>\n      <ul className='-mb-8'>\n        {activity.map((activityItem, activityItemIdx) => (\n          <li key={activityItem.id}>\n            <div className='relative pb-8'>\n              {activityItemIdx !== activity.length - 1 ? (\n                <span\n                  className='absolute top-5 left-5 -ml-px h-full w-0.5 bg-gray-200'\n                  aria-hidden='true'\n                />\n              ) : null}\n              <div className='relative flex items-start space-x-3'>\n                {activityItem.type === \"comment\" ? (\n                  <>\n                    <div className='relative'>\n                      <img\n                        className='flex h-10 w-10 items-center justify-center rounded-full bg-gray-400 ring-8 ring-white'\n                        src={activityItem.imageUrl}\n                        alt=''\n                      />\n\n                      <span className='absolute -bottom-0.5 -right-1 rounded-tl bg-white px-0.5 py-px'>\n                        <ChatBubbleLeftEllipsisIcon\n                          className='h-5 w-5 text-gray-400'\n                          aria-hidden='true'\n                        />\n                      </span>\n                    </div>\n                    <div className='min-w-0 flex-1'>\n                      <div>\n                        <div className='text-sm'>\n                          <a\n                            href={activityItem.person.href}\n                            className='font-medium text-gray-900'\n                          >\n                            {activityItem.person.name}\n                          </a>\n                        </div>\n                        <p className='mt-0.5 text-sm text-gray-500'>\n                          Commented {activityItem.date}\n                        </p>\n                      </div>\n                      <div className='mt-2 text-sm text-gray-700'>\n                        <p>{activityItem.comment}</p>\n                      </div>\n                    </div>\n                  </>\n                ) : activityItem.type === \"assignment\" ? (\n                  <>\n                    <div>\n                      <div className='relative px-1'>\n                        <div className='flex h-8 w-8 items-center justify-center rounded-full bg-gray-100 ring-8 ring-white'>\n                          <UserCircleIcon\n                            className='h-5 w-5 text-gray-500'\n                            aria-hidden='true'\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className='min-w-0 flex-1 py-1.5'>\n                      <div className='text-sm text-gray-500'>\n                        <a\n                          href={activityItem.person.href}\n                          className='font-medium text-gray-900'\n                        >\n                          {activityItem.person.name}\n                        </a>{\" \"}\n                        assigned{\" \"}\n                        <a\n                          href={\n                            activityItem.assigned\n                              ? activityItem.assigned.href\n                              : \"#\"\n                          }\n                          className='font-medium text-gray-900'\n                        >\n                          {activityItem.assigned\n                            ? activityItem.assigned.name\n                            : \"\"}\n                        </a>{\" \"}\n                        <span className='whitespace-nowrap'>\n                          {activityItem.date}\n                        </span>\n                      </div>\n                    </div>\n                  </>\n                ) : activityItem.type === \"tags\" ? (\n                  <>\n                    <div>\n                      <div className='relative px-1'>\n                        <div className='flex h-8 w-8 items-center justify-center rounded-full bg-gray-100 ring-8 ring-white'>\n                          <TagIcon\n                            className='h-5 w-5 text-gray-500'\n                            aria-hidden='true'\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className='min-w-0 flex-1 py-0'>\n                      <div className='text-sm leading-8 text-gray-500'>\n                        <span className='mr-0.5'>\n                          <a\n                            href={activityItem.person.href}\n                            className='font-medium text-gray-900'\n                          >\n                            {activityItem.person.name}\n                          </a>{\" \"}\n                          added tags\n                        </span>{\" \"}\n                        <span className='mr-0.5'>\n                          {activityItem.tags\n                            ? activityItem.tags.map((tag) => (\n                                <Fragment key={tag.name}>\n                                  <a\n                                    href={tag.href}\n                                    className='relative inline-flex items-center rounded-full border border-gray-300 px-3 py-0.5 text-sm'\n                                  >\n                                    <span className='absolute flex flex-shrink-0 items-center justify-center'>\n                                      <span\n                                        className={classNames(\n                                          tag.color,\n                                          \"h-1.5 w-1.5 rounded-full\"\n                                        )}\n                                        aria-hidden='true'\n                                      />\n                                    </span>\n                                    <span className='ml-3.5 font-medium text-gray-900'>\n                                      {tag.name}\n                                    </span>\n                                  </a>{\" \"}\n                                </Fragment>\n                              ))\n                            : \"\"}\n                        </span>\n                        <span className='whitespace-nowrap'>\n                          {activityItem.date}\n                        </span>\n                      </div>\n                    </div>\n                  </>\n                ) : null}\n              </div>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import * as React from \"react\";\n\nconst activityItems = [\n  {\n      \"id\": 1,\n      \"person\": {\n        \"name\": \"Lindsay Walton\",\n        \"imageUrl\":\n          \"https://images.unsplash.com/photo-1517841905240-472988babdf9?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=3&w=256&h=256&q=80\",\n      },\n      \"project\": \"Workcation\",\n      \"commit\": \"2d89f0c8\",\n      \"environment\": \"production\",\n      \"time\": \"1h\"\n  },\n  {\n    \"id\": 2,\n    \"person\": {\n        \"name\": \"John Doe\",\n        \"imageUrl\": \"https://images.unsplash.com/photo-1549880338-65ddcdfd017b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\"\n    },\n    \"project\": \"Project X\",\n    \"commit\": \"9f9d8e7b\",\n    \"environment\": \"staging\",\n    \"time\": \"30m\"\n  },\n]\n\nexport default function FeedStandardList() {\n\n    return (\n        <div>\n          <ul className=\"divide-y divide-gray-200\">\n            {activityItems.map((activityItem) => (\n              <li key={activityItem.id} className=\"py-4\">\n                <div className=\"flex space-x-3\">\n                  <img className=\"h-6 w-6 rounded-full\" src={activityItem.person.imageUrl} alt=\"\" />\n                  <div className=\"flex-1 space-y-1\">\n                    <div className=\"flex items-center justify-between\">\n                      <h3 className=\"text-sm font-medium\">{activityItem.person.name}</h3>\n                      <p className=\"text-sm text-gray-500\">{activityItem.time}</p>\n                    </div>\n                    <p className=\"text-sm text-gray-500\">\n                      Deployed {activityItem.project} ({activityItem.commit} in master) to {activityItem.environment}\n                    </p>\n                  </div>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )\n}","import * as React from 'react'\nimport { Fragment, useState } from 'react'\nimport Sidebar from './components/Sidebar'\nimport Topbar from './components/Topbar'\nimport MobileSidebar from './components/MobileSidebar'\nimport MobileSidebarToggle from './components/MobileSidebarToggle'\n// import Settings from '../components/Settings'\n\ninterface MasterLayoutProps {\n  content: React.ReactNode\n}\n\nexport default function MasterLayout(props: React.PropsWithChildren<MasterLayoutProps>) {\n\n  const { content } = props\n\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n\n  return (\n    <>\n      <div>\n        <MobileSidebar show={sidebarOpen} toggle={setSidebarOpen}/>\n\n        {/* Static sidebar for desktop */}\n          <Sidebar/>\n        <div className=\"flex flex-1 flex-col md:pl-64\">\n          <div className=\"sticky top-0 z-10 flex h-16 flex-shrink-0 bg-white shadow\">\n            <MobileSidebarToggle toggle={setSidebarOpen}/>\n            <Topbar/>\n          </div>\n          <div className='px-4 sm:pr-6 lg:px-8 sm:pt-8'>\n          {content}\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n","import { useState } from \"react\";\nimport _BaseViewModel from \"../../models/_BaseViewModel\";\nimport { NavigationList } from \"../components/SidebarMain\";\n\n// define the interface for the view model\ninterface ViewModel {\n  navs: NavigationList[];\n  updateNavs(newUsers: NavigationList[]): void;\n}\n\n// create a function that returns a view model object\nconst useViewModel = (): ViewModel => {\n  const [navs, setNavs] = useState<NavigationList[]>([]); // initialize the users state\n\n  // define a function that updates the users state\n  const updateNavs = (newUsers: NavigationList[]) => {\n    setNavs(newUsers);\n  };\n\n  // return the view model object\n  return { navs, updateNavs };\n};\n\nclass MasterLayoutViewModel extends _BaseViewModel {\n  constructor(data: any) {\n    super(data);\n  }\n\n  async navList(currentApp: any = null) {\n    if (currentApp === \"channels\") {\n      this._setAll({ path: \"113e80da-23da-4cdd-9fd4-c60b89560ae6\" });\n      console.log(\"hereeee\");\n    } else {\n      this._setAll({ path: \"2d664a5c-b14c-4232-b3d5-43a53679cf0a\" });\n    }\n    return await this.get();\n  }\n}\n\nexport default MasterLayoutViewModel;\n\n// export default useViewModel;\n","import * as React from \"react\";\nimport { Popover, Transition } from \"@headlessui/react\";\nimport { ChevronDownIcon } from \"@heroicons/react/20/solid\";\nimport {\n  ArrowPathIcon,\n  ChartBarIcon,\n  CursorArrowRaysIcon,\n  PhoneIcon,\n  PlayIcon,\n  ShieldCheckIcon,\n  Squares2X2Icon,\n} from \"@heroicons/react/24/outline\";\nimport { classNames } from \"../../utils/className\";\n\nexport const solutions = [\n  {\n    name: \"Channels Engine\",\n    description:\n      \"Get a better understanding of where your traffic is coming from.\",\n    href: \"/channels\",\n    icon: ChartBarIcon,\n  },\n  {\n    name: \"Retail/Loan Engine\",\n    description: \"Speak directly to your customers in a more meaningful way.\",\n    href: \"#\",\n    icon: CursorArrowRaysIcon,\n  },\n  {\n    name: \"Security\",\n    description: \"Your customers' data will be safe and secure.\",\n    href: \"#\",\n    icon: ShieldCheckIcon,\n  },\n  {\n    name: \"CRM/Helpdesk Engine\",\n    description: \"Connect with third-party tools that you're already using.\",\n    href: \"#\",\n    icon: Squares2X2Icon,\n  },\n  {\n    name: \"Performance Insights\",\n    description:\n      \"Build strategic funnels that will drive your customers to convert\",\n    href: \"#\",\n    icon: ArrowPathIcon,\n  },\n];\nconst callsToAction = [\n  { name: \"Watch Demo\", href: \"#\", icon: PlayIcon },\n  { name: \"Contact Sales\", href: \"#\", icon: PhoneIcon },\n];\nexport const CurrentAppContext = React.createContext<string | null>(null);\nexport default function FlyoutMenu() {\n  const [currentApp, setCurrentApp] = React.useState<string | null>(null);\n\n  const handleSwitch = (name: string) => {\n    localStorage.setItem(\"currentApp\", name);\n  };\n\n  return (\n    <CurrentAppContext.Provider value={currentApp}>\n      <Popover className='relative'>\n        {({ open }) => (\n          <>\n            <Popover.Button\n              className={classNames(\n                open ? \"text-gray-900\" : \"text-gray-500\",\n                \"group inline-flex items-center rounded-md bg-white text-base font-medium hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 md:pl-12\"\n              )}\n            >\n              <span>Choose an application {currentApp}</span>\n              <ChevronDownIcon\n                className={classNames(\n                  open ? \"text-gray-600\" : \"text-gray-400\",\n                  \"ml-2 h-5 w-5 group-hover:text-gray-500\"\n                )}\n                aria-hidden='true'\n              />\n            </Popover.Button>\n\n            <Transition\n              as={React.Fragment}\n              enter='transition ease-out duration-200'\n              enterFrom='opacity-0 translate-y-1'\n              enterTo='opacity-100 translate-y-0'\n              leave='transition ease-in duration-150'\n              leaveFrom='opacity-100 translate-y-0'\n              leaveTo='opacity-0 translate-y-1'\n            >\n              <Popover.Panel className='absolute md:left-64 left-32 z-10 mt-3 w-screen max-w-md -translate-x-1/2 transform px-2 sm:px-0'>\n                <div className='overflow-hidden rounded-lg shadow-lg ring-1 ring-black ring-opacity-5'>\n                  <div className='relative grid gap-6 bg-white px-5 py-6 sm:gap-8 sm:p-8'>\n                    {solutions.map((item) => (\n                      <a\n                        key={item.name}\n                        href={item.href}\n                        onClick={() => handleSwitch(item.href.slice(1))}\n                        className='-m-3 flex items-start rounded-lg p-3 transition duration-150 ease-in-out hover:bg-gray-50'\n                      >\n                        <item.icon\n                          className='h-6 w-6 flex-shrink-0 text-indigo-600'\n                          aria-hidden='true'\n                        />\n                        <div className='ml-4'>\n                          <p className='text-base font-medium text-gray-900'>\n                            {item.name}\n                          </p>\n                          <p className='mt-1 text-sm text-gray-500'>\n                            {item.description}\n                          </p>\n                        </div>\n                      </a>\n                    ))}\n                  </div>\n                  <div className='space-y-6 bg-gray-50 px-5 py-5 sm:flex sm:space-y-0 sm:space-x-10 sm:px-8'>\n                    {callsToAction.map((item) => (\n                      <div key={item.name} className='flow-root'>\n                        <a\n                          href={item.href}\n                          className='-m-3 flex items-center rounded-md p-3 text-base font-medium text-gray-900 transition duration-150 ease-in-out hover:bg-gray-100'\n                        >\n                          <item.icon\n                            className='h-6 w-6 flex-shrink-0 text-gray-400'\n                            aria-hidden='true'\n                          />\n                          <span className='ml-3'>{item.name}</span>\n                        </a>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </Popover.Panel>\n            </Transition>\n          </>\n        )}\n      </Popover>\n    </CurrentAppContext.Provider>\n  );\n}\n","import * as React from \"react\";\nimport { Dialog, Transition } from \"@headlessui/react\";\nimport { XMarkIcon } from \"@heroicons/react/24/outline\";\nimport { classNames } from \"../../utils/className\";\nimport { navigation } from \"../../ChannelsMenu\";\nimport SidebarSecondary from \"../../SidebarSecondary\";\nimport { Fragment } from \"react\";\n\ninterface MobileSidebarProps {\n  show: boolean;\n  toggle: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport default function MobileSidebar(\n  props: React.PropsWithChildren<MobileSidebarProps>\n) {\n  const { show, toggle } = props;\n  return (\n    <Transition.Root show={show} as={Fragment}>\n      <Dialog as='div' className='relative z-40 md:hidden' onClose={toggle}>\n        <Transition.Child\n          as={Fragment}\n          enter='transition-opacity ease-linear duration-300'\n          enterFrom='opacity-0'\n          enterTo='opacity-100'\n          leave='transition-opacity ease-linear duration-300'\n          leaveFrom='opacity-100'\n          leaveTo='opacity-0'\n        >\n          <div className='fixed inset-0 bg-gray-600 bg-opacity-75' />\n        </Transition.Child>\n\n        <div className='fixed inset-0 z-40 flex'>\n          <Transition.Child\n            as={Fragment}\n            enter='transition ease-in-out duration-300 transform'\n            enterFrom='-translate-x-full'\n            enterTo='translate-x-0'\n            leave='transition ease-in-out duration-300 transform'\n            leaveFrom='translate-x-0'\n            leaveTo='-translate-x-full'\n          >\n            <Dialog.Panel className='relative flex w-full max-w-xs flex-1 flex-col bg-white pt-5 pb-4'>\n              <Transition.Child\n                as={Fragment}\n                enter='ease-in-out duration-300'\n                enterFrom='opacity-0'\n                enterTo='opacity-100'\n                leave='ease-in-out duration-300'\n                leaveFrom='opacity-100'\n                leaveTo='opacity-0'\n              >\n                <div className='absolute top-0 right-0 -mr-12 pt-2'>\n                  <button\n                    type='button'\n                    className='ml-1 flex h-10 w-10 items-center justify-center rounded-full focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white'\n                    onClick={() => toggle(false)}\n                  >\n                    <span className='sr-only'>Close sidebar</span>\n                    <XMarkIcon\n                      className='h-6 w-6 text-white'\n                      aria-hidden='true'\n                    />\n                  </button>\n                </div>\n              </Transition.Child>\n              <div className='flex flex-shrink-0 items-center px-4'>\n                <img\n                  className='h-8 w-auto'\n                  src='https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600'\n                  alt='Your Company'\n                />\n              </div>\n              <div className='mt-5 h-0 flex-1 overflow-y-auto'>\n                <nav className='space-y-1 px-2'>\n                  {navigation.map((item) => (\n                    <a\n                      key={item.name}\n                      href={item.href}\n                      className={classNames(\n                        item.current\n                          ? \"bg-gray-100 text-gray-900\"\n                          : \"text-gray-600 hover:bg-gray-50 hover:text-gray-900\",\n                        \"group flex items-center px-2 py-2 text-base font-medium rounded-md\"\n                      )}\n                    >\n                      <item.icon\n                        className={classNames(\n                          item.current\n                            ? \"text-gray-500\"\n                            : \"text-gray-400 group-hover:text-gray-500\",\n                          \"mr-4 flex-shrink-0 h-6 w-6\"\n                        )}\n                        aria-hidden='true'\n                      />\n                      {item.name}\n                    </a>\n                  ))}\n                  <SidebarSecondary />\n                </nav>\n              </div>\n            </Dialog.Panel>\n          </Transition.Child>\n          <div className='w-14 flex-shrink-0' aria-hidden='true'>\n            {/* Dummy element to force sidebar to shrink to fit close icon */}\n          </div>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  );\n}\n","import React from \"react\";\nimport {\n    Bars3BottomLeftIcon,\n  } from '@heroicons/react/24/outline'\n\ninterface MobileSidbarToggleProps {\n    toggle: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport default function MobileSidebarToggle(props: React.PropsWithChildren<MobileSidbarToggleProps>) {\n\n    const { toggle } = props\n\n    return (\n        <>\n            <button\n              type=\"button\"\n              className=\"border-r border-gray-200 px-4 text-gray-500 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500 md:hidden\"\n              onClick={() => toggle(true)}\n            >\n              <span className=\"sr-only\">Open sidebar</span>\n              <Bars3BottomLeftIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n            </button>\n        </>\n    )\n}\n","import SidebarMain from \"./SidebarMain\";\nimport * as React from \"react\";\nimport MasterLayoutViewModel from \"../ViewModels/MasterLayoutViewModel\";\nimport SidebarInstance from \"../ViewModels/MasterLayoutViewModel\";\nimport { CurrentAppContext } from \"./FlyoutMenu\";\nimport { classNames } from \"../../utils/className\";\nimport SidebarSecondary from \"../../SidebarSecondary\";\nimport { setIcon } from \"../../ChannelsMenu\";\n\nexport default function Sidebar() {\n  const [result, setResult] = React.useState([]);\n  const currentApp = localStorage.getItem(\"currentApp\") || null;\n  React.useEffect(() => {\n    const clientsViewModelsInstance = new MasterLayoutViewModel(\"nav\");\n    const navList = clientsViewModelsInstance.navList(currentApp);\n    navList\n      .then((response: any) => response.json())\n      .then((data: any) => {\n        const updatedData = data.map((item: any) => {\n          return {\n            ...item,\n            icon: setIcon(item.icon),\n          };\n        });\n        setResult(updatedData);\n      });\n  }, []);\n\n  console.log(\"ln 30\", result);\n  return (\n    <div className='hidden md:fixed md:inset-y-0 md:flex md:w-64 md:flex-col'>\n      {/* Sidebar component, swap this element with another sidebar if you like */}\n      <div className='flex flex-grow flex-col overflow-y-auto border-r border-gray-200 bg-white pt-5 pb-4'>\n        <div className='flex flex-shrink-0 items-center px-4'>\n          <img\n            className='h-8 w-auto'\n            src='https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600'\n            alt='Your Company'\n          />\n        </div>\n        <div className='mt-5 flex flex-grow flex-col'>\n          <nav className='flex-1 space-y-8 bg-white px-2' aria-label='Sidebar'>\n            <SidebarMain classFn={classNames} navList={result} />\n            <SidebarSecondary />\n          </nav>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react'\n\nexport interface NavigationList {\n    name: string, \n    href: string, \n    icon: any, \n    current: boolean\n}\n\ninterface SidebarProps {\n    navList?: Array<NavigationList>,\n    classFn: any\n}\n\nexport default function SidebarMain(props: React.PropsWithChildren<SidebarProps>){\n\n    const { navList, classFn } = props\n\n    return (\n        <div className=\"space-y-1\">\n            {navList?.map((item) => (\n                <a\n                key={item.name}\n                href={item.href}\n                className={classFn(\n                    item.current ? 'bg-gray-100 text-gray-900' : 'text-gray-600 hover:bg-gray-50 hover:text-gray-900',\n                    'group flex items-center px-2 py-2 text-sm font-medium rounded-md'\n                )}\n                >\n                <item.icon\n                    className={classFn(\n                    item.current ? 'text-gray-500' : 'text-gray-400 group-hover:text-gray-500',\n                    'mr-3 flex-shrink-0 h-6 w-6'\n                    )}\n                    aria-hidden=\"true\"\n                />\n                {item.name}\n                </a>\n            ))}\n        </div>\n    )\n}\n","import * as React from \"react\";\nimport { Menu } from \"@headlessui/react\";\nimport { BellIcon, EnvelopeIcon } from \"@heroicons/react/24/outline\";\nimport { MagnifyingGlassIcon } from \"@heroicons/react/20/solid\";\n// import SlideOver from '../../../../components/SlideOver';\nimport FlyoutMenu from \"./FlyoutMenu\";\nimport CommandPalette from \"../../CommandPalette\";\nimport SlideOver from \"../../SlideOver\";\n\nexport default function Topbar() {\n  const [open, setOpen] = React.useState(false);\n  const [openPalette, setOpenPalette] = React.useState(false);\n  const [content, setContent] = React.useState(\"profile\");\n\n  return (\n    <>\n      <div className='flex flex-1 justify-between px-4'>\n        <div className='flex flex-1'>\n          <div className='flex w-full md:ml-0'>\n            <div className='flex items-center w-full text-gray-400 focus-within:text-gray-600'>\n              <FlyoutMenu />\n            </div>\n          </div>\n        </div>\n        <div className='ml-4 flex items-center md:ml-6'>\n          <button\n            type='button'\n            className='rounded-full bg-white m-1 p-1 text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2'\n            onClick={() => {\n              setOpenPalette(true);\n            }}\n          >\n            <span className='sr-only'>Search</span>\n            <MagnifyingGlassIcon className='h-6 w-6' aria-hidden='true' />\n          </button>\n          <button\n            type='button'\n            className='rounded-full bg-white m-1 p-1 text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2'\n            onClick={() => {\n              setOpen(true);\n              setContent(\"messages\");\n            }}\n          >\n            <span className='sr-only'>View messages</span>\n            <EnvelopeIcon className='h-6 w-6' aria-hidden='true' />\n          </button>\n          <button\n            type='button'\n            className='rounded-full bg-white m-1 p-1 text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2'\n            onClick={() => {\n              setOpen(true);\n              setContent(\"notifications\");\n            }}\n          >\n            <span className='sr-only'>View notifications</span>\n            <BellIcon className='h-6 w-6' aria-hidden='true' />\n          </button>\n\n          {/* Profile dropdown */}\n          <Menu as='div' className='relative ml-3'>\n            <div>\n              <Menu.Button\n                className='flex max-w-xs items-center rounded-full bg-white text-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2'\n                onClick={() => {\n                  setOpen(true);\n                  setContent(\"profile\");\n                }}\n              >\n                <span className='sr-only'>Open user menu</span>\n                <img\n                  className='h-8 w-8 rounded-full'\n                  src='https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80'\n                  alt=''\n                />\n              </Menu.Button>\n            </div>\n            <SlideOver open={open} setOpen={setOpen} content={content} />\n            <CommandPalette\n              openPalette={openPalette}\n              setOpenPalette={setOpenPalette}\n            />\n          </Menu>\n        </div>\n      </div>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { Fragment } from 'react'\nimport { Menu, Transition } from '@headlessui/react'\nimport { LinkIcon } from '@heroicons/react/20/solid'\nimport { classNames } from './utils/className'\n// import { useNavigate } from \"react-router-dom\";\n\nexport default function Profile() {\n    // let navigate = useNavigate();\n    return (\n        <div>\n            <div className=\"pb-1 sm:pb-6\">\n            <div>\n                <div className=\"relative h-40 sm:h-56\">\n                <img\n                    className=\"absolute h-full w-full object-cover\"\n                    src=\"https://images.unsplash.com/photo-1501031170107-cfd33f0cbdcc?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&h=600&q=80\"\n                    alt=\"\"\n                />\n                </div>\n                <div className=\"mt-6 px-4 sm:mt-8 sm:flex sm:items-end sm:px-6\">\n                <div className=\"sm:flex-1\">\n                    <div>\n                    <div className=\"flex items-center\">\n                        <h3 className=\"text-xl font-bold text-gray-900 sm:text-2xl\">Ashley Porter</h3>\n                        <span className=\"ml-2.5 inline-block h-2 w-2 flex-shrink-0 rounded-full bg-green-400\">\n                        <span className=\"sr-only\">Online</span>\n                        </span>\n                    </div>\n                    <p className=\"text-sm text-gray-500\">@ashleyporter</p>\n                    </div>\n                    <div className=\"mt-5 flex flex-wrap space-y-3 sm:space-y-0 sm:space-x-3\">\n                    <button\n                        onClick={()=>location.href=\"/settings\"}\n                        type=\"button\"\n                        className=\"inline-flex w-full flex-shrink-0 items-center justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:flex-1\"\n                    >\n                        Profile\n                    </button>\n                    <button\n                        onClick={()=>location.href=\"/user/signin\"}\n                        type=\"button\"\n                        className=\"inline-flex w-full flex-1 items-center justify-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\n                    >\n                        Sign Out\n                    </button>\n                    <div className=\"ml-3 inline-flex sm:ml-0\">\n                        <Menu as=\"div\" className=\"relative inline-block text-left\">\n                        <Menu.Button className=\"inline-flex items-center rounded-md border border-gray-300 bg-white p-2 text-sm font-medium text-gray-400 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\">\n                            <span className=\"sr-only\">Copy profile link</span>\n                            <LinkIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                        </Menu.Button>\n                        {/* <Transition\n                            as={Fragment}\n                            enter=\"transition ease-out duration-100\"\n                            enterFrom=\"transform opacity-0 scale-95\"\n                            enterTo=\"transform opacity-100 scale-100\"\n                            leave=\"transition ease-in duration-75\"\n                            leaveFrom=\"transform opacity-100 scale-100\"\n                            leaveTo=\"transform opacity-0 scale-95\"\n                        >\n                            <Menu.Items className=\"absolute right-0 z-10 mt-2 w-48 origin-top-right rounded-md bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\">\n                            <div className=\"py-1\">\n                                <Menu.Item>\n                                {({ active }) => (\n                                    <a\n                                    href=\"#\"\n                                    className={classNames(\n                                        active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n                                        'block px-4 py-2 text-sm'\n                                    )}\n                                    >\n                                    View profile\n                                    </a>\n                                )}\n                                </Menu.Item>\n                                <Menu.Item>\n                                {({ active }) => (\n                                    <a\n                                    href=\"#\"\n                                    className={classNames(\n                                        active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n                                        'block px-4 py-2 text-sm'\n                                    )}\n                                    >\n                                    Copy profile link\n                                    </a>\n                                )}\n                                </Menu.Item>\n                                <Menu.Item>\n                                {({ active }) => (\n                                    <a\n                                    href=\"/user/signin\"\n                                    className={classNames(\n                                        active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n                                        'block px-4 py-2 text-sm'\n                                    )}\n                                    >\n                                    Sign Out\n                                    </a>\n                                )}\n                                </Menu.Item>\n                            </div>\n                            </Menu.Items>\n                        </Transition> */}\n                        </Menu>\n                    </div>\n                    </div>\n                </div>\n                </div>\n            </div>\n            </div>\n            <div className=\"px-4 pt-5 pb-5 sm:px-0 sm:pt-0\">\n            <dl className=\"space-y-8 px-4 sm:space-y-6 sm:px-6\">\n                <div>\n                <dt className=\"text-sm font-medium text-gray-500 sm:w-40 sm:flex-shrink-0\">Bio</dt>\n                <dd className=\"mt-1 text-sm text-gray-900 sm:col-span-2\">\n                    <p>\n                    Enim feugiat ut ipsum, neque ut. Tristique mi id elementum praesent. Gravida in tempus\n                    feugiat netus enim aliquet a, quam scelerisque. Dictumst in convallis nec in bibendum\n                    aenean arcu.\n                    </p>\n                </dd>\n                </div>\n                <div>\n                <dt className=\"text-sm font-medium text-gray-500 sm:w-40 sm:flex-shrink-0\">Location</dt>\n                <dd className=\"mt-1 text-sm text-gray-900 sm:col-span-2\">New York, NY, USA</dd>\n                </div>\n                <div>\n                <dt className=\"text-sm font-medium text-gray-500 sm:w-40 sm:flex-shrink-0\">Website</dt>\n                <dd className=\"mt-1 text-sm text-gray-900 sm:col-span-2\">ashleyporter.com</dd>\n                </div>\n                <div>\n                <dt className=\"text-sm font-medium text-gray-500 sm:w-40 sm:flex-shrink-0\">Birthday</dt>\n                <dd className=\"mt-1 text-sm text-gray-900 sm:col-span-2\">\n                    <time dateTime=\"1988-06-23\">June 23, 1988</time>\n                </dd>\n                </div>\n            </dl>\n            </div>\n        </div>\n    )\n}","import * as React from \"react\";\nimport { secondaryNavigation } from \"./ChannelsMenu\";\n\nexport default function SidebarSecondary() {\n  return (\n    <div className='space-y-1'>\n      <h3\n        className='px-3 text-sm font-medium text-gray-500 w-fit'\n        id='projects-headline'\n      >\n        Projects\n      </h3>\n      <div\n        className='space-y-1'\n        role='group'\n        aria-labelledby='projects-headline'\n      >\n        {secondaryNavigation.map((item) => (\n          <a\n            key={item.name}\n            href={item.href}\n            className='group flex items-center rounded-md px-3 py-2 text-sm font-medium text-gray-600 hover:bg-gray-50 hover:text-gray-900'\n          >\n            <span className='truncate'>{item.name}</span>\n          </a>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { Fragment } from \"react\";\nimport { Dialog, Transition } from \"@headlessui/react\";\nimport { XMarkIcon } from \"@heroicons/react/24/outline\";\nimport Feed from \"./Feed\";\nimport Profile from \"./Profile\";\nimport FeedStandardList from \"./FeedStandardList\";\n\ninterface MobileSidebarProps {\n  open: boolean;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  content: string;\n}\n\nconst slideOverContents = [\n  {\n    name: \"messages\",\n    component: <FeedStandardList />,\n  },\n  {\n    name: \"notifications\",\n    component: <Feed />,\n  },\n  {\n    name: \"profile\",\n    component: <Profile />,\n  },\n];\n\nexport default function SlideOver(\n  props: React.PropsWithChildren<MobileSidebarProps>\n) {\n  const { open, setOpen, content } = props;\n\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog as='div' className='relative z-10' onClose={setOpen}>\n        <Transition.Child\n          as={Fragment}\n          enter='ease-in-out duration-500'\n          enterFrom='opacity-0'\n          enterTo='opacity-100'\n          leave='ease-in-out duration-500'\n          leaveFrom='opacity-100'\n          leaveTo='opacity-0'\n        >\n          <div className='fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity' />\n        </Transition.Child>\n\n        <div className='fixed inset-0 overflow-hidden'>\n          <div className='absolute inset-0 overflow-hidden'>\n            <div className='pointer-events-none fixed inset-y-0 right-0 flex max-w-full pl-10'>\n              <Transition.Child\n                as={Fragment}\n                enter='transform transition ease-in-out duration-500 sm:duration-700'\n                enterFrom='translate-x-full'\n                enterTo='translate-x-0'\n                leave='transform transition ease-in-out duration-500 sm:duration-700'\n                leaveFrom='translate-x-0'\n                leaveTo='translate-x-full'\n              >\n                <Dialog.Panel className='pointer-events-auto relative w-screen max-w-md'>\n                  <Transition.Child\n                    as={Fragment}\n                    enter='ease-in-out duration-500'\n                    enterFrom='opacity-0'\n                    enterTo='opacity-100'\n                    leave='ease-in-out duration-500'\n                    leaveFrom='opacity-100'\n                    leaveTo='opacity-0'\n                  >\n                    <div className='absolute top-0 left-0 -ml-8 flex pt-4 pr-2 sm:-ml-10 sm:pr-4'>\n                      <button\n                        type='button'\n                        className='rounded-md text-gray-300 hover:text-white focus:outline-none focus:ring-2 focus:ring-white'\n                        onClick={() => setOpen(false)}\n                      >\n                        <span className='sr-only'>Close panel</span>\n                        <XMarkIcon className='h-6 w-6' aria-hidden='true' />\n                      </button>\n                    </div>\n                  </Transition.Child>\n                  <div className='flex h-full flex-col overflow-y-scroll bg-white py-6 shadow-xl'>\n                    <div className='px-4 sm:px-6'>\n                      <Dialog.Title className='text-lg font-medium text-gray-900'>\n                        Panel title\n                      </Dialog.Title>\n                    </div>\n                    <div className='relative mt-6 flex-1 px-4 sm:px-6'>\n                      {/* Replace with your content */}\n                      {\n                        slideOverContents.find((item) => item.name === content)\n                          ?.component\n                      }\n                      {/* /End replace */}\n                    </div>\n                  </div>\n                </Dialog.Panel>\n              </Transition.Child>\n            </div>\n          </div>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  );\n}\n","import _BaseViewModel from \"../models/_BaseViewModel\";\n\nclass UserMgtViewModel extends _BaseViewModel {\n  constructor(data: any) {\n    super(data);\n  }\n\n  async signIn(data: any) {\n    this._set(\"path\", \"91cb5408-382c-40c2-9ccb-615b028fc16d\");\n    return await this.post(data);\n  }\n\n  async signUp(data: any) {\n    this._set(\"path\", \"91cb5408-382c-40c2-9ccb-615b028fc16d\");\n    return await this.post(data);\n  }\n\n  async emailVerify(data: any) {\n    this._set(\"path\", \"91cb5408-382c-40c2-9ccb-615b028fc16d\");\n    return await this.post(data);\n  }\n\n  async forgotPassword(data: any) {\n    this._set(\"path\", \"91cb5408-382c-40c2-9ccb-615b028fc16d\");\n    return await this.post(data);\n  }\n}\n\nexport default UserMgtViewModel;\n","import * as React from \"react\";\n\nexport function DashboardT() {\n  return (\n    <>\n      <div>Hello</div>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  ComponentsState,\n  ErrorComponentsState,\n  Notifications,\n  SwitchErrorInfo,\n} from \"piral\";\nimport Landing from \"../../../../landing\";\n\nexport const errors: Partial<ErrorComponentsState> = {\n  not_found: () => (\n    <div>\n      <p className='error'>\n        Could not find the requested page. Are you sure it exists?\n      </p>\n      <p>\n        Go back <Link to='/'>to the dashboard</Link>.\n      </p>\n    </div>\n  ),\n};\n\nexport const layout: Partial<ComponentsState> = {\n  ErrorInfo: (props) => (\n    <div>\n      <h1>Error</h1>\n      <SwitchErrorInfo {...props} />\n    </div>\n  ),\n  DashboardContainer: ({ children }) => {\n    return <Landing />;\n  },\n  Layout: ({ children }) => (\n    <div>\n      <Notifications />\n      {/* <Menu type='general' /> */}\n      <div>{children}</div>\n    </div>\n  ),\n  NotificationsHost: ({ children }) => (\n    <div className='notifications'>{children}</div>\n  ),\n  NotificationsToast: ({ options, onClose, children }) => (\n    <div className={`notification-toast ${options.type}`}>\n      <div className='notification-toast-details'>\n        {options.title && (\n          <div className='notification-toast-title'>{options.title}</div>\n        )}\n        <div className='notification-toast-description'>{children}</div>\n      </div>\n      <div className='notification-toast-close' onClick={onClose} />\n    </div>\n  ),\n};\n","import React from \"react\"\n\nexport const SignUpSteps = [\n    { id: '01', name: 'Administrator', description: 'Vitae sed mi luctus laoreet.', href: '#', status: 'current' },\n    { id: '02', name: 'Business Entity', description: 'Cursus semper viverra.', href: '#', status: 'upcoming' },\n    { id: '03', name: 'Summary', description: 'Penatibus eu quis ante.', href: '#', status: 'upcoming' },\n]","import React from \"react\"\nimport { Link } from \"react-router-dom\"\n\ninterface UserMgtProps {\n    content?: React.ReactNode\n    title?: String\n    subtitle?: String\n}\n\nexport default function UserMgtForm(props: React.PropsWithChildren<UserMgtProps>) {\n\n    const { content, title, subtitle } = props\n\n    return (\n      <>\n        {/*\n          This example requires updating your template:\n  \n          ```\n          <html class=\"h-full bg-gray-50\">\n          <body class=\"h-full\">\n          ```\n        */}\n        <div className=\"flex min-h-full flex-col justify-center py-12 sm:px-6 lg:px-8\">\n          <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\n            <Link to=\"/\">\n            <img\n              className=\"mx-auto h-12 w-auto\"\n              src=\"https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600\"\n              alt=\"Your Company\"\n            />\n            </Link>\n            <h2 className=\"mt-6 text-center text-3xl font-bold tracking-tight text-gray-900\">{ title }</h2>\n            <p className=\"mt-2 text-center text-sm text-gray-600\">\n              { subtitle }\n            </p>\n          </div>\n          { content }\n        </div>\n      </>\n    )\n  }","import * as React from \"react\";\n// import Steps from '../Steps';\nimport { classNames } from \"../utils/className\";\nimport { CheckIcon } from \"@heroicons/react/24/solid\";\n\ninterface StepsList {\n  id: string;\n  name?: string;\n  description?: string;\n  href?: string;\n  status?: string;\n}\n\ninterface UserWizardProps {\n  content?: React.ReactNode;\n  steps: Array<StepsList>;\n  handleSwitch: Function;\n}\n\nexport default function UserWizard(\n  props: React.PropsWithChildren<UserWizardProps>\n) {\n  const { content, steps, handleSwitch } = props;\n\n  return (\n    <>\n      <div className='mt-8 lg:border-t lg:border-b lg:border-gray-200'>\n        <nav\n          className='mx-auto max-w-7xl px-4 sm:px-6 lg:px-8'\n          aria-label='Progress'\n        >\n          <ol className='overflow-hidden rounded-md lg:flex lg:rounded-none lg:border-l lg:border-r lg:border-gray-200'>\n            {steps.map((step, stepIdx) => (\n              <li\n                key={step.id}\n                className='relative overflow-hidden lg:flex-1'\n                onClick={handleSwitch(step.id)}\n              >\n                <div\n                  className={classNames(\n                    stepIdx === 0 ? \"border-b-0 rounded-t-md\" : \"\",\n                    stepIdx === steps.length - 1\n                      ? \"border-t-0 rounded-b-md\"\n                      : \"\",\n                    \"border border-gray-200 overflow-hidden lg:border-0\"\n                  )}\n                >\n                  {step.status === \"complete\" ? (\n                    <a href={step.href} className='group'>\n                      <span\n                        className='absolute top-0 left-0 h-full w-1 bg-transparent group-hover:bg-gray-200 lg:bottom-0 lg:top-auto lg:h-1 lg:w-full'\n                        aria-hidden='true'\n                      />\n                      <span\n                        className={classNames(\n                          stepIdx !== 0 ? \"lg:pl-9\" : \"\",\n                          \"px-6 py-5 flex items-start text-sm font-medium\"\n                        )}\n                      >\n                        <span className='flex-shrink-0'>\n                          <span className='flex h-10 w-10 items-center justify-center rounded-full bg-indigo-600'>\n                            <CheckIcon\n                              className='h-6 w-6 text-white'\n                              aria-hidden='true'\n                            />\n                          </span>\n                        </span>\n                        <span className='mt-0.5 ml-4 flex min-w-0 flex-col'>\n                          <span className='text-sm font-medium'>\n                            {step.name}\n                          </span>\n                          <span className='text-sm font-medium text-gray-500'>\n                            {step.description}\n                          </span>\n                        </span>\n                      </span>\n                    </a>\n                  ) : step.status === \"current\" ? (\n                    <a href={step.href} aria-current='step'>\n                      <span\n                        className='absolute top-0 left-0 h-full w-1 bg-indigo-600 lg:bottom-0 lg:top-auto lg:h-1 lg:w-full'\n                        aria-hidden='true'\n                      />\n                      <span\n                        className={classNames(\n                          stepIdx !== 0 ? \"lg:pl-9\" : \"\",\n                          \"px-6 py-5 flex items-start text-sm font-medium\"\n                        )}\n                      >\n                        <span className='flex-shrink-0'>\n                          <span className='flex h-10 w-10 items-center justify-center rounded-full border-2 border-indigo-600'>\n                            <span className='text-indigo-600'>{step.id}</span>\n                          </span>\n                        </span>\n                        <span className='mt-0.5 ml-4 flex min-w-0 flex-col'>\n                          <span className='text-sm font-medium text-indigo-600'>\n                            {step.name}\n                          </span>\n                          <span className='text-sm font-medium text-gray-500'>\n                            {step.description}\n                          </span>\n                        </span>\n                      </span>\n                    </a>\n                  ) : (\n                    <a href={step.href} className='group'>\n                      <span\n                        className='absolute top-0 left-0 h-full w-1 bg-transparent group-hover:bg-gray-200 lg:bottom-0 lg:top-auto lg:h-1 lg:w-full'\n                        aria-hidden='true'\n                      />\n                      <span\n                        className={classNames(\n                          stepIdx !== 0 ? \"lg:pl-9\" : \"\",\n                          \"px-6 py-5 flex items-start text-sm font-medium\"\n                        )}\n                      >\n                        <span className='flex-shrink-0'>\n                          <span className='flex h-10 w-10 items-center justify-center rounded-full border-2 border-gray-300'>\n                            <span className='text-gray-500'>{step.id}</span>\n                          </span>\n                        </span>\n                        <span className='mt-0.5 ml-4 flex min-w-0 flex-col'>\n                          <span className='text-sm font-medium text-gray-500'>\n                            {step.name}\n                          </span>\n                          <span className='text-sm font-medium text-gray-500'>\n                            {step.description}\n                          </span>\n                        </span>\n                      </span>\n                    </a>\n                  )}\n\n                  {stepIdx !== 0 ? (\n                    <>\n                      {/* Separator */}\n                      <div\n                        className='absolute inset-0 top-0 left-0 hidden w-3 lg:block'\n                        aria-hidden='true'\n                      >\n                        <svg\n                          className='h-full w-full text-gray-300'\n                          viewBox='0 0 12 82'\n                          fill='none'\n                          preserveAspectRatio='none'\n                        >\n                          <path\n                            d='M0.5 0V31L10.5 41L0.5 51V82'\n                            stroke='currentcolor'\n                            vectorEffect='non-scaling-stroke'\n                          />\n                        </svg>\n                      </div>\n                    </>\n                  ) : null}\n                </div>\n              </li>\n            ))}\n          </ol>\n        </nav>\n      </div>\n      <div className='mt-8 sm:mx-auto'>\n        <div className='sm:min-w-[80rem]'>{content}</div>\n      </div>\n    </>\n  );\n}\n","import _BaseViewModel from \"./_BaseViewModel\";\n\nclass FeedViewModel extends _BaseViewModel {\n  constructor(data: any) {\n    super(data);\n  }\n\n  async list() {\n    this._setAll({ path: \"ef1c1563-1807-4d88-853d-2a46efd8d335\" });\n    return await this.get();\n  }\n}\n\nexport default FeedViewModel;\n","// import { navigation } from \"../components/navigations/ChannelsMenu\"\n\nconst baseUrl = \"https://run.mocky.io/v3/\"\n\nexport default class _BaseViewModel{\n    private _props: any\n    constructor(data: any){\n        const _init = data\n        if(typeof _init === 'object'){\n            this._props = _init\n        }else if (typeof _init === 'string'){\n            this._props = {'name': _init}\n        }else{\n            this._props = {}\n        }\n        this._init()\n    }\n\n    _init(){\n        if(!this._props['baseUrl']) {\n            this._props['baseUrl'] = baseUrl\n        }\n    }\n\n    _preconnect(data: any){\n        const queryParam = this._props['hasQueryParam'] ? (\"?\" + new URLSearchParams(this._props['queryParams']).toString()) : \"\"\n        const fullPath = this._props['baseUrl'] + this._props['path'] + queryParam\n        const url = new URL(fullPath)\n        // const credsEncoded = base64.encode('admin@turog.com.ng:Y0hKdmFtVmpkQzF3');\n        \n        const headers = new Headers({\n            'Content-Type': this._props['ContentType'] || 'application/json',\n            'authorization':  `Bearer ${this._props.authorization}`,\n            'accept': this._props['accept'] || 'application/json',\n            // 'X-EncodedURL': 'https://odoo.apps.turog.com.ng',\n            // 'X-Database': 'turog-odoo-sandbox',\n            // 'X-UID': 2,\n            // 'X-Auth': credsEncoded\n        })\n        const opts : {\n            method: any;\n            mode: RequestMode;\n            cache: RequestCache;\n            credentials: RequestCredentials;\n            headers: Headers;\n            redirect: RequestRedirect;\n            referrerPolicy: ReferrerPolicy;\n            body?: BodyInit;\n        } = {\n            method: this._props.httpVerb,\n            mode: 'cors' as RequestMode, \n            cache: 'no-cache' as RequestCache, \n            credentials: 'same-origin' as RequestCredentials, \n            headers: headers,\n            redirect: 'follow' as RequestRedirect,\n            referrerPolicy: 'no-referrer' as ReferrerPolicy, // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n            body: JSON.stringify(data) || {} as BodyInit\n        }\n        if(this._props.httpVerb === 'GET'){\n            delete opts.body\n        }\n        return { url, opts }\n    }\n\n    _connect(data: any){\n        const builder = async () => {\n            const { url, opts } = this._preconnect(data)\n            const response = await fetch(url, opts);\n            return response\n        }\n\n        return builder\n    }\n\n    get(data: any = null) {\n        this._props.httpVerb = 'GET'\n        const req = this._connect(data);\n        return req()\n    }\n\n    post(data: any) {\n        this._props.httpVerb = 'GET'\n        const req = this._connect(data);\n        return req();\n    }\n\n    _get(fieldName: any){\n        if(fieldName)\n            return this._props[fieldName]\n    }\n\n    _set(fieldName: any, fieldValue: any){\n        this._props[fieldName] = fieldValue;\n    }\n\n    _getAll(){\n        return this._props\n    }\n\n    _setAll(fieldValues: any){\n        for (var k in fieldValues) {\n            this._set(k, fieldValues[k])\n        }\n    }\n\n}","export function classNames(...classes: string[]) {\n    return classes.filter(Boolean).join(' ')\n}","import * as React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { createInstance, Piral, createStandardApi } from \"piral\";\n\nimport { setupShell } from \"./_app/app\";\nimport { createPageLayoutsApi } from \"piral-page-layouts\";\nimport { errors, layout } from \"./_app/shared/components/layouts/default\";\nimport Landing from \"./landing\";\n\n// change to your feed URL here (either using feed.piral.cloud or your own service)\nconst feedUrl = \"https://feed.piral.cloud/api/v1/pilet/empty\";\n\nexport const instance = createInstance({\n  state: {\n    components: layout,\n    errorComponents: errors,\n    // routes: {\n    //   \"/\": Landing,\n    // },\n  },\n  plugins: [...createStandardApi(), createPageLayoutsApi()],\n  requestPilets() {\n    return fetch(feedUrl)\n      .then((res) => res.json())\n      .then((res) => res.items);\n  },\n});\n\nsetupShell(instance.root);\n\nconst root = createRoot(document.querySelector(\"#app\"));\nroot.render(<Piral instance={instance} />);\n","import React from 'react'\n\nimport { EnvelopeIcon, PhoneIcon } from '@heroicons/react/24/outline'\n\nexport default function ContactUs() {\n  return (\n    <div className=\"relative bg-white\">\n      <div className=\"absolute inset-0\">\n        <div className=\"absolute inset-y-0 left-0 w-1/2 bg-gray-50\" />\n      </div>\n      <div className=\"relative mx-auto max-w-7xl lg:grid lg:grid-cols-5\">\n        <div className=\"bg-gray-50 py-16 px-4 sm:px-6 lg:col-span-2 lg:px-8 lg:py-24 xl:pr-12\">\n          <div className=\"mx-auto max-w-lg\">\n            <h2 className=\"text-2xl font-bold tracking-tight text-gray-900 sm:text-3xl\">Get in touch</h2>\n            <p className=\"mt-3 text-lg leading-6 text-gray-500\">\n              Nullam risus blandit ac aliquam justo ipsum. Quam mauris volutpat massa dictumst amet. Sapien tortor lacus\n              arcu.\n            </p>\n            <dl className=\"mt-8 text-base text-gray-500\">\n              <div>\n                <dt className=\"sr-only\">Postal address</dt>\n                <dd>\n                  <p>742 Evergreen Terrace</p>\n                  <p>Springfield, OR 12345</p>\n                </dd>\n              </div>\n              <div className=\"mt-6\">\n                <dt className=\"sr-only\">Phone number</dt>\n                <dd className=\"flex\">\n                  <PhoneIcon className=\"h-6 w-6 flex-shrink-0 text-gray-400\" aria-hidden=\"true\" />\n                  <span className=\"ml-3\">+1 (555) 123-4567</span>\n                </dd>\n              </div>\n              <div className=\"mt-3\">\n                <dt className=\"sr-only\">Email</dt>\n                <dd className=\"flex\">\n                  <EnvelopeIcon className=\"h-6 w-6 flex-shrink-0 text-gray-400\" aria-hidden=\"true\" />\n                  <span className=\"ml-3\">support@example.com</span>\n                </dd>\n              </div>\n            </dl>\n            <p className=\"mt-6 text-base text-gray-500\">\n              Looking for careers?{' '}\n              <a href=\"/\" className=\"font-medium text-gray-700 underline\">\n                View all job openings\n              </a>\n              .\n            </p>\n          </div>\n        </div>\n        <div className=\"bg-white py-16 px-4 sm:px-6 lg:col-span-3 lg:py-24 lg:px-8 xl:pl-12\">\n          <div className=\"mx-auto max-w-lg lg:max-w-none\">\n            <form action=\"/\" method=\"POST\" className=\"grid grid-cols-1 gap-y-6\">\n              <div>\n                <label htmlFor=\"full-name\" className=\"sr-only\">\n                  Full name\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"full-name\"\n                  id=\"full-name\"\n                  autoComplete=\"name\"\n                  className=\"block w-full rounded-md border-gray-300 py-3 px-4 placeholder-gray-500 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\n                  placeholder=\"Full name\"\n                />\n              </div>\n              <div>\n                <label htmlFor=\"email\" className=\"sr-only\">\n                  Email\n                </label>\n                <input\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  autoComplete=\"email\"\n                  className=\"block w-full rounded-md border-gray-300 py-3 px-4 placeholder-gray-500 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\n                  placeholder=\"Email\"\n                />\n              </div>\n              <div>\n                <label htmlFor=\"phone\" className=\"sr-only\">\n                  Phone\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"phone\"\n                  id=\"phone\"\n                  autoComplete=\"tel\"\n                  className=\"block w-full rounded-md border-gray-300 py-3 px-4 placeholder-gray-500 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\n                  placeholder=\"Phone\"\n                />\n              </div>\n              <div>\n                <label htmlFor=\"message\" className=\"sr-only\">\n                  Message\n                </label>\n                <textarea\n                  id=\"message\"\n                  name=\"message\"\n                  rows={4}\n                  className=\"block w-full rounded-md border-gray-300 py-3 px-4 placeholder-gray-500 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\n                  placeholder=\"Message\"\n                  defaultValue={''}\n                />\n              </div>\n              <div>\n                <button\n                  type=\"submit\"\n                  className=\"inline-flex justify-center rounded-md border border-transparent bg-indigo-600 py-3 px-6 text-base font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\n                >\n                  Submit\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}","import React from 'react'\nimport {\n  BoltIcon,\n  ChatBubbleBottomCenterTextIcon,\n  EnvelopeIcon,\n  GlobeAltIcon,\n  ScaleIcon,\n} from '@heroicons/react/24/outline'\n\nconst transferFeatures = [\n  {\n    id: 1,\n    name: 'Competitive exchange rates',\n    description:\n      'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Maiores impedit perferendis suscipit eaque, iste dolor cupiditate blanditiis ratione.',\n    icon: GlobeAltIcon,\n  },\n  {\n    id: 2,\n    name: 'No hidden fees',\n    description:\n      'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Maiores impedit perferendis suscipit eaque, iste dolor cupiditate blanditiis ratione.',\n    icon: ScaleIcon,\n  },\n  {\n    id: 3,\n    name: 'Transfers are instant',\n    description:\n      'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Maiores impedit perferendis suscipit eaque, iste dolor cupiditate blanditiis ratione.',\n    icon: BoltIcon,\n  },\n]\nconst communicationFeatures = [\n  {\n    id: 1,\n    name: 'Mobile notifications',\n    description:\n      'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Maiores impedit perferendis suscipit eaque, iste dolor cupiditate blanditiis ratione.',\n    icon: ChatBubbleBottomCenterTextIcon,\n  },\n  {\n    id: 2,\n    name: 'Reminder emails',\n    description:\n      'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Maiores impedit perferendis suscipit eaque, iste dolor cupiditate blanditiis ratione.',\n    icon: EnvelopeIcon,\n  },\n]\n\nexport default function Features() {\n  return (\n    <div className=\"overflow-hidden bg-gray-50 py-16 lg:py-24\">\n      <div className=\"relative mx-auto max-w-xl px-6 lg:max-w-7xl lg:px-8\">\n        <svg\n          className=\"absolute left-full hidden -translate-x-1/2 -translate-y-1/4 transform lg:block\"\n          width={404}\n          height={784}\n          fill=\"none\"\n          viewBox=\"0 0 404 784\"\n          aria-hidden=\"true\"\n        >\n          <defs>\n            <pattern\n              id=\"b1e6e422-73f8-40a6-b5d9-c8586e37e0e7\"\n              x={0}\n              y={0}\n              width={20}\n              height={20}\n              patternUnits=\"userSpaceOnUse\"\n            >\n              <rect x={0} y={0} width={4} height={4} className=\"text-gray-200\" fill=\"currentColor\" />\n            </pattern>\n          </defs>\n          <rect width={404} height={784} fill=\"url(#b1e6e422-73f8-40a6-b5d9-c8586e37e0e7)\" />\n        </svg>\n\n        <div className=\"relative\">\n          <h2 className=\"text-center text-3xl font-bold leading-8 tracking-tight text-gray-900 sm:text-4xl\">\n            A better way to send money\n          </h2>\n          <p className=\"mx-auto mt-4 max-w-3xl text-center text-xl text-gray-500\">\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Possimus magnam voluptatum cupiditate veritatis in,\n            accusamus quisquam.\n          </p>\n        </div>\n\n        <div className=\"relative mt-12 lg:mt-24 lg:grid lg:grid-cols-2 lg:items-center lg:gap-8\">\n          <div className=\"relative\">\n            <h3 className=\"text-2xl font-bold tracking-tight text-gray-900 sm:text-3xl\">Transfer funds world-wide</h3>\n            <p className=\"mt-3 text-lg text-gray-500\">\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Pariatur minima sequi recusandae, porro maiores\n              officia assumenda aliquam laborum ab aliquid veritatis impedit odit adipisci optio iste blanditiis facere.\n              Totam, velit.\n            </p>\n\n            <dl className=\"mt-10 space-y-10\">\n              {transferFeatures.map((item) => (\n                <div key={item.id} className=\"relative\">\n                  <dt>\n                    <div className=\"absolute flex h-12 w-12 items-center justify-center rounded-xl bg-indigo-500 text-white\">\n                      <item.icon className=\"h-8 w-8\" aria-hidden=\"true\" />\n                    </div>\n                    <p className=\"ml-16 text-lg font-medium leading-6 text-gray-900\">{item.name}</p>\n                  </dt>\n                  <dd className=\"mt-2 ml-16 text-base text-gray-500\">{item.description}</dd>\n                </div>\n              ))}\n            </dl>\n          </div>\n\n          <div className=\"relative -mx-4 mt-10 lg:mt-0\" aria-hidden=\"true\">\n            <svg\n              className=\"absolute left-1/2 -translate-x-1/2 translate-y-16 transform lg:hidden\"\n              width={784}\n              height={404}\n              fill=\"none\"\n              viewBox=\"0 0 784 404\"\n            >\n              <defs>\n                <pattern\n                  id=\"ca9667ae-9f92-4be7-abcb-9e3d727f2941\"\n                  x={0}\n                  y={0}\n                  width={20}\n                  height={20}\n                  patternUnits=\"userSpaceOnUse\"\n                >\n                  <rect x={0} y={0} width={4} height={4} className=\"text-gray-200\" fill=\"currentColor\" />\n                </pattern>\n              </defs>\n              <rect width={784} height={404} fill=\"url(#ca9667ae-9f92-4be7-abcb-9e3d727f2941)\" />\n            </svg>\n            <img\n              className=\"relative mx-auto\"\n              width={490}\n              src=\"https://tailwindui.com/img/features/feature-example-1.png\"\n              alt=\"\"\n            />\n          </div>\n        </div>\n\n        <svg\n          className=\"absolute right-full hidden translate-x-1/2 translate-y-12 transform lg:block\"\n          width={404}\n          height={784}\n          fill=\"none\"\n          viewBox=\"0 0 404 784\"\n          aria-hidden=\"true\"\n        >\n          <defs>\n            <pattern\n              id=\"64e643ad-2176-4f86-b3d7-f2c5da3b6a6d\"\n              x={0}\n              y={0}\n              width={20}\n              height={20}\n              patternUnits=\"userSpaceOnUse\"\n            >\n              <rect x={0} y={0} width={4} height={4} className=\"text-gray-200\" fill=\"currentColor\" />\n            </pattern>\n          </defs>\n          <rect width={404} height={784} fill=\"url(#64e643ad-2176-4f86-b3d7-f2c5da3b6a6d)\" />\n        </svg>\n\n        <div className=\"relative mt-12 sm:mt-16 lg:mt-24\">\n          <div className=\"lg:grid lg:grid-flow-row-dense lg:grid-cols-2 lg:items-center lg:gap-8\">\n            <div className=\"lg:col-start-2\">\n              <h3 className=\"text-2xl font-bold tracking-tight text-gray-900 sm:text-3xl\">Always in the loop</h3>\n              <p className=\"mt-3 text-lg text-gray-500\">\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Impedit ex obcaecati natus eligendi delectus,\n                cum deleniti sunt in labore nihil quod quibusdam expedita nemo.\n              </p>\n\n              <dl className=\"mt-10 space-y-10\">\n                {communicationFeatures.map((item) => (\n                  <div key={item.id} className=\"relative\">\n                    <dt>\n                      <div className=\"absolute flex h-12 w-12 items-center justify-center rounded-xl bg-indigo-500 text-white\">\n                        <item.icon className=\"h-8 w-8\" aria-hidden=\"true\" />\n                      </div>\n                      <p className=\"ml-16 text-lg font-medium leading-6 text-gray-900\">{item.name}</p>\n                    </dt>\n                    <dd className=\"mt-2 ml-16 text-base text-gray-500\">{item.description}</dd>\n                  </div>\n                ))}\n              </dl>\n            </div>\n\n            <div className=\"relative -mx-4 mt-10 lg:col-start-1 lg:mt-0\">\n              <svg\n                className=\"absolute left-1/2 -translate-x-1/2 translate-y-16 transform lg:hidden\"\n                width={784}\n                height={404}\n                fill=\"none\"\n                viewBox=\"0 0 784 404\"\n                aria-hidden=\"true\"\n              >\n                <defs>\n                  <pattern\n                    id=\"e80155a9-dfde-425a-b5ea-1f6fadd20131\"\n                    x={0}\n                    y={0}\n                    width={20}\n                    height={20}\n                    patternUnits=\"userSpaceOnUse\"\n                  >\n                    <rect x={0} y={0} width={4} height={4} className=\"text-gray-200\" fill=\"currentColor\" />\n                  </pattern>\n                </defs>\n                <rect width={784} height={404} fill=\"url(#e80155a9-dfde-425a-b5ea-1f6fadd20131)\" />\n              </svg>\n              <img\n                className=\"relative mx-auto\"\n                width={490}\n                src=\"https://tailwindui.com/img/features/feature-example-2.png\"\n                alt=\"\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}","import React from 'react'\n\nconst navigation = {\n  main: [\n    { name: 'About', href: '#' },\n    { name: 'Blog', href: '#' },\n    { name: 'Jobs', href: '#' },\n    { name: 'Press', href: '#' },\n    { name: 'Accessibility', href: '#' },\n    { name: 'Partners', href: '#' },\n  ],\n  social: [\n    {\n      name: 'Facebook',\n      href: '#',\n      icon: (props: JSX.IntrinsicAttributes & React.SVGProps<SVGSVGElement>) => (\n        <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" {...props}>\n          <path\n            fillRule=\"evenodd\"\n            d=\"M22 12c0-5.523-4.477-10-10-10S2 6.477 2 12c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V12h2.54V9.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V12h2.773l-.443 2.89h-2.33v6.988C18.343 21.128 22 16.991 22 12z\"\n            clipRule=\"evenodd\"\n          />\n        </svg>\n      ),\n    },\n    {\n      name: 'Instagram',\n      href: '#',\n      icon: (props: JSX.IntrinsicAttributes & React.SVGProps<SVGSVGElement>) => (\n        <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" {...props}>\n          <path\n            fillRule=\"evenodd\"\n            d=\"M12.315 2c2.43 0 2.784.013 3.808.06 1.064.049 1.791.218 2.427.465a4.902 4.902 0 011.772 1.153 4.902 4.902 0 011.153 1.772c.247.636.416 1.363.465 2.427.048 1.067.06 1.407.06 4.123v.08c0 2.643-.012 2.987-.06 4.043-.049 1.064-.218 1.791-.465 2.427a4.902 4.902 0 01-1.153 1.772 4.902 4.902 0 01-1.772 1.153c-.636.247-1.363.416-2.427.465-1.067.048-1.407.06-4.123.06h-.08c-2.643 0-2.987-.012-4.043-.06-1.064-.049-1.791-.218-2.427-.465a4.902 4.902 0 01-1.772-1.153 4.902 4.902 0 01-1.153-1.772c-.247-.636-.416-1.363-.465-2.427-.047-1.024-.06-1.379-.06-3.808v-.63c0-2.43.013-2.784.06-3.808.049-1.064.218-1.791.465-2.427a4.902 4.902 0 011.153-1.772A4.902 4.902 0 015.45 2.525c.636-.247 1.363-.416 2.427-.465C8.901 2.013 9.256 2 11.685 2h.63zm-.081 1.802h-.468c-2.456 0-2.784.011-3.807.058-.975.045-1.504.207-1.857.344-.467.182-.8.398-1.15.748-.35.35-.566.683-.748 1.15-.137.353-.3.882-.344 1.857-.047 1.023-.058 1.351-.058 3.807v.468c0 2.456.011 2.784.058 3.807.045.975.207 1.504.344 1.857.182.466.399.8.748 1.15.35.35.683.566 1.15.748.353.137.882.3 1.857.344 1.054.048 1.37.058 4.041.058h.08c2.597 0 2.917-.01 3.96-.058.976-.045 1.505-.207 1.858-.344.466-.182.8-.398 1.15-.748.35-.35.566-.683.748-1.15.137-.353.3-.882.344-1.857.048-1.055.058-1.37.058-4.041v-.08c0-2.597-.01-2.917-.058-3.96-.045-.976-.207-1.505-.344-1.858a3.097 3.097 0 00-.748-1.15 3.098 3.098 0 00-1.15-.748c-.353-.137-.882-.3-1.857-.344-1.023-.047-1.351-.058-3.807-.058zM12 6.865a5.135 5.135 0 110 10.27 5.135 5.135 0 010-10.27zm0 1.802a3.333 3.333 0 100 6.666 3.333 3.333 0 000-6.666zm5.338-3.205a1.2 1.2 0 110 2.4 1.2 1.2 0 010-2.4z\"\n            clipRule=\"evenodd\"\n          />\n        </svg>\n      ),\n    },\n    {\n      name: 'Twitter',\n      href: '#',\n      icon: (props: JSX.IntrinsicAttributes & React.SVGProps<SVGSVGElement>) => (\n        <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" {...props}>\n          <path d=\"M8.29 20.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0022 5.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.072 4.072 0 012.8 9.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 012 18.407a11.616 11.616 0 006.29 1.84\" />\n        </svg>\n      ),\n    },\n    {\n      name: 'GitHub',\n      href: '#',\n      icon: (props: JSX.IntrinsicAttributes & React.SVGProps<SVGSVGElement>) => (\n        <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" {...props}>\n          <path\n            fillRule=\"evenodd\"\n            d=\"M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.943.359.309.678.92.678 1.855 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0022 12.017C22 6.484 17.522 2 12 2z\"\n            clipRule=\"evenodd\"\n          />\n        </svg>\n      ),\n    },\n    {\n      name: 'Dribbble',\n      href: '#',\n      icon: (props: JSX.IntrinsicAttributes & React.SVGProps<SVGSVGElement>) => (\n        <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" {...props}>\n          <path\n            fillRule=\"evenodd\"\n            d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10c5.51 0 10-4.48 10-10S17.51 2 12 2zm6.605 4.61a8.502 8.502 0 011.93 5.314c-.281-.054-3.101-.629-5.943-.271-.065-.141-.12-.293-.184-.445a25.416 25.416 0 00-.564-1.236c3.145-1.28 4.577-3.124 4.761-3.362zM12 3.475c2.17 0 4.154.813 5.662 2.148-.152.216-1.443 1.941-4.48 3.08-1.399-2.57-2.95-4.675-3.189-5A8.687 8.687 0 0112 3.475zm-3.633.803a53.896 53.896 0 013.167 4.935c-3.992 1.063-7.517 1.04-7.896 1.04a8.581 8.581 0 014.729-5.975zM3.453 12.01v-.26c.37.01 4.512.065 8.775-1.215.25.477.477.965.694 1.453-.109.033-.228.065-.336.098-4.404 1.42-6.747 5.303-6.942 5.629a8.522 8.522 0 01-2.19-5.705zM12 20.547a8.482 8.482 0 01-5.239-1.8c.152-.315 1.888-3.656 6.703-5.337.022-.01.033-.01.054-.022a35.318 35.318 0 011.823 6.475 8.4 8.4 0 01-3.341.684zm4.761-1.465c-.086-.52-.542-3.015-1.659-6.084 2.679-.423 5.022.271 5.314.369a8.468 8.468 0 01-3.655 5.715z\"\n            clipRule=\"evenodd\"\n          />\n        </svg>\n      ),\n    },\n  ],\n}\n\nexport default function Footers() {\n  return (\n    <footer className=\"bg-white\">\n      <div className=\"mx-auto max-w-7xl overflow-hidden py-12 px-4 sm:px-6 lg:px-8\">\n        <nav className=\"-mx-5 -my-2 flex flex-wrap justify-center\" aria-label=\"Footer\">\n          {navigation.main.map((item) => (\n            <div key={item.name} className=\"px-5 py-2\">\n              <a href={item.href} className=\"text-base text-gray-500 hover:text-gray-900\">\n                {item.name}\n              </a>\n            </div>\n          ))}\n        </nav>\n        <div className=\"mt-8 flex justify-center space-x-6\">\n          {navigation.social.map((item) => (\n            <a key={item.name} href={item.href} className=\"text-gray-400 hover:text-gray-500\">\n              <span className=\"sr-only\">{item.name}</span>\n              <item.icon className=\"h-6 w-6\" aria-hidden=\"true\" />\n            </a>\n          ))}\n        </div>\n        <p className=\"mt-8 text-center text-base text-gray-400\">&copy; 2020 Your Company, Inc. All rights reserved.</p>\n      </div>\n    </footer>\n  )\n}","import * as React from \"react\";\nimport { Popover, Transition } from \"@headlessui/react\";\nimport { Bars3Icon, XMarkIcon } from \"@heroicons/react/24/outline\";\nimport { ChevronRightIcon } from \"@heroicons/react/20/solid\";\nimport { Link } from \"react-router-dom\";\nimport { Fragment } from \"react\";\n\nconst navigation = [\n  { name: \"Product\", href: \"#\" },\n  { name: \"Features\", href: \"#\" },\n  { name: \"Marketplace\", href: \"#\" },\n  { name: \"Company\", href: \"#\" },\n];\n\nconst Hero: React.FC = () => {\n  return (\n    <div className='relative overflow-hidden bg-gray-800'>\n      <div\n        className='hidden sm:absolute sm:inset-0 sm:block'\n        aria-hidden='true'\n      >\n        <svg\n          className='absolute bottom-0 right-0 mb-48 translate-x-1/2 transform text-gray-700 lg:top-0 lg:mt-28 lg:mb-0 xl:translate-x-0 xl:transform-none'\n          width={364}\n          height={384}\n          viewBox='0 0 364 384'\n          fill='none'\n        >\n          <defs>\n            <pattern\n              id='eab71dd9-9d7a-47bd-8044-256344ee00d0'\n              x={0}\n              y={0}\n              width={20}\n              height={20}\n              patternUnits='userSpaceOnUse'\n            >\n              <rect x={0} y={0} width={4} height={4} fill='currentColor' />\n            </pattern>\n          </defs>\n          <rect\n            width={364}\n            height={384}\n            fill='url(#eab71dd9-9d7a-47bd-8044-256344ee00d0)'\n          />\n        </svg>\n      </div>\n      <div className='relative pt-6 pb-16 sm:pb-24'>\n        <Popover>\n          <nav\n            className='relative mx-auto flex max-w-7xl items-center justify-between px-4 sm:px-6'\n            aria-label='Global'\n          >\n            <div className='flex flex-1 items-center'>\n              <div className='flex w-full items-center justify-between md:w-auto'>\n                <Link to='/'>\n                  <span className='sr-only'>Your Company</span>\n                  <img\n                    className='h-8 w-auto sm:h-10'\n                    src='https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=500'\n                    alt=''\n                  />\n                </Link>\n                <div className='-mr-2 flex items-center md:hidden'>\n                  <Popover.Button className='focus-ring-inset inline-flex items-center justify-center rounded-md bg-gray-800 p-2 text-gray-400 hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-white'>\n                    <span className='sr-only'>Open main menu</span>\n                    <Bars3Icon className='h-6 w-6' aria-hidden='true' />\n                  </Popover.Button>\n                </div>\n              </div>\n              <div className='hidden space-x-10 md:ml-10 md:flex'>\n                {navigation.map((item) => (\n                  <a\n                    key={item.name}\n                    href={item.href}\n                    className='font-medium text-white hover:text-gray-300'\n                  >\n                    {item.name}\n                  </a>\n                ))}\n              </div>\n            </div>\n            <div className='hidden md:flex'>\n              <Link\n                to='/login'\n                className='inline-flex items-center rounded-md border border-transparent bg-gray-600 px-4 py-2 text-sm font-medium text-white hover:bg-gray-700'\n              >\n                Log in\n              </Link>\n            </div>\n          </nav>\n\n          <Transition\n            as={Fragment}\n            enter='duration-150 ease-out'\n            enterFrom='opacity-0 scale-95'\n            enterTo='opacity-100 scale-100'\n            leave='duration-100 ease-in'\n            leaveFrom='opacity-100 scale-100'\n            leaveTo='opacity-0 scale-95'\n          >\n            <Popover.Panel\n              focus\n              className='absolute inset-x-0 top-0 z-10 origin-top-right transform p-2 transition md:hidden'\n            >\n              <div className='overflow-hidden rounded-lg bg-white shadow-md ring-1 ring-black ring-opacity-5'>\n                <div className='flex items-center justify-between px-5 pt-4'>\n                  <div>\n                    <img\n                      className='h-8 w-auto'\n                      src='https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600'\n                      alt=''\n                    />\n                  </div>\n                  <div className='-mr-2'>\n                    <Popover.Button className='inline-flex items-center justify-center rounded-md bg-white p-2 text-gray-400 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500'>\n                      <span className='sr-only'>Close menu</span>\n                      <XMarkIcon className='h-6 w-6' aria-hidden='true' />\n                    </Popover.Button>\n                  </div>\n                </div>\n                <div className='space-y-1 px-2 pt-2 pb-3'>\n                  {navigation.map((item) => (\n                    <a\n                      key={item.name}\n                      href={item.href}\n                      className='block rounded-md px-3 py-2 text-base font-medium text-gray-700 hover:bg-gray-50 hover:text-gray-900'\n                    >\n                      {item.name}\n                    </a>\n                  ))}\n                </div>\n                <Link\n                  to='/'\n                  className='block w-full bg-gray-50 px-5 py-3 text-center font-medium text-indigo-600 hover:bg-gray-100'\n                >\n                  Log in\n                </Link>\n              </div>\n            </Popover.Panel>\n          </Transition>\n        </Popover>\n\n        <main className='mt-16 sm:mt-24'>\n          <div className='mx-auto max-w-7xl'>\n            <div className='lg:grid lg:grid-cols-12 lg:gap-8'>\n              <div className='px-4 sm:px-6 sm:text-center md:mx-auto md:max-w-2xl lg:col-span-6 lg:flex lg:items-center lg:text-left'>\n                <div>\n                  <a\n                    href='/'\n                    className='inline-flex items-center rounded-full bg-gray-900 p-1 pr-2 text-white hover:text-gray-200 sm:text-base lg:text-sm xl:text-base'\n                  >\n                    <span className='rounded-full bg-indigo-500 px-3 py-0.5 text-sm font-semibold leading-5 text-white'>\n                      We're hiring\n                    </span>\n                    <span className='ml-4 text-sm'>Visit our careers page</span>\n                    <ChevronRightIcon\n                      className='ml-2 h-5 w-5 text-gray-500'\n                      aria-hidden='true'\n                    />\n                  </a>\n                  <h1 className='mt-4 text-4xl font-bold tracking-tight text-white sm:text-5xl md:text-6xl'>\n                    Data to enrich your online business\n                  </h1>\n                  <p className='mt-3 text-base text-gray-300 sm:mt-5 sm:text-xl lg:text-lg xl:text-xl'>\n                    Anim aute id magna aliqua ad ad non deserunt sunt. Qui irure\n                    qui lorem cupidatat commodo. Elit sunt amet fugiat veniam\n                    occaecat fugiat aliqua ad ad non deserunt sunt.\n                  </p>\n                  <p className='mt-8 text-base font-semibold text-white sm:mt-10'>\n                    Used by\n                  </p>\n                  <div className='mt-5 w-full sm:mx-auto sm:max-w-lg lg:ml-0'>\n                    <div className='flex flex-wrap items-start justify-between'>\n                      <div className='flex justify-center px-1'>\n                        <img\n                          className='h-9 sm:h-10'\n                          src='https://tailwindui.com/img/logos/tuple-logo-gray-400.svg'\n                          alt='Tuple'\n                        />\n                      </div>\n                      <div className='flex justify-center px-1'>\n                        <img\n                          className='h-9 sm:h-10'\n                          src='https://tailwindui.com/img/logos/workcation-logo-gray-400.svg'\n                          alt='Workcation'\n                        />\n                      </div>\n                      <div className='flex justify-center px-1'>\n                        <img\n                          className='h-9 sm:h-10'\n                          src='https://tailwindui.com/img/logos/statickit-logo-gray-400.svg'\n                          alt='StaticKit'\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className='mt-16 sm:mt-24 lg:col-span-6 lg:mt-0'>\n                <div className='bg-white sm:mx-auto sm:w-full sm:max-w-md sm:overflow-hidden sm:rounded-lg'>\n                  <div className='px-4 py-8 sm:px-10'>\n                    <div>\n                      <p className='text-sm font-medium text-gray-700'>\n                        Sign in with\n                      </p>\n\n                      <div className='mt-1 grid grid-cols-3 gap-3'>\n                        <div>\n                          <a\n                            href='/'\n                            className='inline-flex w-full justify-center rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-500 shadow-sm hover:bg-gray-50'\n                          >\n                            <span className='sr-only'>\n                              Sign in with Facebook\n                            </span>\n                            <svg\n                              className='h-5 w-5'\n                              aria-hidden='true'\n                              fill='currentColor'\n                              viewBox='0 0 20 20'\n                            >\n                              <path\n                                fillRule='evenodd'\n                                d='M20 10c0-5.523-4.477-10-10-10S0 4.477 0 10c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V10h2.54V7.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V10h2.773l-.443 2.89h-2.33v6.988C16.343 19.128 20 14.991 20 10z'\n                                clipRule='evenodd'\n                              />\n                            </svg>\n                          </a>\n                        </div>\n\n                        <div>\n                          <a\n                            href='/'\n                            className='inline-flex w-full justify-center rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-500 shadow-sm hover:bg-gray-50'\n                          >\n                            <span className='sr-only'>\n                              Sign in with Twitter\n                            </span>\n                            <svg\n                              className='h-5 w-5'\n                              aria-hidden='true'\n                              fill='currentColor'\n                              viewBox='0 0 20 20'\n                            >\n                              <path d='M6.29 18.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0020 3.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.073 4.073 0 01.8 7.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 010 16.407a11.616 11.616 0 006.29 1.84' />\n                            </svg>\n                          </a>\n                        </div>\n\n                        <div>\n                          <a\n                            href='/'\n                            className='inline-flex w-full justify-center rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-500 shadow-sm hover:bg-gray-50'\n                          >\n                            <span className='sr-only'>Sign in with GitHub</span>\n                            <svg\n                              className='h-5 w-5'\n                              aria-hidden='true'\n                              fill='currentColor'\n                              viewBox='0 0 20 20'\n                            >\n                              <path\n                                fillRule='evenodd'\n                                d='M10 0C4.477 0 0 4.484 0 10.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0110 4.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.203 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.942.359.31.678.921.678 1.856 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0020 10.017C20 4.484 15.522 0 10 0z'\n                                clipRule='evenodd'\n                              />\n                            </svg>\n                          </a>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className='relative mt-6'>\n                      <div\n                        className='absolute inset-0 flex items-center'\n                        aria-hidden='true'\n                      >\n                        <div className='w-full border-t border-gray-300' />\n                      </div>\n                      <div className='relative flex justify-center text-sm'>\n                        <span className='bg-white px-2 text-gray-500'>Or</span>\n                      </div>\n                    </div>\n\n                    <div className='mt-6'>\n                      <form action='/' method='POST' className='space-y-6'>\n                        <div>\n                          <label htmlFor='name' className='sr-only'>\n                            Full name\n                          </label>\n                          <input\n                            type='text'\n                            name='name'\n                            id='name'\n                            autoComplete='name'\n                            placeholder='Full name'\n                            required\n                            className='block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm'\n                          />\n                        </div>\n\n                        <div>\n                          <label htmlFor='mobile-or-email' className='sr-only'>\n                            Mobile number or email\n                          </label>\n                          <input\n                            type='text'\n                            name='mobile-or-email'\n                            id='mobile-or-email'\n                            autoComplete='email'\n                            placeholder='Mobile number or email'\n                            required\n                            className='block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm'\n                          />\n                        </div>\n\n                        <div>\n                          <label htmlFor='password' className='sr-only'>\n                            Password\n                          </label>\n                          <input\n                            id='password'\n                            name='password'\n                            type='password'\n                            placeholder='Password'\n                            autoComplete='current-password'\n                            required\n                            className='block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm'\n                          />\n                        </div>\n\n                        <div>\n                          <button\n                            type='submit'\n                            className='flex w-full justify-center rounded-md border border-transparent bg-indigo-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2'\n                          >\n                            <Link to='/sign-up'>Create your account</Link>\n                          </button>\n                        </div>\n                      </form>\n                    </div>\n                  </div>\n                  <div className='border-t-2 border-gray-200 bg-gray-50 px-4 py-6 sm:px-10'>\n                    <p className='text-xs leading-5 text-gray-500'>\n                      By signing up, you agree to our{\" \"}\n                      <a\n                        href='/'\n                        className='font-medium text-gray-900 hover:underline'\n                      >\n                        Terms\n                      </a>\n                      ,{\" \"}\n                      <a\n                        href='/'\n                        className='font-medium text-gray-900 hover:underline'\n                      >\n                        Data Policy\n                      </a>{\" \"}\n                      and{\" \"}\n                      <a\n                        href='/'\n                        className='font-medium text-gray-900 hover:underline'\n                      >\n                        Cookies Policy\n                      </a>\n                      .\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default Hero;\n","import React from 'react'\n\n\nexport default function LogoClouds() {\n  return (\n    <div className=\"bg-white\">\n      <div className=\"mx-auto max-w-7xl py-12 px-4 sm:px-6 lg:py-16 lg:px-8\">\n        <div className=\"lg:grid lg:grid-cols-2 lg:items-center lg:gap-8\">\n          <div>\n            <h2 className=\"text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl\">\n              Used by the world's most average companies\n            </h2>\n            <p className=\"mt-3 max-w-3xl text-lg text-gray-500\">\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Et, egestas tempus tellus etiam sed. Quam a\n              scelerisque amet ullamcorper eu enim et fermentum, augue.\n            </p>\n            <div className=\"mt-8 sm:flex\">\n              <div className=\"rounded-md shadow\">\n                <a\n                  href=\"/\"\n                  className=\"flex items-center justify-center rounded-md border border-transparent bg-indigo-600 px-5 py-3 text-base font-medium text-white hover:bg-indigo-700\"\n                >\n                  Create Account\n                </a>\n              </div>\n              <div className=\"mt-3 sm:mt-0 sm:ml-3\">\n                <a\n                  href=\"/\"\n                  className=\"flex items-center justify-center rounded-md border border-transparent bg-indigo-100 px-5 py-3 text-base font-medium text-indigo-700 hover:bg-indigo-200\"\n                >\n                  Contact Us\n                </a>\n              </div>\n            </div>\n          </div>\n          <div className=\"mt-8 grid grid-cols-2 gap-0.5 md:grid-cols-3 lg:mt-0 lg:grid-cols-2\">\n            <div className=\"col-span-1 flex justify-center bg-gray-50 py-8 px-8\">\n              <img\n                className=\"max-h-12\"\n                src=\"https://tailwindui.com/img/logos/transistor-logo-gray-400.svg\"\n                alt=\"Workcation\"\n              />\n            </div>\n            <div className=\"col-span-1 flex justify-center bg-gray-50 py-8 px-8\">\n              <img className=\"max-h-12\" src=\"https://tailwindui.com/img/logos/mirage-logo-gray-400.svg\" alt=\"Mirage\" />\n            </div>\n            <div className=\"col-span-1 flex justify-center bg-gray-50 py-8 px-8\">\n              <img className=\"max-h-12\" src=\"https://tailwindui.com/img/logos/tuple-logo-gray-400.svg\" alt=\"Tuple\" />\n            </div>\n            <div className=\"col-span-1 flex justify-center bg-gray-50 py-8 px-8\">\n              <img\n                className=\"max-h-12\"\n                src=\"https://tailwindui.com/img/logos/laravel-logo-gray-400.svg\"\n                alt=\"Laravel\"\n              />\n            </div>\n            <div className=\"col-span-1 flex justify-center bg-gray-50 py-8 px-8\">\n              <img\n                className=\"max-h-12\"\n                src=\"https://tailwindui.com/img/logos/statickit-logo-gray-400.svg\"\n                alt=\"StaticKit\"\n              />\n            </div>\n            <div className=\"col-span-1 flex justify-center bg-gray-50 py-8 px-8\">\n              <img\n                className=\"max-h-12\"\n                src=\"https://tailwindui.com/img/logos/statamic-logo-gray-400.svg\"\n                alt=\"Statamic\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}","import React from 'react'\n\nexport default function Testimonials() {\n  return (\n    <div className=\"bg-white pt-16 lg:py-24\">\n      <div className=\"bg-indigo-600 pb-16 lg:relative lg:z-10 lg:pb-0\">\n        <div className=\"lg:mx-auto lg:grid lg:max-w-7xl lg:grid-cols-3 lg:gap-8 lg:px-8\">\n          <div className=\"relative lg:-my-8\">\n            <div aria-hidden=\"true\" className=\"absolute inset-x-0 top-0 h-1/2 bg-white lg:hidden\" />\n            <div className=\"mx-auto max-w-md px-4 sm:max-w-3xl sm:px-6 lg:h-full lg:p-0\">\n              <div className=\"aspect-w-10 aspect-h-6 overflow-hidden rounded-xl shadow-xl sm:aspect-w-16 sm:aspect-h-7 lg:aspect-none lg:h-full\">\n                <img\n                  className=\"object-cover lg:h-full lg:w-full\"\n                  src=\"https://images.unsplash.com/photo-1520333789090-1afc82db536a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2102&q=80\"\n                  alt=\"\"\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"mt-12 lg:col-span-2 lg:m-0 lg:pl-8\">\n            <div className=\"mx-auto max-w-md px-4 sm:max-w-2xl sm:px-6 lg:max-w-none lg:px-0 lg:py-20\">\n              <blockquote>\n                <div>\n                  <svg\n                    className=\"h-12 w-12 text-white opacity-25\"\n                    fill=\"currentColor\"\n                    viewBox=\"0 0 32 32\"\n                    aria-hidden=\"true\"\n                  >\n                    <path d=\"M9.352 4C4.456 7.456 1 13.12 1 19.36c0 5.088 3.072 8.064 6.624 8.064 3.36 0 5.856-2.688 5.856-5.856 0-3.168-2.208-5.472-5.088-5.472-.576 0-1.344.096-1.536.192.48-3.264 3.552-7.104 6.624-9.024L9.352 4zm16.512 0c-4.8 3.456-8.256 9.12-8.256 15.36 0 5.088 3.072 8.064 6.624 8.064 3.264 0 5.856-2.688 5.856-5.856 0-3.168-2.304-5.472-5.184-5.472-.576 0-1.248.096-1.44.192.48-3.264 3.456-7.104 6.528-9.024L25.864 4z\" />\n                  </svg>\n                  <p className=\"mt-6 text-2xl font-medium text-white\">\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed urna nulla vitae laoreet augue. Amet\n                    feugiat est integer dolor auctor adipiscing nunc urna, sit.\n                  </p>\n                </div>\n                <footer className=\"mt-6\">\n                  <p className=\"text-base font-medium text-white\">Judith Black</p>\n                  <p className=\"text-base font-medium text-indigo-100\">CEO at PureInsights</p>\n                </footer>\n              </blockquote>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}","import * as React from \"react\";\nimport ContactUs from \"./components/ContactUs\";\nimport Features from \"./components/Features\";\nimport Footers from \"./components/Footers\";\nimport Hero from \"./components/Hero\";\nimport LogoClouds from \"./components/LogoClouds\";\nimport Testimonials from \"./components/Testimonials\";\n\nconst Landing: React.FC = () => {\n  return (\n    <>\n      <Hero />\n      <Features />\n      <Testimonials />\n      <LogoClouds />\n      <ContactUs />\n      <Footers />\n    </>\n  );\n};\n\nexport default Landing;\n","import * as React from \"react\";\nimport ForgotPasswodContent from \"./forms/ForgotPasswordContent\";\n\nexport default function Forgotpassword() {\n  return <ForgotPasswodContent />;\n}\n","import * as React from \"react\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\n\ninterface AdministratorProps {\n  nextStep?: any;\n  handleChange: Function;\n  values?: any;\n}\n\nconst Administrator: React.FC = (\n  props: React.PropsWithChildren<AdministratorProps>\n) => {\n  const [loading, setLoading] = React.useState(false);\n\n  const { nextStep, handleChange, values } = props;\n\n  const { first_name, last_name, email_address, phone_number, password } =\n    values;\n\n  const enableLoading = () => {\n    setLoading(true);\n  };\n\n  const disableLoading = () => {\n    setLoading(false);\n  };\n\n  const phoneRegExp =\n    /\\+(9[976]\\d|8[987530]\\d|6[987]\\d|5[90]\\d|42\\d|3[875]\\d|2[98654321]\\d|9[8543210]|8[6421]|6[6543210]|5[87654321]|4[987654310]|3[9643210]|2[70]|7|1)\\d{1,14}$/;\n\n  const initialValues = {\n    first_name: \"\",\n    last_name: \"\",\n    tel: \"\",\n    email: \"\",\n    password: \"\",\n  };\n\n  const RegistrationSchema = Yup.object().shape({\n    first_name: Yup.string()\n      .min(3, \"Minimum 3 symbols\")\n      .max(50, \"Maximum 50 symbols\")\n      .required(\"AUTH.VALIDATION.REQUIRED_FIELD\"),\n    last_name: Yup.string()\n      .min(3, \"Minimum 3 symbols\")\n      .max(50, \"Maximum 50 symbols\")\n      .required(\"AUTH.VALIDATION.REQUIRED_FIELD\"),\n    // tel: Yup.string().matches(phoneRegExp, 'AUTH.VALIDATION.REQUIRED_FIELD'),\n    email: Yup.string()\n      .email(\"Wrong email format\")\n      .min(3, \"Minimum 3 symbols\")\n      .max(50, \"Maximum 50 symbols\")\n      .required(\"AUTH.VALIDATION.REQUIRED_FIELD\"),\n    password: Yup.string()\n      .min(3, \"Minimum 3 symbols\")\n      .max(50, \"Maximum 50 symbols\")\n      .required(\"AUTH.VALIDATION.REQUIRED_FIELD\"),\n  });\n\n  const formik = useFormik({\n    initialValues,\n    // validationSchema: RegistrationSchema,\n    onSubmit: (values, { setSubmitting }) => {\n      const body = {};\n      body[\"first_name\"] = values.first_name;\n      //   handleChange(body);\n\n      enableLoading();\n      nextStep();\n      setSubmitting(false);\n    },\n  });\n\n  const Continue = (e: any) => {\n    e.preventDefault();\n    formik.handleSubmit();\n    // nextStep()\n  };\n\n  return (\n    <>\n      <div className='md:col-span-1 mb-5'>\n        <div className='px-4 sm:px-0'>\n          <h3 className='text-lg font-medium leading-6 text-gray-900'>\n            Personal Information\n          </h3>\n          <p className='mt-1 text-sm text-gray-600'>\n            Use a permanent address where you can receive mail.\n          </p>\n        </div>\n      </div>\n      <div className='mt-5 md:col-span-2 md:mt-0'>\n        <form action='#' method='POST'>\n          <div className='overflow-hidden shadow sm:rounded-md'>\n            <div className='bg-white px-4 py-5 sm:p-6'>\n              {/* begin: Alert */}\n              {formik.status && (\n                // <div className=\"mb-10 alert alert-custom alert-light-danger alert-dismissible\">\n                //   <div className=\"alert-text font-weight-bold\">\n                <p>{formik.status}</p>\n                //   </div>\n                // </div>\n              )}\n              {/* end: Alert */}\n              <div className='grid grid-cols-6 gap-6'>\n                {/* BEGIN: First Name */}\n                <div className='col-span-6 sm:col-span-3'>\n                  <label\n                    htmlFor='first-name'\n                    className='block text-sm font-medium text-gray-700'\n                  >\n                    First name\n                  </label>\n                  <input\n                    // onChange={handleChange('first_name')}\n                    // value={first_name}\n                    {...formik.getFieldProps(\"first_name\")}\n                    type='text'\n                    name='first_name'\n                    id='first-name'\n                    autoComplete='given-name'\n                    className='mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm'\n                  />\n                  {formik.touched.first_name && formik.errors.first_name ? (\n                    <div className='fv-plugins-message-container'>\n                      <div className='fv-help-block'>\n                        {formik.errors.first_name}\n                      </div>\n                    </div>\n                  ) : null}\n                </div>\n                {/* END: First Name */}\n\n                {/* BEGIN: Last name */}\n                <div className='col-span-6 sm:col-span-3'>\n                  <label\n                    htmlFor='last-name'\n                    className='block text-sm font-medium text-gray-700'\n                  >\n                    Last name\n                  </label>\n                  <input\n                    value={values?.last_name}\n                    onChange={handleChange(\"last_name\")}\n                    type='text'\n                    name='last-name'\n                    id='last-name'\n                    autoComplete='family-name'\n                    className='mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm'\n                  />\n                  {formik.touched.last_name && formik.errors.last_name ? (\n                    <div className='fv-plugins-message-container'>\n                      <div className='fv-help-block'>\n                        {formik.errors.last_name}\n                      </div>\n                    </div>\n                  ) : null}\n                </div>\n                {/* END: Last name */}\n\n                {/* begin: Email */}\n                <div className='col-span-6 sm:col-span-3'>\n                  <label\n                    htmlFor='first-name'\n                    className='block text-sm font-medium text-gray-700'\n                  >\n                    Email Address\n                  </label>\n                  <input\n                    value={values?.email_address}\n                    onChange={handleChange(\"email_address\")}\n                    type='email'\n                    name='email-address'\n                    id='email-address'\n                    autoComplete='email'\n                    className='mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm'\n                  />\n                  {formik.touched.email && formik.errors.email ? (\n                    <div className='fv-plugins-message-container'>\n                      <div className='fv-help-block'>{formik.errors.email}</div>\n                    </div>\n                  ) : null}\n                </div>\n                {/* end: Email */}\n\n                {/* BEGIN: Phone Number */}\n                <div className='col-span-6 sm:col-span-3'>\n                  <label\n                    htmlFor='phone-number'\n                    className='block text-sm font-medium text-gray-700'\n                  >\n                    Phone Number\n                  </label>\n                  <input\n                    value={values?.phone_number}\n                    onChange={handleChange(\"phone_number\")}\n                    type='text'\n                    name='phone-number'\n                    id='phone-number'\n                    autoComplete='phone-number'\n                    className='mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm'\n                  />\n                  {formik.touched.tel && formik.errors.tel ? (\n                    <div className='fv-plugins-message-container'>\n                      <div className='fv-help-block'>{formik.errors.tel}</div>\n                    </div>\n                  ) : null}\n                </div>\n                {/* END: Phone Number */}\n\n                {/* BEGIN: License Number */}\n                <div className='col-span-6 sm:col-span-6'>\n                  <label\n                    htmlFor='license-number'\n                    className='block text-sm font-medium text-gray-700'\n                  >\n                    License Number\n                  </label>\n                  <input\n                    value={values?.license_number}\n                    onChange={handleChange(\"license_number\")}\n                    type='text'\n                    name='license-number'\n                    id='license-number'\n                    className='mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm'\n                  />\n                </div>\n                {/* END: License Number */}\n\n                {/* BEGIN: Password */}\n                <div className='col-span-6 sm:col-span-3'>\n                  <label\n                    htmlFor='password'\n                    className='block text-sm font-medium text-gray-700'\n                  >\n                    Password\n                  </label>\n                  <input\n                    value={values?.password}\n                    onChange={handleChange(\"password\")}\n                    type='password'\n                    name='password'\n                    id='password'\n                    autoComplete='given-name'\n                    className='mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm'\n                  />\n                  {formik.touched.password && formik.errors.password ? (\n                    <div className='fv-plugins-message-container'>\n                      <div className='fv-help-block'>\n                        {formik.errors.password}\n                      </div>\n                    </div>\n                  ) : null}\n                </div>\n                {/* END: Password */}\n                <div className='col-span-6 sm:col-span-3'>\n                  <label\n                    htmlFor='confirm-password'\n                    className='block text-sm font-medium text-gray-700'\n                  >\n                    Confirm Password\n                  </label>\n                  <input\n                    value={values?.confirm_password}\n                    onChange={handleChange(\"confirm_password\")}\n                    type='password'\n                    name='confirm-password'\n                    id='confirm-password'\n                    autoComplete='family-name'\n                    className='mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm'\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className='bg-gray-50 px-4 py-3 text-right sm:px-6'>\n              <button\n                type='submit'\n                disabled={formik.isSubmitting}\n                onClick={Continue}\n                className='inline-flex justify-center rounded-md border border-transparent bg-indigo-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2'\n              >\n                <span>Next</span>\n                {loading && (\n                  <div\n                    className='spinner-border animate-spin inline-block w-8 h-8 border-4 rounded-full'\n                    role='status'\n                  >\n                    <span className='visually-hidden'>Loading...</span>\n                  </div>\n                  //   <svg\n                  //     aria-hidden=\"true\"\n                  //     className=\"w-8 h-8 mr-2 text-gray-200 animate-spin dark:text-gray-600 fill-blue-600\"\n                  //     viewBox=\"0 0 100 101\"\n                  //     fill=\"none\"\n                  //     xmlns=\"http://www.w3.org/2000/svg\"\n                  //   >\n                  //     <path\n                  //       d=\"M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z\"\n                  //       fill=\"currentColor\"\n                  //     />\n                  //     <path\n                  //       d=\"M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z\"\n                  //       fill=\"currentFill\"\n                  //     />\n                  //   </svg>\n                  // <span class=\"sr-only\">Loading...</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default Administrator;\n","import * as React from 'react';\n\ninterface BusinessEntityProps {\n  prevStep?: any;\n  nextStep?: any;\n  handleChange?: any;\n  values?: any;\n}\n\nexport default function BusinessEntity(\n  props: React.PropsWithChildren<BusinessEntityProps>\n) {\n  const { prevStep, nextStep, handleChange, values } = props;\n\n  const Previous = (e: any) => {\n    e.preventDefault();\n    prevStep();\n  };\n\n  const Continue = (e: any) => {\n    e.preventDefault();\n    nextStep();\n  };\n\n  return (\n    <>\n      <div className=\"md:col-span-1 mb-5\">\n        <div className=\"px-4 sm:px-0\">\n          <h3 className=\"text-lg font-medium leading-6 text-gray-900\">\n            Business Entity\n          </h3>\n          <p className=\"mt-1 text-sm text-gray-600\">\n            Please provide information about the business you're signing up for.\n          </p>\n        </div>\n      </div>\n      <div className=\"mt-5 md:col-span-2 md:mt-0\">\n        <form action=\"#\" method=\"POST\">\n          <div className=\"overflow-hidden shadow sm:rounded-md\">\n            <div className=\"bg-white px-4 py-5 sm:p-6\">\n              <div className=\"grid grid-cols-6 gap-6\">\n                <div className=\"col-span-6 sm:col-span-6\">\n                  <label\n                    htmlFor=\"business-name\"\n                    className=\"block text-sm font-medium text-gray-700\"\n                  >\n                    Business Name\n                  </label>\n                  <input\n                    value={values?.business_name}\n                    onChange={handleChange('business_name')}\n                    type=\"text\"\n                    name=\"business-name\"\n                    id=\"business-name\"\n                    autoComplete=\"given-name\"\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n                  />\n                </div>\n\n                <div className=\"col-span-6 sm:col-span-6\">\n                  <label\n                    htmlFor=\"business-address\"\n                    className=\"block text-sm font-medium text-gray-700\"\n                  >\n                    Business Address\n                  </label>\n                  <textarea\n                    defaultValue={values?.business_address}\n                    onChange={handleChange('business_address')}\n                    name=\"business-address\"\n                    id=\"business-address\"\n                    autoComplete=\"address\"\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n                  />\n                </div>\n\n                <div className=\"col-span-6 sm:col-span-3\">\n                  <label\n                    htmlFor=\"email-address\"\n                    className=\"block text-sm font-medium text-gray-700\"\n                  >\n                    Business Email\n                  </label>\n                  <input\n                    value={values?.business_email}\n                    onChange={handleChange('business_email')}\n                    type=\"email\"\n                    name=\"email-address\"\n                    id=\"email-address\"\n                    autoComplete=\"phone-number\"\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n                  />\n                </div>\n\n                <div className=\"col-span-6 sm:col-span-3\">\n                  <label\n                    htmlFor=\"business-url\"\n                    className=\"block text-sm font-medium text-gray-700\"\n                  >\n                    Business URL\n                  </label>\n                  <input\n                    value={values?.business_url}\n                    onChange={handleChange('business_url')}\n                    type=\"text\"\n                    name=\"business-url\"\n                    id=\"business-url\"\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n                  />\n                </div>\n\n                {/* <div className=\"col-span-6 sm:col-span-3\">\n                        <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">Password</label>\n                        <input value={values?.password} onChange={handleChange('password')} type=\"password\" name=\"password\" id=\"password\" autoComplete=\"given-name\" className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"/>\n                    </div>\n\n                    <div className=\"col-span-6 sm:col-span-3\">\n                        <label htmlFor=\"confirm-password\" className=\"block text-sm font-medium text-gray-700\">Confirm Password</label>\n                        <input value={values?.confirm_password} onChange={handleChange('confirm_password')} type=\"password\" name=\"confirm-password\" id=\"confirm-password\" autoComplete=\"family-name\" className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"/>\n                    </div> */}\n              </div>\n            </div>\n            <div className=\"flex justify-between bg-gray-50\">\n              <div className=\"bg-gray-50 px-4 py-3 text-right sm:px-6\">\n                <button\n                  onClick={Previous}\n                  type=\"submit\"\n                  className=\"inline-flex justify-center rounded-md border border-transparent bg-indigo-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\n                >\n                  Previous\n                </button>\n              </div>\n              <div className=\"bg-gray-50 px-4 py-3 text-right sm:px-6\">\n                <button\n                  onClick={Continue}\n                  type=\"submit\"\n                  className=\"inline-flex justify-center rounded-md border border-transparent bg-indigo-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\n                >\n                  Next\n                </button>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport UserMgtViewModel from \"../../_app/shared/ViewModels/UserMgtViewModel\";\n\ninterface ForgotPasswordModel {\n  email: string;\n}\n\nexport default function ForgotPasswodContent() {\n  const [viewModel, setViewModel] = React.useState<ForgotPasswordModel>({\n    email: \"\",\n  });\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setViewModel({\n      ...viewModel,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { email } = viewModel;\n    const data = { email };\n    console.log(data);\n    const clientsViewModelsInstance = new UserMgtViewModel(\"forgotPassword\");\n    const signIn = clientsViewModelsInstance.forgotPassword(data);\n    signIn.then((response: any) => {\n      if (response.status == 200) {\n        location.href = \"/\";\n      } else {\n        location.href = \".\";\n      }\n    });\n  };\n  return (\n    <div className='mt-8 sm:mx-auto sm:w-full sm:max-w-md'>\n      <div className='bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10'>\n        <form\n          className='space-y-6'\n          action='#'\n          method='POST'\n          onSubmit={handleSubmit}\n        >\n          <div>\n            <label\n              htmlFor='email'\n              className='block text-sm font-medium text-gray-700'\n            >\n              Email address\n            </label>\n            <div className='mt-1'>\n              <input\n                id='email'\n                name='email'\n                type='email'\n                autoComplete='email'\n                required\n                onChange={handleChange}\n                className='block w-full appearance-none rounded-md border border-gray-300 px-3 py-2 placeholder-gray-400 shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-indigo-500 sm:text-sm'\n              />\n            </div>\n          </div>\n\n          <div className='flex items-center justify-between'>\n            <div className='text-sm'>\n              <Link\n                to='/sign-up'\n                className='font-medium text-indigo-600 hover:text-indigo-500'\n              >\n                Don't have an account? Sign Up Here!\n              </Link>\n            </div>\n          </div>\n\n          <div>\n            <button\n              type='submit'\n              className='flex w-full justify-center rounded-md border border-transparent bg-indigo-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2'\n            >\n              Reset My Password\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport UserMgtViewModel from \"../../_app/shared/ViewModels/UserMgtViewModel\";\ninterface SignInViewModel {\n  email: string;\n  password: string;\n}\n\nexport default function SignInContent() {\n  const [viewModel, setViewModel] = React.useState<SignInViewModel>({\n    email: \"\",\n    password: \"\",\n  });\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setViewModel({\n      ...viewModel,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { email, password } = viewModel;\n    const data = { email, password };\n    console.log(data);\n    const clientsViewModelsInstance = new UserMgtViewModel(\"signin\");\n    const signIn = clientsViewModelsInstance.signIn(data);\n    signIn.then((response: any) => {\n      if (response.status == 200) {\n        location.href = \"/\";\n      } else {\n        location.href = \".\";\n      }\n    });\n  };\n\n  return (\n    <div className='mt-8 sm:mx-auto sm:w-full sm:max-w-md'>\n      <div className='bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10'>\n        <form\n          className='space-y-6'\n          action='#'\n          method='POST'\n          onSubmit={handleSubmit}\n        >\n          <div>\n            <label\n              htmlFor='email'\n              className='block text-sm font-medium text-gray-700'\n            >\n              Email address\n            </label>\n            <div className='mt-1'>\n              <input\n                id='email'\n                onChange={handleChange}\n                name='email'\n                type='email'\n                autoComplete='email'\n                required\n                className='block w-full appearance-none rounded-md border border-gray-300 px-3 py-2 placeholder-gray-400 shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-indigo-500 sm:text-sm'\n              />\n            </div>\n          </div>\n\n          <div>\n            <label\n              htmlFor='password'\n              className='block text-sm font-medium text-gray-700'\n            >\n              Password\n            </label>\n            <div className='mt-1'>\n              <input\n                id='password'\n                onChange={handleChange}\n                name='password'\n                type='password'\n                autoComplete='current-password'\n                required\n                className='block w-full appearance-none rounded-md border border-gray-300 px-3 py-2 placeholder-gray-400 shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-indigo-500 sm:text-sm'\n              />\n            </div>\n          </div>\n\n          <div className='flex items-center justify-between'>\n            <div className='flex items-center'>\n              <input\n                id='remember-me'\n                name='remember-me'\n                type='checkbox'\n                className='h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500'\n              />\n              <label\n                htmlFor='remember-me'\n                className='ml-2 block text-sm text-gray-900'\n              >\n                Remember me\n              </label>\n            </div>\n\n            <div className='text-sm'>\n              <Link\n                to='/forgetpassword'\n                className='font-medium text-indigo-600 hover:text-indigo-500'\n              >\n                Forgot your password?\n              </Link>\n            </div>\n          </div>\n\n          <div>\n            <button\n              type='submit'\n              className='flex w-full justify-center rounded-md border border-transparent bg-indigo-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2'\n            >\n              Sign in\n            </button>\n          </div>\n        </form>\n\n        <div className='mt-6 flex items-center justify-between'>\n          <div className='text-sm'>\n            <Link\n              to='/sign-up'\n              className='font-medium text-indigo-600 hover:text-indigo-500'\n            >\n              Not yet registered? Enroll\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport UserWizard from \"../../_app/shared/member/UserWizard\";\nimport UserMgtViewModel from \"../../_app/shared/ViewModels/UserMgtViewModel\";\nimport Summary from \"./Summary\";\nimport { Component } from \"react\";\nimport Administrator from \"./Administrator\";\nimport BusinessEntity from \"./BusinessEntity\";\nimport { SignUpSteps } from \"../../_app/shared/member/SignUpSteps\";\n\nexport default class SignUpWizard extends Component {\n  state = {\n    step: 1,\n    first_name: \"\",\n    last_name: \"\",\n    email_address: \"\",\n    phone_number: \"\",\n    license_number: \"\",\n    password: \"\",\n    confirm_password: \"\",\n    business_name: \"\",\n    business_address: \"\",\n    business_email: \"\",\n    business_url: \"\",\n  };\n\n  prevStep = () => {\n    const { step } = this.state;\n    SignUpSteps[step - 1][\"status\"] = \"upcoming\";\n    SignUpSteps[step - 2][\"status\"] = \"current\";\n    this.setState({ step: step - 1 });\n  };\n\n  nextStep = () => {\n    const { step } = this.state;\n    SignUpSteps[step - 1][\"status\"] = \"complete\";\n    SignUpSteps[step][\"status\"] = \"current\";\n    this.setState({ step: step + 1 });\n  };\n\n  // handleChange = (data) => {\n  //   this.setState({ first_name: 'emmy' });\n  //   console.log('ln 41', data.first_name);\n  // };\n\n  handleChange = (input: any) => (e: any) => {\n    this.setState({ [input]: e.target.value });\n  };\n\n  handleSwitch = (id: string) => (e: any) => {\n    const { step } = this.state;\n    SignUpSteps[step - 1][\"status\"] = \"complete\";\n    SignUpSteps[parseInt(id) - 1][\"status\"] = \"current\";\n    this.setState({ step: parseInt(id) });\n  };\n\n  handleSubmit = () => {\n    console.log(this.state);\n    const clientsViewModelsInstance = new UserMgtViewModel(\"signup\");\n    const signUp = clientsViewModelsInstance.signUp(this.state);\n    signUp.then((response: any) => {\n      if (response.status == 200) {\n        location.href = \"/\";\n      } else {\n        location.href = \".\";\n      }\n    });\n  };\n\n  render() {\n    const { step } = this.state;\n    const {\n      first_name,\n      last_name,\n      email_address,\n      phone_number,\n      license_number,\n      password,\n      confirm_password,\n      business_name,\n      business_address,\n      business_email,\n      business_url,\n    } = this.state;\n    const values = {\n      first_name,\n      last_name,\n      email_address,\n      phone_number,\n      license_number,\n      password,\n      confirm_password,\n      business_name,\n      business_address,\n      business_email,\n      business_url,\n    };\n    switch (step) {\n      case 1:\n        return (\n          <>\n            <UserWizard\n              handleSwitch={this.handleSwitch}\n              steps={SignUpSteps}\n              content={\n                <Administrator\n                  nextStep={this.nextStep}\n                  handleChange={this.handleChange}\n                  values={values}\n                />\n              }\n            />\n          </>\n        );\n      case 2:\n        return (\n          <>\n            <UserWizard\n              handleSwitch={this.handleSwitch}\n              steps={SignUpSteps}\n              content={\n                <BusinessEntity\n                  prevStep={this.prevStep}\n                  nextStep={this.nextStep}\n                  handleChange={this.handleChange}\n                  values={values}\n                />\n              }\n            />\n          </>\n        );\n      case 3:\n        return (\n          <>\n            <UserWizard\n              handleSwitch={this.handleSwitch}\n              steps={SignUpSteps}\n              content={\n                <Summary\n                  prevStep={this.prevStep}\n                  values={values}\n                  handleSubmit={this.handleSubmit}\n                />\n              }\n            />\n          </>\n        );\n      default:\n      // do nothing\n    }\n  }\n}\n","import { PaperClipIcon } from '@heroicons/react/20/solid'\nimport { PropsWithChildren } from 'react'\nimport * as React from 'react'\ninterface SummaryProps {\n    prevStep?: any\n    values?: any\n    handleSubmit?: any\n}\n\nexport default function Summary(props: PropsWithChildren<SummaryProps>) {\n\n    const { prevStep, values, handleSubmit } = props;\n\n    const Previous = (e: any) => {\n        e.preventDefault();\n        prevStep();\n    }\n\n    const Submit = (e: any) => {\n        e.preventDefault();\n        handleSubmit();\n    }\n\n  return (\n    <div className=\"overflow-hidden bg-white shadow sm:rounded-lg sm:max-w-7xl\">\n      <div className=\"px-4 py-5 sm:px-6\">\n        <h3 className=\"text-lg font-medium leading-6 text-gray-900\">Administrator Information</h3>\n        <p className=\"mt-1 max-w-2xl text-sm text-gray-500\">Personal details and application.</p>\n      </div>\n      <div className=\"border-t border-gray-200\">\n        <dl>\n          <div className=\"bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n            <dt className=\"text-sm font-medium text-gray-500\">First Name</dt>\n            <dd className=\"mt-1 text-sm text-gray-900 sm:col-span-2 sm:mt-0\">{values.first_name}</dd>\n          </div>\n          <div className=\"bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n            <dt className=\"text-sm font-medium text-gray-500\">Last Name</dt>\n            <dd className=\"mt-1 text-sm text-gray-900 sm:col-span-2 sm:mt-0\">{values.last_name}</dd>\n          </div>\n          <div className=\"bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n            <dt className=\"text-sm font-medium text-gray-500\">Email address</dt>\n            <dd className=\"mt-1 text-sm text-gray-900 sm:col-span-2 sm:mt-0\">{values.email_address}</dd>\n          </div>\n          <div className=\"bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n            <dt className=\"text-sm font-medium text-gray-500\">Phone Number</dt>\n            <dd className=\"mt-1 text-sm text-gray-900 sm:col-span-2 sm:mt-0\">{values.phone_number}</dd>\n          </div>\n          <div className=\"bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n            <dt className=\"text-sm font-medium text-gray-500\">License Number</dt>\n            <dd className=\"mt-1 text-sm text-gray-900 sm:col-span-2 sm:mt-0\">{values.license_number}</dd>\n          </div>\n          <div className=\"bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n            <dt className=\"text-sm font-medium text-gray-500\">Password</dt>\n            <dd className=\"mt-1 text-sm text-gray-900 sm:col-span-2 sm:mt-0\">{'*'.repeat(values.password.length)}\n            </dd>\n          </div>\n        </dl>\n      </div>\n      <div className=\"px-4 py-5 sm:px-6\">\n        <h3 className=\"text-lg font-medium leading-6 text-gray-900\">Business Entity Information</h3>\n        <p className=\"mt-1 max-w-2xl text-sm text-gray-500\">Personal details and application.</p>\n      </div>\n      <div className=\"border-t border-gray-200\">\n        <dl>\n          <div className=\"bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n            <dt className=\"text-sm font-medium text-gray-500\">Business Name</dt>\n            <dd className=\"mt-1 text-sm text-gray-900 sm:col-span-2 sm:mt-0\">{values.business_name}</dd>\n          </div>\n          <div className=\"bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n            <dt className=\"text-sm font-medium text-gray-500\">Business Address</dt>\n            <dd className=\"mt-1 text-sm text-gray-900 sm:col-span-2 sm:mt-0\">{values.business_address}</dd>\n          </div>\n          <div className=\"bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n            <dt className=\"text-sm font-medium text-gray-500\">Business Email</dt>\n            <dd className=\"mt-1 text-sm text-gray-900 sm:col-span-2 sm:mt-0\">{values.business_email}</dd>\n          </div>\n          <div className=\"bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n            <dt className=\"text-sm font-medium text-gray-500\">Business URL</dt>\n            <dd className=\"mt-1 text-sm text-gray-900 sm:col-span-2 sm:mt-0\">{values.business_url}</dd>\n          </div>\n          <div className=\"bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n            <dt className=\"text-sm font-medium text-gray-500\">Attachments</dt>\n            <dd className=\"mt-1 text-sm text-gray-900 sm:col-span-2 sm:mt-0\">\n              <ul role=\"list\" className=\"divide-y divide-gray-200 rounded-md border border-gray-200\">\n                <li className=\"flex items-center justify-between py-3 pl-3 pr-4 text-sm\">\n                  <div className=\"flex w-0 flex-1 items-center\">\n                    <PaperClipIcon className=\"h-5 w-5 flex-shrink-0 text-gray-400\" aria-hidden=\"true\" />\n                    <span className=\"ml-2 w-0 flex-1 truncate\">cac_document.pdf</span>\n                  </div>\n                  <div className=\"ml-4 flex-shrink-0\">\n                    <a href=\"#\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\n                      Download\n                    </a>\n                  </div>\n                </li>\n                <li className=\"flex items-center justify-between py-3 pl-3 pr-4 text-sm\">\n                  <div className=\"flex w-0 flex-1 items-center\">\n                    <PaperClipIcon className=\"h-5 w-5 flex-shrink-0 text-gray-400\" aria-hidden=\"true\" />\n                    <span className=\"ml-2 w-0 flex-1 truncate\">memart_document.pdf</span>\n                  </div>\n                  <div className=\"ml-4 flex-shrink-0\">\n                    <a href=\"#\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\n                      Download\n                    </a>\n                  </div>\n                </li>\n              </ul>\n            </dd>\n          </div>\n        </dl>\n      </div>\n      <div className='flex justify-between bg-gray-50'>\n        <div className=\"bg-gray-50 px-4 py-3 text-right sm:px-6\">\n            <button onClick={Previous} type=\"submit\" className=\"inline-flex justify-center rounded-md border border-transparent bg-indigo-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\">Previous</button>\n        </div>\n        <div className=\"bg-gray-50 px-4 py-3 text-right sm:px-6\">\n            <button onClick={Submit} type=\"submit\" className=\"inline-flex justify-center rounded-md border border-transparent bg-indigo-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\">Enroll</button>\n        </div>\n        </div>\n    </div>\n  )\n}\n","import * as React from \"react\";\nimport SignInContent from \"./forms/SignInContent\";\n\nexport default function SignIn() {\n  return <SignInContent />;\n}\n","import * as React from \"react\";\nimport SignUpWizard from \"./forms/SignUpWizard\";\n\nexport default function SignUp() {\n  return <SignUpWizard />;\n}\n","import { Children, createContext, useContext, useRef, useEffect, useReducer, useCallback, useMemo, useImperativeHandle, createElement, useLayoutEffect, forwardRef, Component } from 'react';\nimport isEqual from 'react-fast-compare';\nimport deepmerge from 'deepmerge';\nimport isPlainObject from 'lodash-es/isPlainObject';\nimport clone from 'lodash-es/clone';\nimport toPath from 'lodash-es/toPath';\nimport invariant from 'tiny-warning';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport cloneDeep from 'lodash-es/cloneDeep';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\n/** @private is the value an empty array? */\n\nvar isEmptyArray = function isEmptyArray(value) {\n  return Array.isArray(value) && value.length === 0;\n};\n/** @private is the given object a Function? */\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n/** @private is the given object an Object? */\n\nvar isObject = function isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n};\n/** @private is the given object an integer? */\n\nvar isInteger = function isInteger(obj) {\n  return String(Math.floor(Number(obj))) === obj;\n};\n/** @private is the given object a string? */\n\nvar isString = function isString(obj) {\n  return Object.prototype.toString.call(obj) === '[object String]';\n};\n/** @private is the given object a NaN? */\n// eslint-disable-next-line no-self-compare\n\nvar isNaN$1 = function isNaN(obj) {\n  return obj !== obj;\n};\n/** @private Does a React component have exactly 0 children? */\n\nvar isEmptyChildren = function isEmptyChildren(children) {\n  return Children.count(children) === 0;\n};\n/** @private is the given object/value a promise? */\n\nvar isPromise = function isPromise(value) {\n  return isObject(value) && isFunction(value.then);\n};\n/** @private is the given object/value a type of synthetic event? */\n\nvar isInputEvent = function isInputEvent(value) {\n  return value && isObject(value) && isObject(value.target);\n};\n/**\r\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\r\n * not safe to call document.activeElement if there is nothing focused.\r\n *\r\n * The activeElement will be null only if the document or document body is not\r\n * yet defined.\r\n *\r\n * @param {?Document} doc Defaults to current document.\r\n * @return {Element | null}\r\n * @see https://github.com/facebook/fbjs/blob/master/packages/fbjs/src/core/dom/getActiveElement.js\r\n */\n\nfunction getActiveElement(doc) {\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n/**\r\n * Deeply get a value from an object via its path.\r\n */\n\nfunction getIn(obj, key, def, p) {\n  if (p === void 0) {\n    p = 0;\n  }\n\n  var path = toPath(key);\n\n  while (obj && p < path.length) {\n    obj = obj[path[p++]];\n  }\n\n  return obj === undefined ? def : obj;\n}\n/**\r\n * Deeply set a value from in object via it's path. If the value at `path`\r\n * has changed, return a shallow copy of obj with `value` set at `path`.\r\n * If `value` has not changed, return the original `obj`.\r\n *\r\n * Existing objects / arrays along `path` are also shallow copied. Sibling\r\n * objects along path retain the same internal js reference. Since new\r\n * objects / arrays are only created along `path`, we can test if anything\r\n * changed in a nested structure by comparing the object's reference in\r\n * the old and new object, similar to how russian doll cache invalidation\r\n * works.\r\n *\r\n * In earlier versions of this function, which used cloneDeep, there were\r\n * issues whereby settings a nested value would mutate the parent\r\n * instead of creating a new object. `clone` avoids that bug making a\r\n * shallow copy of the objects along the update path\r\n * so no object is mutated in place.\r\n *\r\n * Before changing this function, please read through the following\r\n * discussions.\r\n *\r\n * @see https://github.com/developit/linkstate\r\n * @see https://github.com/jaredpalmer/formik/pull/123\r\n */\n\nfunction setIn(obj, path, value) {\n  var res = clone(obj); // this keeps inheritance when obj is a class\n\n  var resVal = res;\n  var i = 0;\n  var pathArray = toPath(path);\n\n  for (; i < pathArray.length - 1; i++) {\n    var currentPath = pathArray[i];\n    var currentObj = getIn(obj, pathArray.slice(0, i + 1));\n\n    if (currentObj && (isObject(currentObj) || Array.isArray(currentObj))) {\n      resVal = resVal[currentPath] = clone(currentObj);\n    } else {\n      var nextPath = pathArray[i + 1];\n      resVal = resVal[currentPath] = isInteger(nextPath) && Number(nextPath) >= 0 ? [] : {};\n    }\n  } // Return original object if new value is the same as current\n\n\n  if ((i === 0 ? obj : resVal)[pathArray[i]] === value) {\n    return obj;\n  }\n\n  if (value === undefined) {\n    delete resVal[pathArray[i]];\n  } else {\n    resVal[pathArray[i]] = value;\n  } // If the path array has a single element, the loop did not run.\n  // Deleting on `resVal` had no effect in this scenario, so we delete on the result instead.\n\n\n  if (i === 0 && value === undefined) {\n    delete res[pathArray[i]];\n  }\n\n  return res;\n}\n/**\r\n * Recursively a set the same value for all keys and arrays nested object, cloning\r\n * @param object\r\n * @param value\r\n * @param visited\r\n * @param response\r\n */\n\nfunction setNestedObjectValues(object, value, visited, response) {\n  if (visited === void 0) {\n    visited = new WeakMap();\n  }\n\n  if (response === void 0) {\n    response = {};\n  }\n\n  for (var _i = 0, _Object$keys = Object.keys(object); _i < _Object$keys.length; _i++) {\n    var k = _Object$keys[_i];\n    var val = object[k];\n\n    if (isObject(val)) {\n      if (!visited.get(val)) {\n        visited.set(val, true); // In order to keep array values consistent for both dot path  and\n        // bracket syntax, we need to check if this is an array so that\n        // this will output  { friends: [true] } and not { friends: { \"0\": true } }\n\n        response[k] = Array.isArray(val) ? [] : {};\n        setNestedObjectValues(val, value, visited, response[k]);\n      }\n    } else {\n      response[k] = value;\n    }\n  }\n\n  return response;\n}\n\nvar FormikContext = /*#__PURE__*/createContext(undefined);\nFormikContext.displayName = 'FormikContext';\nvar FormikProvider = FormikContext.Provider;\nvar FormikConsumer = FormikContext.Consumer;\nfunction useFormikContext() {\n  var formik = useContext(FormikContext);\n  !!!formik ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Formik context is undefined, please verify you are calling useFormikContext() as child of a <Formik> component.\") : invariant(false) : void 0;\n  return formik;\n}\n\nfunction formikReducer(state, msg) {\n  switch (msg.type) {\n    case 'SET_VALUES':\n      return _extends({}, state, {\n        values: msg.payload\n      });\n\n    case 'SET_TOUCHED':\n      return _extends({}, state, {\n        touched: msg.payload\n      });\n\n    case 'SET_ERRORS':\n      if (isEqual(state.errors, msg.payload)) {\n        return state;\n      }\n\n      return _extends({}, state, {\n        errors: msg.payload\n      });\n\n    case 'SET_STATUS':\n      return _extends({}, state, {\n        status: msg.payload\n      });\n\n    case 'SET_ISSUBMITTING':\n      return _extends({}, state, {\n        isSubmitting: msg.payload\n      });\n\n    case 'SET_ISVALIDATING':\n      return _extends({}, state, {\n        isValidating: msg.payload\n      });\n\n    case 'SET_FIELD_VALUE':\n      return _extends({}, state, {\n        values: setIn(state.values, msg.payload.field, msg.payload.value)\n      });\n\n    case 'SET_FIELD_TOUCHED':\n      return _extends({}, state, {\n        touched: setIn(state.touched, msg.payload.field, msg.payload.value)\n      });\n\n    case 'SET_FIELD_ERROR':\n      return _extends({}, state, {\n        errors: setIn(state.errors, msg.payload.field, msg.payload.value)\n      });\n\n    case 'RESET_FORM':\n      return _extends({}, state, msg.payload);\n\n    case 'SET_FORMIK_STATE':\n      return msg.payload(state);\n\n    case 'SUBMIT_ATTEMPT':\n      return _extends({}, state, {\n        touched: setNestedObjectValues(state.values, true),\n        isSubmitting: true,\n        submitCount: state.submitCount + 1\n      });\n\n    case 'SUBMIT_FAILURE':\n      return _extends({}, state, {\n        isSubmitting: false\n      });\n\n    case 'SUBMIT_SUCCESS':\n      return _extends({}, state, {\n        isSubmitting: false\n      });\n\n    default:\n      return state;\n  }\n} // Initial empty states // objects\n\n\nvar emptyErrors = {};\nvar emptyTouched = {};\nfunction useFormik(_ref) {\n  var _ref$validateOnChange = _ref.validateOnChange,\n      validateOnChange = _ref$validateOnChange === void 0 ? true : _ref$validateOnChange,\n      _ref$validateOnBlur = _ref.validateOnBlur,\n      validateOnBlur = _ref$validateOnBlur === void 0 ? true : _ref$validateOnBlur,\n      _ref$validateOnMount = _ref.validateOnMount,\n      validateOnMount = _ref$validateOnMount === void 0 ? false : _ref$validateOnMount,\n      isInitialValid = _ref.isInitialValid,\n      _ref$enableReinitiali = _ref.enableReinitialize,\n      enableReinitialize = _ref$enableReinitiali === void 0 ? false : _ref$enableReinitiali,\n      onSubmit = _ref.onSubmit,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"validateOnChange\", \"validateOnBlur\", \"validateOnMount\", \"isInitialValid\", \"enableReinitialize\", \"onSubmit\"]);\n\n  var props = _extends({\n    validateOnChange: validateOnChange,\n    validateOnBlur: validateOnBlur,\n    validateOnMount: validateOnMount,\n    onSubmit: onSubmit\n  }, rest);\n\n  var initialValues = useRef(props.initialValues);\n  var initialErrors = useRef(props.initialErrors || emptyErrors);\n  var initialTouched = useRef(props.initialTouched || emptyTouched);\n  var initialStatus = useRef(props.initialStatus);\n  var isMounted = useRef(false);\n  var fieldRegistry = useRef({});\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(function () {\n      !(typeof isInitialValid === 'undefined') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'isInitialValid has been deprecated and will be removed in future versions of Formik. Please use initialErrors or validateOnMount instead.') : invariant(false) : void 0; // eslint-disable-next-line\n    }, []);\n  }\n\n  useEffect(function () {\n    isMounted.current = true;\n    return function () {\n      isMounted.current = false;\n    };\n  }, []);\n\n  var _React$useReducer = useReducer(formikReducer, {\n    values: props.initialValues,\n    errors: props.initialErrors || emptyErrors,\n    touched: props.initialTouched || emptyTouched,\n    status: props.initialStatus,\n    isSubmitting: false,\n    isValidating: false,\n    submitCount: 0\n  }),\n      state = _React$useReducer[0],\n      dispatch = _React$useReducer[1];\n\n  var runValidateHandler = useCallback(function (values, field) {\n    return new Promise(function (resolve, reject) {\n      var maybePromisedErrors = props.validate(values, field);\n\n      if (maybePromisedErrors == null) {\n        // use loose null check here on purpose\n        resolve(emptyErrors);\n      } else if (isPromise(maybePromisedErrors)) {\n        maybePromisedErrors.then(function (errors) {\n          resolve(errors || emptyErrors);\n        }, function (actualException) {\n          if (process.env.NODE_ENV !== 'production') {\n            console.warn(\"Warning: An unhandled error was caught during validation in <Formik validate />\", actualException);\n          }\n\n          reject(actualException);\n        });\n      } else {\n        resolve(maybePromisedErrors);\n      }\n    });\n  }, [props.validate]);\n  /**\r\n   * Run validation against a Yup schema and optionally run a function if successful\r\n   */\n\n  var runValidationSchema = useCallback(function (values, field) {\n    var validationSchema = props.validationSchema;\n    var schema = isFunction(validationSchema) ? validationSchema(field) : validationSchema;\n    var promise = field && schema.validateAt ? schema.validateAt(field, values) : validateYupSchema(values, schema);\n    return new Promise(function (resolve, reject) {\n      promise.then(function () {\n        resolve(emptyErrors);\n      }, function (err) {\n        // Yup will throw a validation error if validation fails. We catch those and\n        // resolve them into Formik errors. We can sniff if something is a Yup error\n        // by checking error.name.\n        // @see https://github.com/jquense/yup#validationerrorerrors-string--arraystring-value-any-path-string\n        if (err.name === 'ValidationError') {\n          resolve(yupToFormErrors(err));\n        } else {\n          // We throw any other errors\n          if (process.env.NODE_ENV !== 'production') {\n            console.warn(\"Warning: An unhandled error was caught during validation in <Formik validationSchema />\", err);\n          }\n\n          reject(err);\n        }\n      });\n    });\n  }, [props.validationSchema]);\n  var runSingleFieldLevelValidation = useCallback(function (field, value) {\n    return new Promise(function (resolve) {\n      return resolve(fieldRegistry.current[field].validate(value));\n    });\n  }, []);\n  var runFieldLevelValidations = useCallback(function (values) {\n    var fieldKeysWithValidation = Object.keys(fieldRegistry.current).filter(function (f) {\n      return isFunction(fieldRegistry.current[f].validate);\n    }); // Construct an array with all of the field validation functions\n\n    var fieldValidations = fieldKeysWithValidation.length > 0 ? fieldKeysWithValidation.map(function (f) {\n      return runSingleFieldLevelValidation(f, getIn(values, f));\n    }) : [Promise.resolve('DO_NOT_DELETE_YOU_WILL_BE_FIRED')]; // use special case ;)\n\n    return Promise.all(fieldValidations).then(function (fieldErrorsList) {\n      return fieldErrorsList.reduce(function (prev, curr, index) {\n        if (curr === 'DO_NOT_DELETE_YOU_WILL_BE_FIRED') {\n          return prev;\n        }\n\n        if (curr) {\n          prev = setIn(prev, fieldKeysWithValidation[index], curr);\n        }\n\n        return prev;\n      }, {});\n    });\n  }, [runSingleFieldLevelValidation]); // Run all validations and return the result\n\n  var runAllValidations = useCallback(function (values) {\n    return Promise.all([runFieldLevelValidations(values), props.validationSchema ? runValidationSchema(values) : {}, props.validate ? runValidateHandler(values) : {}]).then(function (_ref2) {\n      var fieldErrors = _ref2[0],\n          schemaErrors = _ref2[1],\n          validateErrors = _ref2[2];\n      var combinedErrors = deepmerge.all([fieldErrors, schemaErrors, validateErrors], {\n        arrayMerge: arrayMerge\n      });\n      return combinedErrors;\n    });\n  }, [props.validate, props.validationSchema, runFieldLevelValidations, runValidateHandler, runValidationSchema]); // Run all validations methods and update state accordingly\n\n  var validateFormWithHighPriority = useEventCallback(function (values) {\n    if (values === void 0) {\n      values = state.values;\n    }\n\n    dispatch({\n      type: 'SET_ISVALIDATING',\n      payload: true\n    });\n    return runAllValidations(values).then(function (combinedErrors) {\n      if (!!isMounted.current) {\n        dispatch({\n          type: 'SET_ISVALIDATING',\n          payload: false\n        });\n        dispatch({\n          type: 'SET_ERRORS',\n          payload: combinedErrors\n        });\n      }\n\n      return combinedErrors;\n    });\n  });\n  useEffect(function () {\n    if (validateOnMount && isMounted.current === true && isEqual(initialValues.current, props.initialValues)) {\n      validateFormWithHighPriority(initialValues.current);\n    }\n  }, [validateOnMount, validateFormWithHighPriority]);\n  var resetForm = useCallback(function (nextState) {\n    var values = nextState && nextState.values ? nextState.values : initialValues.current;\n    var errors = nextState && nextState.errors ? nextState.errors : initialErrors.current ? initialErrors.current : props.initialErrors || {};\n    var touched = nextState && nextState.touched ? nextState.touched : initialTouched.current ? initialTouched.current : props.initialTouched || {};\n    var status = nextState && nextState.status ? nextState.status : initialStatus.current ? initialStatus.current : props.initialStatus;\n    initialValues.current = values;\n    initialErrors.current = errors;\n    initialTouched.current = touched;\n    initialStatus.current = status;\n\n    var dispatchFn = function dispatchFn() {\n      dispatch({\n        type: 'RESET_FORM',\n        payload: {\n          isSubmitting: !!nextState && !!nextState.isSubmitting,\n          errors: errors,\n          touched: touched,\n          status: status,\n          values: values,\n          isValidating: !!nextState && !!nextState.isValidating,\n          submitCount: !!nextState && !!nextState.submitCount && typeof nextState.submitCount === 'number' ? nextState.submitCount : 0\n        }\n      });\n    };\n\n    if (props.onReset) {\n      var maybePromisedOnReset = props.onReset(state.values, imperativeMethods);\n\n      if (isPromise(maybePromisedOnReset)) {\n        maybePromisedOnReset.then(dispatchFn);\n      } else {\n        dispatchFn();\n      }\n    } else {\n      dispatchFn();\n    }\n  }, [props.initialErrors, props.initialStatus, props.initialTouched]);\n  useEffect(function () {\n    if (isMounted.current === true && !isEqual(initialValues.current, props.initialValues)) {\n      if (enableReinitialize) {\n        initialValues.current = props.initialValues;\n        resetForm();\n      }\n\n      if (validateOnMount) {\n        validateFormWithHighPriority(initialValues.current);\n      }\n    }\n  }, [enableReinitialize, props.initialValues, resetForm, validateOnMount, validateFormWithHighPriority]);\n  useEffect(function () {\n    if (enableReinitialize && isMounted.current === true && !isEqual(initialErrors.current, props.initialErrors)) {\n      initialErrors.current = props.initialErrors || emptyErrors;\n      dispatch({\n        type: 'SET_ERRORS',\n        payload: props.initialErrors || emptyErrors\n      });\n    }\n  }, [enableReinitialize, props.initialErrors]);\n  useEffect(function () {\n    if (enableReinitialize && isMounted.current === true && !isEqual(initialTouched.current, props.initialTouched)) {\n      initialTouched.current = props.initialTouched || emptyTouched;\n      dispatch({\n        type: 'SET_TOUCHED',\n        payload: props.initialTouched || emptyTouched\n      });\n    }\n  }, [enableReinitialize, props.initialTouched]);\n  useEffect(function () {\n    if (enableReinitialize && isMounted.current === true && !isEqual(initialStatus.current, props.initialStatus)) {\n      initialStatus.current = props.initialStatus;\n      dispatch({\n        type: 'SET_STATUS',\n        payload: props.initialStatus\n      });\n    }\n  }, [enableReinitialize, props.initialStatus, props.initialTouched]);\n  var validateField = useEventCallback(function (name) {\n    // This will efficiently validate a single field by avoiding state\n    // changes if the validation function is synchronous. It's different from\n    // what is called when using validateForm.\n    if (fieldRegistry.current[name] && isFunction(fieldRegistry.current[name].validate)) {\n      var value = getIn(state.values, name);\n      var maybePromise = fieldRegistry.current[name].validate(value);\n\n      if (isPromise(maybePromise)) {\n        // Only flip isValidating if the function is async.\n        dispatch({\n          type: 'SET_ISVALIDATING',\n          payload: true\n        });\n        return maybePromise.then(function (x) {\n          return x;\n        }).then(function (error) {\n          dispatch({\n            type: 'SET_FIELD_ERROR',\n            payload: {\n              field: name,\n              value: error\n            }\n          });\n          dispatch({\n            type: 'SET_ISVALIDATING',\n            payload: false\n          });\n        });\n      } else {\n        dispatch({\n          type: 'SET_FIELD_ERROR',\n          payload: {\n            field: name,\n            value: maybePromise\n          }\n        });\n        return Promise.resolve(maybePromise);\n      }\n    } else if (props.validationSchema) {\n      dispatch({\n        type: 'SET_ISVALIDATING',\n        payload: true\n      });\n      return runValidationSchema(state.values, name).then(function (x) {\n        return x;\n      }).then(function (error) {\n        dispatch({\n          type: 'SET_FIELD_ERROR',\n          payload: {\n            field: name,\n            value: error[name]\n          }\n        });\n        dispatch({\n          type: 'SET_ISVALIDATING',\n          payload: false\n        });\n      });\n    }\n\n    return Promise.resolve();\n  });\n  var registerField = useCallback(function (name, _ref3) {\n    var validate = _ref3.validate;\n    fieldRegistry.current[name] = {\n      validate: validate\n    };\n  }, []);\n  var unregisterField = useCallback(function (name) {\n    delete fieldRegistry.current[name];\n  }, []);\n  var setTouched = useEventCallback(function (touched, shouldValidate) {\n    dispatch({\n      type: 'SET_TOUCHED',\n      payload: touched\n    });\n    var willValidate = shouldValidate === undefined ? validateOnBlur : shouldValidate;\n    return willValidate ? validateFormWithHighPriority(state.values) : Promise.resolve();\n  });\n  var setErrors = useCallback(function (errors) {\n    dispatch({\n      type: 'SET_ERRORS',\n      payload: errors\n    });\n  }, []);\n  var setValues = useEventCallback(function (values, shouldValidate) {\n    var resolvedValues = isFunction(values) ? values(state.values) : values;\n    dispatch({\n      type: 'SET_VALUES',\n      payload: resolvedValues\n    });\n    var willValidate = shouldValidate === undefined ? validateOnChange : shouldValidate;\n    return willValidate ? validateFormWithHighPriority(resolvedValues) : Promise.resolve();\n  });\n  var setFieldError = useCallback(function (field, value) {\n    dispatch({\n      type: 'SET_FIELD_ERROR',\n      payload: {\n        field: field,\n        value: value\n      }\n    });\n  }, []);\n  var setFieldValue = useEventCallback(function (field, value, shouldValidate) {\n    dispatch({\n      type: 'SET_FIELD_VALUE',\n      payload: {\n        field: field,\n        value: value\n      }\n    });\n    var willValidate = shouldValidate === undefined ? validateOnChange : shouldValidate;\n    return willValidate ? validateFormWithHighPriority(setIn(state.values, field, value)) : Promise.resolve();\n  });\n  var executeChange = useCallback(function (eventOrTextValue, maybePath) {\n    // By default, assume that the first argument is a string. This allows us to use\n    // handleChange with React Native and React Native Web's onChangeText prop which\n    // provides just the value of the input.\n    var field = maybePath;\n    var val = eventOrTextValue;\n    var parsed; // If the first argument is not a string though, it has to be a synthetic React Event (or a fake one),\n    // so we handle like we would a normal HTML change event.\n\n    if (!isString(eventOrTextValue)) {\n      // If we can, persist the event\n      // @see https://reactjs.org/docs/events.html#event-pooling\n      if (eventOrTextValue.persist) {\n        eventOrTextValue.persist();\n      }\n\n      var target = eventOrTextValue.target ? eventOrTextValue.target : eventOrTextValue.currentTarget;\n      var type = target.type,\n          name = target.name,\n          id = target.id,\n          value = target.value,\n          checked = target.checked,\n          outerHTML = target.outerHTML,\n          options = target.options,\n          multiple = target.multiple;\n      field = maybePath ? maybePath : name ? name : id;\n\n      if (!field && process.env.NODE_ENV !== \"production\") {\n        warnAboutMissingIdentifier({\n          htmlContent: outerHTML,\n          documentationAnchorLink: 'handlechange-e-reactchangeeventany--void',\n          handlerName: 'handleChange'\n        });\n      }\n\n      val = /number|range/.test(type) ? (parsed = parseFloat(value), isNaN(parsed) ? '' : parsed) : /checkbox/.test(type) // checkboxes\n      ? getValueForCheckbox(getIn(state.values, field), checked, value) : options && multiple // <select multiple>\n      ? getSelectedValues(options) : value;\n    }\n\n    if (field) {\n      // Set form fields by name\n      setFieldValue(field, val);\n    }\n  }, [setFieldValue, state.values]);\n  var handleChange = useEventCallback(function (eventOrPath) {\n    if (isString(eventOrPath)) {\n      return function (event) {\n        return executeChange(event, eventOrPath);\n      };\n    } else {\n      executeChange(eventOrPath);\n    }\n  });\n  var setFieldTouched = useEventCallback(function (field, touched, shouldValidate) {\n    if (touched === void 0) {\n      touched = true;\n    }\n\n    dispatch({\n      type: 'SET_FIELD_TOUCHED',\n      payload: {\n        field: field,\n        value: touched\n      }\n    });\n    var willValidate = shouldValidate === undefined ? validateOnBlur : shouldValidate;\n    return willValidate ? validateFormWithHighPriority(state.values) : Promise.resolve();\n  });\n  var executeBlur = useCallback(function (e, path) {\n    if (e.persist) {\n      e.persist();\n    }\n\n    var _e$target = e.target,\n        name = _e$target.name,\n        id = _e$target.id,\n        outerHTML = _e$target.outerHTML;\n    var field = path ? path : name ? name : id;\n\n    if (!field && process.env.NODE_ENV !== \"production\") {\n      warnAboutMissingIdentifier({\n        htmlContent: outerHTML,\n        documentationAnchorLink: 'handleblur-e-any--void',\n        handlerName: 'handleBlur'\n      });\n    }\n\n    setFieldTouched(field, true);\n  }, [setFieldTouched]);\n  var handleBlur = useEventCallback(function (eventOrString) {\n    if (isString(eventOrString)) {\n      return function (event) {\n        return executeBlur(event, eventOrString);\n      };\n    } else {\n      executeBlur(eventOrString);\n    }\n  });\n  var setFormikState = useCallback(function (stateOrCb) {\n    if (isFunction(stateOrCb)) {\n      dispatch({\n        type: 'SET_FORMIK_STATE',\n        payload: stateOrCb\n      });\n    } else {\n      dispatch({\n        type: 'SET_FORMIK_STATE',\n        payload: function payload() {\n          return stateOrCb;\n        }\n      });\n    }\n  }, []);\n  var setStatus = useCallback(function (status) {\n    dispatch({\n      type: 'SET_STATUS',\n      payload: status\n    });\n  }, []);\n  var setSubmitting = useCallback(function (isSubmitting) {\n    dispatch({\n      type: 'SET_ISSUBMITTING',\n      payload: isSubmitting\n    });\n  }, []);\n  var submitForm = useEventCallback(function () {\n    dispatch({\n      type: 'SUBMIT_ATTEMPT'\n    });\n    return validateFormWithHighPriority().then(function (combinedErrors) {\n      // In case an error was thrown and passed to the resolved Promise,\n      // `combinedErrors` can be an instance of an Error. We need to check\n      // that and abort the submit.\n      // If we don't do that, calling `Object.keys(new Error())` yields an\n      // empty array, which causes the validation to pass and the form\n      // to be submitted.\n      var isInstanceOfError = combinedErrors instanceof Error;\n      var isActuallyValid = !isInstanceOfError && Object.keys(combinedErrors).length === 0;\n\n      if (isActuallyValid) {\n        // Proceed with submit...\n        //\n        // To respect sync submit fns, we can't simply wrap executeSubmit in a promise and\n        // _always_ dispatch SUBMIT_SUCCESS because isSubmitting would then always be false.\n        // This would be fine in simple cases, but make it impossible to disable submit\n        // buttons where people use callbacks or promises as side effects (which is basically\n        // all of v1 Formik code). Instead, recall that we are inside of a promise chain already,\n        //  so we can try/catch executeSubmit(), if it returns undefined, then just bail.\n        // If there are errors, throw em. Otherwise, wrap executeSubmit in a promise and handle\n        // cleanup of isSubmitting on behalf of the consumer.\n        var promiseOrUndefined;\n\n        try {\n          promiseOrUndefined = executeSubmit(); // Bail if it's sync, consumer is responsible for cleaning up\n          // via setSubmitting(false)\n\n          if (promiseOrUndefined === undefined) {\n            return;\n          }\n        } catch (error) {\n          throw error;\n        }\n\n        return Promise.resolve(promiseOrUndefined).then(function (result) {\n          if (!!isMounted.current) {\n            dispatch({\n              type: 'SUBMIT_SUCCESS'\n            });\n          }\n\n          return result;\n        })[\"catch\"](function (_errors) {\n          if (!!isMounted.current) {\n            dispatch({\n              type: 'SUBMIT_FAILURE'\n            }); // This is a legit error rejected by the onSubmit fn\n            // so we don't want to break the promise chain\n\n            throw _errors;\n          }\n        });\n      } else if (!!isMounted.current) {\n        // ^^^ Make sure Formik is still mounted before updating state\n        dispatch({\n          type: 'SUBMIT_FAILURE'\n        }); // throw combinedErrors;\n\n        if (isInstanceOfError) {\n          throw combinedErrors;\n        }\n      }\n\n      return;\n    });\n  });\n  var handleSubmit = useEventCallback(function (e) {\n    if (e && e.preventDefault && isFunction(e.preventDefault)) {\n      e.preventDefault();\n    }\n\n    if (e && e.stopPropagation && isFunction(e.stopPropagation)) {\n      e.stopPropagation();\n    } // Warn if form submission is triggered by a <button> without a\n    // specified `type` attribute during development. This mitigates\n    // a common gotcha in forms with both reset and submit buttons,\n    // where the dev forgets to add type=\"button\" to the reset button.\n\n\n    if (process.env.NODE_ENV !== \"production\" && typeof document !== 'undefined') {\n      // Safely get the active element (works with IE)\n      var activeElement = getActiveElement();\n\n      if (activeElement !== null && activeElement instanceof HTMLButtonElement) {\n        !(activeElement.attributes && activeElement.attributes.getNamedItem('type')) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'You submitted a Formik form using a button with an unspecified `type` attribute.  Most browsers default button elements to `type=\"submit\"`. If this is not a submit button, please add `type=\"button\"`.') : invariant(false) : void 0;\n      }\n    }\n\n    submitForm()[\"catch\"](function (reason) {\n      console.warn(\"Warning: An unhandled error was caught from submitForm()\", reason);\n    });\n  });\n  var imperativeMethods = {\n    resetForm: resetForm,\n    validateForm: validateFormWithHighPriority,\n    validateField: validateField,\n    setErrors: setErrors,\n    setFieldError: setFieldError,\n    setFieldTouched: setFieldTouched,\n    setFieldValue: setFieldValue,\n    setStatus: setStatus,\n    setSubmitting: setSubmitting,\n    setTouched: setTouched,\n    setValues: setValues,\n    setFormikState: setFormikState,\n    submitForm: submitForm\n  };\n  var executeSubmit = useEventCallback(function () {\n    return onSubmit(state.values, imperativeMethods);\n  });\n  var handleReset = useEventCallback(function (e) {\n    if (e && e.preventDefault && isFunction(e.preventDefault)) {\n      e.preventDefault();\n    }\n\n    if (e && e.stopPropagation && isFunction(e.stopPropagation)) {\n      e.stopPropagation();\n    }\n\n    resetForm();\n  });\n  var getFieldMeta = useCallback(function (name) {\n    return {\n      value: getIn(state.values, name),\n      error: getIn(state.errors, name),\n      touched: !!getIn(state.touched, name),\n      initialValue: getIn(initialValues.current, name),\n      initialTouched: !!getIn(initialTouched.current, name),\n      initialError: getIn(initialErrors.current, name)\n    };\n  }, [state.errors, state.touched, state.values]);\n  var getFieldHelpers = useCallback(function (name) {\n    return {\n      setValue: function setValue(value, shouldValidate) {\n        return setFieldValue(name, value, shouldValidate);\n      },\n      setTouched: function setTouched(value, shouldValidate) {\n        return setFieldTouched(name, value, shouldValidate);\n      },\n      setError: function setError(value) {\n        return setFieldError(name, value);\n      }\n    };\n  }, [setFieldValue, setFieldTouched, setFieldError]);\n  var getFieldProps = useCallback(function (nameOrOptions) {\n    var isAnObject = isObject(nameOrOptions);\n    var name = isAnObject ? nameOrOptions.name : nameOrOptions;\n    var valueState = getIn(state.values, name);\n    var field = {\n      name: name,\n      value: valueState,\n      onChange: handleChange,\n      onBlur: handleBlur\n    };\n\n    if (isAnObject) {\n      var type = nameOrOptions.type,\n          valueProp = nameOrOptions.value,\n          is = nameOrOptions.as,\n          multiple = nameOrOptions.multiple;\n\n      if (type === 'checkbox') {\n        if (valueProp === undefined) {\n          field.checked = !!valueState;\n        } else {\n          field.checked = !!(Array.isArray(valueState) && ~valueState.indexOf(valueProp));\n          field.value = valueProp;\n        }\n      } else if (type === 'radio') {\n        field.checked = valueState === valueProp;\n        field.value = valueProp;\n      } else if (is === 'select' && multiple) {\n        field.value = field.value || [];\n        field.multiple = true;\n      }\n    }\n\n    return field;\n  }, [handleBlur, handleChange, state.values]);\n  var dirty = useMemo(function () {\n    return !isEqual(initialValues.current, state.values);\n  }, [initialValues.current, state.values]);\n  var isValid = useMemo(function () {\n    return typeof isInitialValid !== 'undefined' ? dirty ? state.errors && Object.keys(state.errors).length === 0 : isInitialValid !== false && isFunction(isInitialValid) ? isInitialValid(props) : isInitialValid : state.errors && Object.keys(state.errors).length === 0;\n  }, [isInitialValid, dirty, state.errors, props]);\n\n  var ctx = _extends({}, state, {\n    initialValues: initialValues.current,\n    initialErrors: initialErrors.current,\n    initialTouched: initialTouched.current,\n    initialStatus: initialStatus.current,\n    handleBlur: handleBlur,\n    handleChange: handleChange,\n    handleReset: handleReset,\n    handleSubmit: handleSubmit,\n    resetForm: resetForm,\n    setErrors: setErrors,\n    setFormikState: setFormikState,\n    setFieldTouched: setFieldTouched,\n    setFieldValue: setFieldValue,\n    setFieldError: setFieldError,\n    setStatus: setStatus,\n    setSubmitting: setSubmitting,\n    setTouched: setTouched,\n    setValues: setValues,\n    submitForm: submitForm,\n    validateForm: validateFormWithHighPriority,\n    validateField: validateField,\n    isValid: isValid,\n    dirty: dirty,\n    unregisterField: unregisterField,\n    registerField: registerField,\n    getFieldProps: getFieldProps,\n    getFieldMeta: getFieldMeta,\n    getFieldHelpers: getFieldHelpers,\n    validateOnBlur: validateOnBlur,\n    validateOnChange: validateOnChange,\n    validateOnMount: validateOnMount\n  });\n\n  return ctx;\n}\nfunction Formik(props) {\n  var formikbag = useFormik(props);\n  var component = props.component,\n      children = props.children,\n      render = props.render,\n      innerRef = props.innerRef; // This allows folks to pass a ref to <Formik />\n\n  useImperativeHandle(innerRef, function () {\n    return formikbag;\n  });\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(function () {\n      !!props.render ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"<Formik render> has been deprecated and will be removed in future versions of Formik. Please use a child callback function instead. To get rid of this warning, replace <Formik render={(props) => ...} /> with <Formik>{(props) => ...}</Formik>\") : invariant(false) : void 0; // eslint-disable-next-line\n    }, []);\n  }\n\n  return createElement(FormikProvider, {\n    value: formikbag\n  }, component ? createElement(component, formikbag) : render ? render(formikbag) : children // children come last, always called\n  ? isFunction(children) ? children(formikbag) : !isEmptyChildren(children) ? Children.only(children) : null : null);\n}\n\nfunction warnAboutMissingIdentifier(_ref4) {\n  var htmlContent = _ref4.htmlContent,\n      documentationAnchorLink = _ref4.documentationAnchorLink,\n      handlerName = _ref4.handlerName;\n  console.warn(\"Warning: Formik called `\" + handlerName + \"`, but you forgot to pass an `id` or `name` attribute to your input:\\n    \" + htmlContent + \"\\n    Formik cannot determine which value to update. For more info see https://formik.org/docs/api/formik#\" + documentationAnchorLink + \"\\n  \");\n}\n/**\r\n * Transform Yup ValidationError to a more usable object\r\n */\n\n\nfunction yupToFormErrors(yupError) {\n  var errors = {};\n\n  if (yupError.inner) {\n    if (yupError.inner.length === 0) {\n      return setIn(errors, yupError.path, yupError.message);\n    }\n\n    for (var _iterator = yupError.inner, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref5;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref5 = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref5 = _i.value;\n      }\n\n      var err = _ref5;\n\n      if (!getIn(errors, err.path)) {\n        errors = setIn(errors, err.path, err.message);\n      }\n    }\n  }\n\n  return errors;\n}\n/**\r\n * Validate a yup schema.\r\n */\n\nfunction validateYupSchema(values, schema, sync, context) {\n  if (sync === void 0) {\n    sync = false;\n  }\n\n  if (context === void 0) {\n    context = {};\n  }\n\n  var validateData = prepareDataForValidation(values);\n  return schema[sync ? 'validateSync' : 'validate'](validateData, {\n    abortEarly: false,\n    context: context\n  });\n}\n/**\r\n * Recursively prepare values.\r\n */\n\nfunction prepareDataForValidation(values) {\n  var data = Array.isArray(values) ? [] : {};\n\n  for (var k in values) {\n    if (Object.prototype.hasOwnProperty.call(values, k)) {\n      var key = String(k);\n\n      if (Array.isArray(values[key]) === true) {\n        data[key] = values[key].map(function (value) {\n          if (Array.isArray(value) === true || isPlainObject(value)) {\n            return prepareDataForValidation(value);\n          } else {\n            return value !== '' ? value : undefined;\n          }\n        });\n      } else if (isPlainObject(values[key])) {\n        data[key] = prepareDataForValidation(values[key]);\n      } else {\n        data[key] = values[key] !== '' ? values[key] : undefined;\n      }\n    }\n  }\n\n  return data;\n}\n/**\r\n * deepmerge array merging algorithm\r\n * https://github.com/KyleAMathews/deepmerge#combine-array\r\n */\n\nfunction arrayMerge(target, source, options) {\n  var destination = target.slice();\n  source.forEach(function merge(e, i) {\n    if (typeof destination[i] === 'undefined') {\n      var cloneRequested = options.clone !== false;\n      var shouldClone = cloneRequested && options.isMergeableObject(e);\n      destination[i] = shouldClone ? deepmerge(Array.isArray(e) ? [] : {}, e, options) : e;\n    } else if (options.isMergeableObject(e)) {\n      destination[i] = deepmerge(target[i], e, options);\n    } else if (target.indexOf(e) === -1) {\n      destination.push(e);\n    }\n  });\n  return destination;\n}\n/** Return multi select values based on an array of options */\n\n\nfunction getSelectedValues(options) {\n  return Array.from(options).filter(function (el) {\n    return el.selected;\n  }).map(function (el) {\n    return el.value;\n  });\n}\n/** Return the next value for a checkbox */\n\n\nfunction getValueForCheckbox(currentValue, checked, valueProp) {\n  // If the current value was a boolean, return a boolean\n  if (typeof currentValue === 'boolean') {\n    return Boolean(checked);\n  } // If the currentValue was not a boolean we want to return an array\n\n\n  var currentArrayOfValues = [];\n  var isValueInArray = false;\n  var index = -1;\n\n  if (!Array.isArray(currentValue)) {\n    // eslint-disable-next-line eqeqeq\n    if (!valueProp || valueProp == 'true' || valueProp == 'false') {\n      return Boolean(checked);\n    }\n  } else {\n    // If the current value is already an array, use it\n    currentArrayOfValues = currentValue;\n    index = currentValue.indexOf(valueProp);\n    isValueInArray = index >= 0;\n  } // If the checkbox was checked and the value is not already present in the aray we want to add the new value to the array of values\n\n\n  if (checked && valueProp && !isValueInArray) {\n    return currentArrayOfValues.concat(valueProp);\n  } // If the checkbox was unchecked and the value is not in the array, simply return the already existing array of values\n\n\n  if (!isValueInArray) {\n    return currentArrayOfValues;\n  } // If the checkbox was unchecked and the value is in the array, remove the value and return the array\n\n\n  return currentArrayOfValues.slice(0, index).concat(currentArrayOfValues.slice(index + 1));\n} // React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\n// @see https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\n\n\nvar useIsomorphicLayoutEffect = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined' ? useLayoutEffect : useEffect;\n\nfunction useEventCallback(fn) {\n  var ref = useRef(fn); // we copy a ref to the callback scoped to the current state/props on each render\n\n  useIsomorphicLayoutEffect(function () {\n    ref.current = fn;\n  });\n  return useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return ref.current.apply(void 0, args);\n  }, []);\n}\n\nfunction useField(propsOrFieldName) {\n  var formik = useFormikContext();\n  var getFieldProps = formik.getFieldProps,\n      getFieldMeta = formik.getFieldMeta,\n      getFieldHelpers = formik.getFieldHelpers,\n      registerField = formik.registerField,\n      unregisterField = formik.unregisterField;\n  var isAnObject = isObject(propsOrFieldName); // Normalize propsOrFieldName to FieldHookConfig<Val>\n\n  var props = isAnObject ? propsOrFieldName : {\n    name: propsOrFieldName\n  };\n  var fieldName = props.name,\n      validateFn = props.validate;\n  useEffect(function () {\n    if (fieldName) {\n      registerField(fieldName, {\n        validate: validateFn\n      });\n    }\n\n    return function () {\n      if (fieldName) {\n        unregisterField(fieldName);\n      }\n    };\n  }, [registerField, unregisterField, fieldName, validateFn]);\n\n  if (process.env.NODE_ENV !== \"production\") {\n    !formik ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'useField() / <Field /> must be used underneath a <Formik> component or withFormik() higher order component') : invariant(false) : void 0;\n  }\n\n  !fieldName ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Invalid field name. Either pass `useField` a string or an object containing a `name` key.') : invariant(false) : void 0;\n  return [getFieldProps(props), getFieldMeta(fieldName), getFieldHelpers(fieldName)];\n}\nfunction Field(_ref) {\n  var validate = _ref.validate,\n      name = _ref.name,\n      render = _ref.render,\n      children = _ref.children,\n      is = _ref.as,\n      component = _ref.component,\n      props = _objectWithoutPropertiesLoose(_ref, [\"validate\", \"name\", \"render\", \"children\", \"as\", \"component\"]);\n\n  var _useFormikContext = useFormikContext(),\n      formik = _objectWithoutPropertiesLoose(_useFormikContext, [\"validate\", \"validationSchema\"]);\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(function () {\n      !!render ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"<Field render> has been deprecated and will be removed in future versions of Formik. Please use a child callback function instead. To get rid of this warning, replace <Field name=\\\"\" + name + \"\\\" render={({field, form}) => ...} /> with <Field name=\\\"\" + name + \"\\\">{({field, form, meta}) => ...}</Field>\") : invariant(false) : void 0;\n      !!(is && children && isFunction(children)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'You should not use <Field as> and <Field children> as a function in the same <Field> component; <Field as> will be ignored.') : invariant(false) : void 0;\n      !!(component && children && isFunction(children)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'You should not use <Field component> and <Field children> as a function in the same <Field> component; <Field component> will be ignored.') : invariant(false) : void 0;\n      !!(render && children && !isEmptyChildren(children)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'You should not use <Field render> and <Field children> in the same <Field> component; <Field children> will be ignored') : invariant(false) : void 0; // eslint-disable-next-line\n    }, []);\n  } // Register field and field-level validation with parent <Formik>\n\n\n  var registerField = formik.registerField,\n      unregisterField = formik.unregisterField;\n  useEffect(function () {\n    registerField(name, {\n      validate: validate\n    });\n    return function () {\n      unregisterField(name);\n    };\n  }, [registerField, unregisterField, name, validate]);\n  var field = formik.getFieldProps(_extends({\n    name: name\n  }, props));\n  var meta = formik.getFieldMeta(name);\n  var legacyBag = {\n    field: field,\n    form: formik\n  };\n\n  if (render) {\n    return render(_extends({}, legacyBag, {\n      meta: meta\n    }));\n  }\n\n  if (isFunction(children)) {\n    return children(_extends({}, legacyBag, {\n      meta: meta\n    }));\n  }\n\n  if (component) {\n    // This behavior is backwards compat with earlier Formik 0.9 to 1.x\n    if (typeof component === 'string') {\n      var innerRef = props.innerRef,\n          rest = _objectWithoutPropertiesLoose(props, [\"innerRef\"]);\n\n      return createElement(component, _extends({\n        ref: innerRef\n      }, field, rest), children);\n    } // We don't pass `meta` for backwards compat\n\n\n    return createElement(component, _extends({\n      field: field,\n      form: formik\n    }, props), children);\n  } // default to input here so we can check for both `as` and `children` above\n\n\n  var asElement = is || 'input';\n\n  if (typeof asElement === 'string') {\n    var _innerRef = props.innerRef,\n        _rest = _objectWithoutPropertiesLoose(props, [\"innerRef\"]);\n\n    return createElement(asElement, _extends({\n      ref: _innerRef\n    }, field, _rest), children);\n  }\n\n  return createElement(asElement, _extends({}, field, props), children);\n}\n\nvar Form = /*#__PURE__*/forwardRef(function (props, ref) {\n  // iOS needs an \"action\" attribute for nice input: https://stackoverflow.com/a/39485162/406725\n  // We default the action to \"#\" in case the preventDefault fails (just updates the URL hash)\n  var action = props.action,\n      rest = _objectWithoutPropertiesLoose(props, [\"action\"]);\n\n  var _action = action != null ? action : '#';\n\n  var _useFormikContext = useFormikContext(),\n      handleReset = _useFormikContext.handleReset,\n      handleSubmit = _useFormikContext.handleSubmit;\n\n  return createElement(\"form\", Object.assign({\n    onSubmit: handleSubmit,\n    ref: ref,\n    onReset: handleReset,\n    action: _action\n  }, rest));\n});\nForm.displayName = 'Form';\n\n/**\r\n * A public higher-order component to access the imperative API\r\n */\n\nfunction withFormik(_ref) {\n  var _ref$mapPropsToValues = _ref.mapPropsToValues,\n      mapPropsToValues = _ref$mapPropsToValues === void 0 ? function (vanillaProps) {\n    var val = {};\n\n    for (var k in vanillaProps) {\n      if (vanillaProps.hasOwnProperty(k) && typeof vanillaProps[k] !== 'function') {\n        // @todo TypeScript fix\n        val[k] = vanillaProps[k];\n      }\n    }\n\n    return val;\n  } : _ref$mapPropsToValues,\n      config = _objectWithoutPropertiesLoose(_ref, [\"mapPropsToValues\"]);\n\n  return function createFormik(Component$1) {\n    var componentDisplayName = Component$1.displayName || Component$1.name || Component$1.constructor && Component$1.constructor.name || 'Component';\n    /**\r\n     * We need to use closures here for to provide the wrapped component's props to\r\n     * the respective withFormik config methods.\r\n     */\n\n    var C = /*#__PURE__*/function (_React$Component) {\n      _inheritsLoose(C, _React$Component);\n\n      function C() {\n        var _this;\n\n        _this = _React$Component.apply(this, arguments) || this;\n\n        _this.validate = function (values) {\n          return config.validate(values, _this.props);\n        };\n\n        _this.validationSchema = function () {\n          return isFunction(config.validationSchema) ? config.validationSchema(_this.props) : config.validationSchema;\n        };\n\n        _this.handleSubmit = function (values, actions) {\n          return config.handleSubmit(values, _extends({}, actions, {\n            props: _this.props\n          }));\n        };\n        /**\r\n         * Just avoiding a render callback for perf here\r\n         */\n\n\n        _this.renderFormComponent = function (formikProps) {\n          return createElement(Component$1, Object.assign({}, _this.props, formikProps));\n        };\n\n        return _this;\n      }\n\n      var _proto = C.prototype;\n\n      _proto.render = function render() {\n        var _this$props = this.props,\n            props = _objectWithoutPropertiesLoose(_this$props, [\"children\"]);\n\n        return createElement(Formik, Object.assign({}, props, config, {\n          validate: config.validate && this.validate,\n          validationSchema: config.validationSchema && this.validationSchema,\n          initialValues: mapPropsToValues(this.props),\n          initialStatus: config.mapPropsToStatus && config.mapPropsToStatus(this.props),\n          initialErrors: config.mapPropsToErrors && config.mapPropsToErrors(this.props),\n          initialTouched: config.mapPropsToTouched && config.mapPropsToTouched(this.props),\n          onSubmit: this.handleSubmit,\n          children: this.renderFormComponent\n        }));\n      };\n\n      return C;\n    }(Component);\n\n    C.displayName = \"WithFormik(\" + componentDisplayName + \")\";\n    return hoistNonReactStatics(C, Component$1 // cast type to ComponentClass (even if SFC)\n    );\n  };\n}\n\n/**\r\n * Connect any component to Formik context, and inject as a prop called `formik`;\r\n * @param Comp React Component\r\n */\n\nfunction connect(Comp) {\n  var C = function C(props) {\n    return createElement(FormikConsumer, null, function (formik) {\n      !!!formik ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Formik context is undefined, please verify you are rendering <Form>, <Field>, <FastField>, <FieldArray>, or your custom context-using component as a child of a <Formik> component. Component name: \" + Comp.name) : invariant(false) : void 0;\n      return createElement(Comp, Object.assign({}, props, {\n        formik: formik\n      }));\n    });\n  };\n\n  var componentDisplayName = Comp.displayName || Comp.name || Comp.constructor && Comp.constructor.name || 'Component'; // Assign Comp to C.WrappedComponent so we can access the inner component in tests\n  // For example, <Field.WrappedComponent /> gets us <FieldInner/>\n\n  C.WrappedComponent = Comp;\n  C.displayName = \"FormikConnect(\" + componentDisplayName + \")\";\n  return hoistNonReactStatics(C, Comp // cast type to ComponentClass (even if SFC)\n  );\n}\n\n/**\r\n * Some array helpers!\r\n */\n\nvar move = function move(array, from, to) {\n  var copy = copyArrayLike(array);\n  var value = copy[from];\n  copy.splice(from, 1);\n  copy.splice(to, 0, value);\n  return copy;\n};\nvar swap = function swap(arrayLike, indexA, indexB) {\n  var copy = copyArrayLike(arrayLike);\n  var a = copy[indexA];\n  copy[indexA] = copy[indexB];\n  copy[indexB] = a;\n  return copy;\n};\nvar insert = function insert(arrayLike, index, value) {\n  var copy = copyArrayLike(arrayLike);\n  copy.splice(index, 0, value);\n  return copy;\n};\nvar replace = function replace(arrayLike, index, value) {\n  var copy = copyArrayLike(arrayLike);\n  copy[index] = value;\n  return copy;\n};\n\nvar copyArrayLike = function copyArrayLike(arrayLike) {\n  if (!arrayLike) {\n    return [];\n  } else if (Array.isArray(arrayLike)) {\n    return [].concat(arrayLike);\n  } else {\n    var maxIndex = Object.keys(arrayLike).map(function (key) {\n      return parseInt(key);\n    }).reduce(function (max, el) {\n      return el > max ? el : max;\n    }, 0);\n    return Array.from(_extends({}, arrayLike, {\n      length: maxIndex + 1\n    }));\n  }\n};\n\nvar FieldArrayInner = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(FieldArrayInner, _React$Component);\n\n  function FieldArrayInner(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n\n    _this.updateArrayField = function (fn, alterTouched, alterErrors) {\n      var _this$props = _this.props,\n          name = _this$props.name,\n          setFormikState = _this$props.formik.setFormikState;\n      setFormikState(function (prevState) {\n        var updateErrors = typeof alterErrors === 'function' ? alterErrors : fn;\n        var updateTouched = typeof alterTouched === 'function' ? alterTouched : fn; // values fn should be executed before updateErrors and updateTouched,\n        // otherwise it causes an error with unshift.\n\n        var values = setIn(prevState.values, name, fn(getIn(prevState.values, name)));\n        var fieldError = alterErrors ? updateErrors(getIn(prevState.errors, name)) : undefined;\n        var fieldTouched = alterTouched ? updateTouched(getIn(prevState.touched, name)) : undefined;\n\n        if (isEmptyArray(fieldError)) {\n          fieldError = undefined;\n        }\n\n        if (isEmptyArray(fieldTouched)) {\n          fieldTouched = undefined;\n        }\n\n        return _extends({}, prevState, {\n          values: values,\n          errors: alterErrors ? setIn(prevState.errors, name, fieldError) : prevState.errors,\n          touched: alterTouched ? setIn(prevState.touched, name, fieldTouched) : prevState.touched\n        });\n      });\n    };\n\n    _this.push = function (value) {\n      return _this.updateArrayField(function (arrayLike) {\n        return [].concat(copyArrayLike(arrayLike), [cloneDeep(value)]);\n      }, false, false);\n    };\n\n    _this.handlePush = function (value) {\n      return function () {\n        return _this.push(value);\n      };\n    };\n\n    _this.swap = function (indexA, indexB) {\n      return _this.updateArrayField(function (array) {\n        return swap(array, indexA, indexB);\n      }, true, true);\n    };\n\n    _this.handleSwap = function (indexA, indexB) {\n      return function () {\n        return _this.swap(indexA, indexB);\n      };\n    };\n\n    _this.move = function (from, to) {\n      return _this.updateArrayField(function (array) {\n        return move(array, from, to);\n      }, true, true);\n    };\n\n    _this.handleMove = function (from, to) {\n      return function () {\n        return _this.move(from, to);\n      };\n    };\n\n    _this.insert = function (index, value) {\n      return _this.updateArrayField(function (array) {\n        return insert(array, index, value);\n      }, function (array) {\n        return insert(array, index, null);\n      }, function (array) {\n        return insert(array, index, null);\n      });\n    };\n\n    _this.handleInsert = function (index, value) {\n      return function () {\n        return _this.insert(index, value);\n      };\n    };\n\n    _this.replace = function (index, value) {\n      return _this.updateArrayField(function (array) {\n        return replace(array, index, value);\n      }, false, false);\n    };\n\n    _this.handleReplace = function (index, value) {\n      return function () {\n        return _this.replace(index, value);\n      };\n    };\n\n    _this.unshift = function (value) {\n      var length = -1;\n\n      _this.updateArrayField(function (array) {\n        var arr = array ? [value].concat(array) : [value];\n\n        if (length < 0) {\n          length = arr.length;\n        }\n\n        return arr;\n      }, function (array) {\n        var arr = array ? [null].concat(array) : [null];\n\n        if (length < 0) {\n          length = arr.length;\n        }\n\n        return arr;\n      }, function (array) {\n        var arr = array ? [null].concat(array) : [null];\n\n        if (length < 0) {\n          length = arr.length;\n        }\n\n        return arr;\n      });\n\n      return length;\n    };\n\n    _this.handleUnshift = function (value) {\n      return function () {\n        return _this.unshift(value);\n      };\n    };\n\n    _this.handleRemove = function (index) {\n      return function () {\n        return _this.remove(index);\n      };\n    };\n\n    _this.handlePop = function () {\n      return function () {\n        return _this.pop();\n      };\n    }; // We need TypeScript generics on these, so we'll bind them in the constructor\n    // @todo Fix TS 3.2.1\n\n\n    _this.remove = _this.remove.bind(_assertThisInitialized(_this));\n    _this.pop = _this.pop.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = FieldArrayInner.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.props.validateOnChange && this.props.formik.validateOnChange && !isEqual(getIn(prevProps.formik.values, prevProps.name), getIn(this.props.formik.values, this.props.name))) {\n      this.props.formik.validateForm(this.props.formik.values);\n    }\n  };\n\n  _proto.remove = function remove(index) {\n    // We need to make sure we also remove relevant pieces of `touched` and `errors`\n    var result;\n    this.updateArrayField( // so this gets call 3 times\n    function (array) {\n      var copy = array ? copyArrayLike(array) : [];\n\n      if (!result) {\n        result = copy[index];\n      }\n\n      if (isFunction(copy.splice)) {\n        copy.splice(index, 1);\n      }\n\n      return copy;\n    }, true, true);\n    return result;\n  };\n\n  _proto.pop = function pop() {\n    // Remove relevant pieces of `touched` and `errors` too!\n    var result;\n    this.updateArrayField( // so this gets call 3 times\n    function (array) {\n      var tmp = array;\n\n      if (!result) {\n        result = tmp && tmp.pop && tmp.pop();\n      }\n\n      return tmp;\n    }, true, true);\n    return result;\n  };\n\n  _proto.render = function render() {\n    var arrayHelpers = {\n      push: this.push,\n      pop: this.pop,\n      swap: this.swap,\n      move: this.move,\n      insert: this.insert,\n      replace: this.replace,\n      unshift: this.unshift,\n      remove: this.remove,\n      handlePush: this.handlePush,\n      handlePop: this.handlePop,\n      handleSwap: this.handleSwap,\n      handleMove: this.handleMove,\n      handleInsert: this.handleInsert,\n      handleReplace: this.handleReplace,\n      handleUnshift: this.handleUnshift,\n      handleRemove: this.handleRemove\n    };\n\n    var _this$props2 = this.props,\n        component = _this$props2.component,\n        render = _this$props2.render,\n        children = _this$props2.children,\n        name = _this$props2.name,\n        _this$props2$formik = _this$props2.formik,\n        restOfFormik = _objectWithoutPropertiesLoose(_this$props2$formik, [\"validate\", \"validationSchema\"]);\n\n    var props = _extends({}, arrayHelpers, {\n      form: restOfFormik,\n      name: name\n    });\n\n    return component ? createElement(component, props) : render ? render(props) : children // children come last, always called\n    ? typeof children === 'function' ? children(props) : !isEmptyChildren(children) ? Children.only(children) : null : null;\n  };\n\n  return FieldArrayInner;\n}(Component);\n\nFieldArrayInner.defaultProps = {\n  validateOnChange: true\n};\nvar FieldArray = /*#__PURE__*/connect(FieldArrayInner);\n\nvar ErrorMessageImpl = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(ErrorMessageImpl, _React$Component);\n\n  function ErrorMessageImpl() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ErrorMessageImpl.prototype;\n\n  _proto.shouldComponentUpdate = function shouldComponentUpdate(props) {\n    if (getIn(this.props.formik.errors, this.props.name) !== getIn(props.formik.errors, this.props.name) || getIn(this.props.formik.touched, this.props.name) !== getIn(props.formik.touched, this.props.name) || Object.keys(this.props).length !== Object.keys(props).length) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        component = _this$props.component,\n        formik = _this$props.formik,\n        render = _this$props.render,\n        children = _this$props.children,\n        name = _this$props.name,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"formik\", \"render\", \"children\", \"name\"]);\n\n    var touch = getIn(formik.touched, name);\n    var error = getIn(formik.errors, name);\n    return !!touch && !!error ? render ? isFunction(render) ? render(error) : null : children ? isFunction(children) ? children(error) : null : component ? createElement(component, rest, error) : error : null;\n  };\n\n  return ErrorMessageImpl;\n}(Component);\n\nvar ErrorMessage = /*#__PURE__*/connect(ErrorMessageImpl);\n\n/**\r\n * Custom Field component for quickly hooking into Formik\r\n * context and wiring up forms.\r\n */\n\nvar FastFieldInner = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(FastFieldInner, _React$Component);\n\n  function FastFieldInner(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    var render = props.render,\n        children = props.children,\n        component = props.component,\n        is = props.as,\n        name = props.name;\n    !!render ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"<FastField render> has been deprecated. Please use a child callback function instead: <FastField name={\" + name + \"}>{props => ...}</FastField> instead.\") : invariant(false) : void 0;\n    !!(component && render) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'You should not use <FastField component> and <FastField render> in the same <FastField> component; <FastField component> will be ignored') : invariant(false) : void 0;\n    !!(is && children && isFunction(children)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'You should not use <FastField as> and <FastField children> as a function in the same <FastField> component; <FastField as> will be ignored.') : invariant(false) : void 0;\n    !!(component && children && isFunction(children)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'You should not use <FastField component> and <FastField children> as a function in the same <FastField> component; <FastField component> will be ignored.') : invariant(false) : void 0;\n    !!(render && children && !isEmptyChildren(children)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'You should not use <FastField render> and <FastField children> in the same <FastField> component; <FastField children> will be ignored') : invariant(false) : void 0;\n    return _this;\n  }\n\n  var _proto = FastFieldInner.prototype;\n\n  _proto.shouldComponentUpdate = function shouldComponentUpdate(props) {\n    if (this.props.shouldUpdate) {\n      return this.props.shouldUpdate(props, this.props);\n    } else if (props.name !== this.props.name || getIn(props.formik.values, this.props.name) !== getIn(this.props.formik.values, this.props.name) || getIn(props.formik.errors, this.props.name) !== getIn(this.props.formik.errors, this.props.name) || getIn(props.formik.touched, this.props.name) !== getIn(this.props.formik.touched, this.props.name) || Object.keys(this.props).length !== Object.keys(props).length || props.formik.isSubmitting !== this.props.formik.isSubmitting) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    // Register the Field with the parent Formik. Parent will cycle through\n    // registered Field's validate fns right prior to submit\n    this.props.formik.registerField(this.props.name, {\n      validate: this.props.validate\n    });\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.props.name !== prevProps.name) {\n      this.props.formik.unregisterField(prevProps.name);\n      this.props.formik.registerField(this.props.name, {\n        validate: this.props.validate\n      });\n    }\n\n    if (this.props.validate !== prevProps.validate) {\n      this.props.formik.registerField(this.props.name, {\n        validate: this.props.validate\n      });\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.props.formik.unregisterField(this.props.name);\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        name = _this$props.name,\n        render = _this$props.render,\n        is = _this$props.as,\n        children = _this$props.children,\n        component = _this$props.component,\n        formik = _this$props.formik,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"validate\", \"name\", \"render\", \"as\", \"children\", \"component\", \"shouldUpdate\", \"formik\"]);\n\n    var restOfFormik = _objectWithoutPropertiesLoose(formik, [\"validate\", \"validationSchema\"]);\n\n    var field = formik.getFieldProps(_extends({\n      name: name\n    }, props));\n    var meta = {\n      value: getIn(formik.values, name),\n      error: getIn(formik.errors, name),\n      touched: !!getIn(formik.touched, name),\n      initialValue: getIn(formik.initialValues, name),\n      initialTouched: !!getIn(formik.initialTouched, name),\n      initialError: getIn(formik.initialErrors, name)\n    };\n    var bag = {\n      field: field,\n      meta: meta,\n      form: restOfFormik\n    };\n\n    if (render) {\n      return render(bag);\n    }\n\n    if (isFunction(children)) {\n      return children(bag);\n    }\n\n    if (component) {\n      // This behavior is backwards compat with earlier Formik 0.9 to 1.x\n      if (typeof component === 'string') {\n        var innerRef = props.innerRef,\n            rest = _objectWithoutPropertiesLoose(props, [\"innerRef\"]);\n\n        return createElement(component, _extends({\n          ref: innerRef\n        }, field, rest), children);\n      } // We don't pass `meta` for backwards compat\n\n\n      return createElement(component, _extends({\n        field: field,\n        form: formik\n      }, props), children);\n    } // default to input here so we can check for both `as` and `children` above\n\n\n    var asElement = is || 'input';\n\n    if (typeof asElement === 'string') {\n      var _innerRef = props.innerRef,\n          _rest = _objectWithoutPropertiesLoose(props, [\"innerRef\"]);\n\n      return createElement(asElement, _extends({\n        ref: _innerRef\n      }, field, _rest), children);\n    }\n\n    return createElement(asElement, _extends({}, field, props), children);\n  };\n\n  return FastFieldInner;\n}(Component);\n\nvar FastField = /*#__PURE__*/connect(FastFieldInner);\n\nexport { ErrorMessage, FastField, Field, FieldArray, Form, Formik, FormikConsumer, FormikContext, FormikProvider, connect, getActiveElement, getIn, insert, isEmptyArray, isEmptyChildren, isFunction, isInputEvent, isInteger, isNaN$1 as isNaN, isObject, isPromise, isString, move, prepareDataForValidation, replace, setIn, setNestedObjectValues, swap, useField, useFormik, useFormikContext, validateYupSchema, withFormik, yupToFormErrors };\n//# sourceMappingURL=formik.esm.js.map\n","var isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tObject.keys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tObject.keys(source).forEach(function(key) {\n\t\tif (!options.isMergeableObject(source[key]) || !target[key]) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = deepmerge(target[key], source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nexport default deepmerge_1;\n","import { withKey, withoutKey } from 'piral-core';\nexport function registerPageLayout(ctx, name, value) {\n    ctx.dispatch((state) => (Object.assign(Object.assign({}, state), { registry: Object.assign(Object.assign({}, state.registry), { pageLayouts: withKey(state.registry.pageLayouts, name, value) }) })));\n}\nexport function unregisterPageLayout(ctx, name) {\n    ctx.dispatch((state) => (Object.assign(Object.assign({}, state), { registry: Object.assign(Object.assign({}, state.registry), { pageLayouts: withoutKey(state.registry.pageLayouts, name) }) })));\n}\n//# sourceMappingURL=actions.js.map","import * as actions from './actions';\nimport { createElement } from 'react';\nimport { withApi, defaultRender, useGlobalState } from 'piral-core';\nfunction getPageLayouts(items) {\n    const layouts = {};\n    if (items && typeof items === 'object') {\n        Object.keys(items).forEach((name) => {\n            layouts[name] = {\n                pilet: undefined,\n                component: items[name],\n            };\n        });\n    }\n    return layouts;\n}\nconst DefaultWrapper = (props) => defaultRender(props.children);\nfunction createPageWrapper(Wrapper = DefaultWrapper, fallback = 'default') {\n    return (props) => {\n        var _a;\n        const layout = ((_a = props.meta) === null || _a === void 0 ? void 0 : _a.layout) || fallback;\n        const registration = useGlobalState((s) => s.registry.pageLayouts[layout] || s.registry.pageLayouts[fallback]);\n        const Layout = (registration === null || registration === void 0 ? void 0 : registration.component) || DefaultWrapper;\n        return createElement(Layout, props, createElement(Wrapper, props));\n    };\n}\nfunction withPageLayouts(pageLayouts, fallback) {\n    return (state) => (Object.assign(Object.assign({}, state), { registry: Object.assign(Object.assign({}, state.registry), { wrappers: Object.assign(Object.assign({}, state.registry.wrappers), { page: createPageWrapper(state.registry.wrappers.page, fallback) }), pageLayouts }) }));\n}\n/**\n * Creates new Pilet API extensions for dealing with page layouts.\n */\nexport function createPageLayoutsApi(config = {}) {\n    const { layouts = {}, fallback } = config;\n    return (context) => {\n        const findPageLayout = (name) => context.readState((s) => s.registry.pageLayouts[name]);\n        context.defineActions(actions);\n        context.dispatch(withPageLayouts(getPageLayouts(layouts), fallback));\n        return (api) => {\n            const pilet = api.meta.name;\n            return {\n                registerPageLayout(name, pageLayout) {\n                    const current = findPageLayout(name);\n                    if (!current || current.pilet === pilet) {\n                        const component = withApi(context, pageLayout, api, 'pageLayout');\n                        context.registerPageLayout(name, {\n                            component,\n                            pilet,\n                        });\n                    }\n                    return () => api.unregisterPageLayout(name);\n                },\n                unregisterPageLayout(name) {\n                    const current = findPageLayout(name);\n                    if ((current === null || current === void 0 ? void 0 : current.pilet) === pilet) {\n                        context.unregisterPageLayout(name);\n                    }\n                },\n            };\n        };\n    };\n}\n//# sourceMappingURL=create.js.map","import { createInstance } from 'piral-core';\nimport { createStandardApi } from 'piral-ext';\n/**\n * Extends the standard Pilet API with custom API and settings.\n * @param settings Customizes the standard plugin settings.\n * @param customApis The custom APIs to add.\n * @deprecated Use `[...customApis, createStandardApi(settings)`] instead.\n */\nexport function extendPiralApi(settings = {}, customApis = []) {\n    const extenders = Array.isArray(customApis) ? customApis : [customApis];\n    return [...extenders, ...createStandardApi(settings)];\n}\n/**\n * Creates a standard Piral instance.\n * @param config The config for creating the piral state.\n * @param settings Customizes the standard plugin settings.\n * @deprecated Use `createInstance` instead.\n */\nexport function createPiral(config = {}, settings) {\n    return createInstance(Object.assign(Object.assign({}, config), { plugins: extendPiralApi(settings, config.plugins) }));\n}\n//# sourceMappingURL=api.js.map","import { createPiral } from './api';\nimport { createInstanceElement } from './instance';\n/**\n * Gets a new instantiated Piral instance using the provided options.\n * Very useful for server-side rendering.\n * @param config The configuration for creating the Piral instance.\n * @param options The options to use when rendering the Piral instance.\n * @deprecated Use `createInstance` directly.\n * @example\n```ts\nimport { render } from 'react-dom';\nimport { getAppInstance } from 'piral';\n\nconst { app } = getAppInstance();\nrender(app, document.querySelector('#app'));\n```\n */\nexport function getAppInstance(config = {}, options = {}) {\n    const { settings, layout, errors, dashboardPath, piralChildren } = options;\n    const instance = createPiral(config, settings);\n    const app = createInstanceElement(instance, layout, errors, dashboardPath, piralChildren);\n    return { instance, app };\n}\n//# sourceMappingURL=app.js.map","import { hydrate } from 'react-dom';\nimport { runInstance } from './run';\nimport { getContainer } from './options';\n/**\n * Sets up a new Piral instance and hydrates it using the provided options.\n * @param options The options to use when setting up the Piral instance.\n * @deprecated Use `createInstance` with `hydrate` directly.\n * @example\n```ts\nimport { hydrateInstance } from 'piral';\nhydrateInstance();\n```\n */\nexport function hydrateInstance(options) {\n    return runInstance((app, selector) => hydrate(app, getContainer(selector)), options);\n}\n//# sourceMappingURL=hydrate.js.map","export * from 'piral-core';\nexport * from 'piral-ext';\nexport * from './api';\nexport * from './hydrate';\nexport * from './render';\nexport * from './types';\n//# sourceMappingURL=index.js.map","import * as React from 'react';\nimport { Dashboard } from 'piral-ext';\nimport { Piral, SetRoute, SetErrors, SetLayout, } from 'piral-core';\nexport function createInstanceElement(instance, layout, errors, dashboardPath = '/', piralChildren) {\n    return (React.createElement(Piral, { instance: instance },\n        React.createElement(SetLayout, { layout: layout }),\n        React.createElement(SetErrors, { errors: errors }),\n        React.createElement(SetRoute, { path: dashboardPath, component: Dashboard }),\n        piralChildren));\n}\n//# sourceMappingURL=instance.js.map","export function getContainer(selector) {\n    if (typeof selector === 'string') {\n        return document.querySelector(selector);\n    }\n    else if (selector && selector instanceof Element) {\n        return selector;\n    }\n    else {\n        return document.body.appendChild(document.createElement('div'));\n    }\n}\n//# sourceMappingURL=options.js.map","import { render } from 'react-dom';\nimport { getContainer } from './options';\nimport { runInstance } from './run';\n/**\n * Sets up a new Piral instance and renders it using the provided options.\n * @param options The options to use when setting up the Piral instance.\n * @deprecated Use `createInstance` with `render` directly.\n * @example\n```ts\nimport { renderInstance } from 'piral';\nrenderInstance();\n```\n */\nexport function renderInstance(options) {\n    return runInstance((app, selector) => render(app, getContainer(selector)), options);\n}\n//# sourceMappingURL=render.js.map","import { __rest } from \"tslib\";\nimport { getAppInstance } from './app';\nfunction noChange(config) {\n    return config;\n}\n/**\n * Sets up a new Piral instance and runs it using the provided runner.\n * @param options The options to use when setting up the Piral instance.\n * @deprecated Use `createInstance` with `render` or `hydrate` directly.\n * @example\n```ts\nimport { render } from 'react-dom';\nimport { runInstance } from 'piral';\n\nrunInstance((app, selector) => render(app, document.querySelector(selector)));\n```\n */\nexport function runInstance(runner, options = {}) {\n    const { selector = '#app', settings, layout, piralChildren, dashboardPath, errors, middleware = noChange } = options, config = __rest(options, [\"selector\", \"settings\", \"layout\", \"piralChildren\", \"dashboardPath\", \"errors\", \"middleware\"]);\n    const { app, instance } = getAppInstance(middleware(config), {\n        settings,\n        layout,\n        errors,\n        dashboardPath,\n        piralChildren,\n    });\n    runner(app, selector);\n    return instance;\n}\n//# sourceMappingURL=run.js.map","/**\n * Based on Kendo UI Core expression code <https://github.com/telerik/kendo-ui-core#license-information>\n */\n'use strict'\n\nfunction Cache(maxSize) {\n  this._maxSize = maxSize\n  this.clear()\n}\nCache.prototype.clear = function () {\n  this._size = 0\n  this._values = Object.create(null)\n}\nCache.prototype.get = function (key) {\n  return this._values[key]\n}\nCache.prototype.set = function (key, value) {\n  this._size >= this._maxSize && this.clear()\n  if (!(key in this._values)) this._size++\n\n  return (this._values[key] = value)\n}\n\nvar SPLIT_REGEX = /[^.^\\]^[]+|(?=\\[\\]|\\.\\.)/g,\n  DIGIT_REGEX = /^\\d+$/,\n  LEAD_DIGIT_REGEX = /^\\d/,\n  SPEC_CHAR_REGEX = /[~`!#$%\\^&*+=\\-\\[\\]\\\\';,/{}|\\\\\":<>\\?]/g,\n  CLEAN_QUOTES_REGEX = /^\\s*(['\"]?)(.*?)(\\1)\\s*$/,\n  MAX_CACHE_SIZE = 512\n\nvar pathCache = new Cache(MAX_CACHE_SIZE),\n  setCache = new Cache(MAX_CACHE_SIZE),\n  getCache = new Cache(MAX_CACHE_SIZE)\n\nvar config\n\nmodule.exports = {\n  Cache: Cache,\n\n  split: split,\n\n  normalizePath: normalizePath,\n\n  setter: function (path) {\n    var parts = normalizePath(path)\n\n    return (\n      setCache.get(path) ||\n      setCache.set(path, function setter(obj, value) {\n        var index = 0\n        var len = parts.length\n        var data = obj\n\n        while (index < len - 1) {\n          var part = parts[index]\n          if (\n            part === '__proto__' ||\n            part === 'constructor' ||\n            part === 'prototype'\n          ) {\n            return obj\n          }\n\n          data = data[parts[index++]]\n        }\n        data[parts[index]] = value\n      })\n    )\n  },\n\n  getter: function (path, safe) {\n    var parts = normalizePath(path)\n    return (\n      getCache.get(path) ||\n      getCache.set(path, function getter(data) {\n        var index = 0,\n          len = parts.length\n        while (index < len) {\n          if (data != null || !safe) data = data[parts[index++]]\n          else return\n        }\n        return data\n      })\n    )\n  },\n\n  join: function (segments) {\n    return segments.reduce(function (path, part) {\n      return (\n        path +\n        (isQuoted(part) || DIGIT_REGEX.test(part)\n          ? '[' + part + ']'\n          : (path ? '.' : '') + part)\n      )\n    }, '')\n  },\n\n  forEach: function (path, cb, thisArg) {\n    forEach(Array.isArray(path) ? path : split(path), cb, thisArg)\n  },\n}\n\nfunction normalizePath(path) {\n  return (\n    pathCache.get(path) ||\n    pathCache.set(\n      path,\n      split(path).map(function (part) {\n        return part.replace(CLEAN_QUOTES_REGEX, '$2')\n      })\n    )\n  )\n}\n\nfunction split(path) {\n  return path.match(SPLIT_REGEX) || ['']\n}\n\nfunction forEach(parts, iter, thisArg) {\n  var len = parts.length,\n    part,\n    idx,\n    isArray,\n    isBracket\n\n  for (idx = 0; idx < len; idx++) {\n    part = parts[idx]\n\n    if (part) {\n      if (shouldBeQuoted(part)) {\n        part = '\"' + part + '\"'\n      }\n\n      isBracket = isQuoted(part)\n      isArray = !isBracket && /^\\d+$/.test(part)\n\n      iter.call(thisArg, part, isBracket, isArray, idx, parts)\n    }\n  }\n}\n\nfunction isQuoted(str) {\n  return (\n    typeof str === 'string' && str && [\"'\", '\"'].indexOf(str.charAt(0)) !== -1\n  )\n}\n\nfunction hasLeadingNumber(part) {\n  return part.match(LEAD_DIGIT_REGEX) && !part.match(DIGIT_REGEX)\n}\n\nfunction hasSpecialChars(part) {\n  return SPEC_CHAR_REGEX.test(part)\n}\n\nfunction shouldBeQuoted(part) {\n  return !isQuoted(part) && (hasLeadingNumber(part) || hasSpecialChars(part))\n}\n","'use strict';\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\nvar hasElementType = typeof Element !== 'undefined';\n\nfunction equal(a, b) {\n  // fast-deep-equal index.js 2.0.1\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    var arrA = isArray(a)\n      , arrB = isArray(b)\n      , i\n      , length\n      , key;\n\n    if (arrA && arrB) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    if (arrA != arrB) return false;\n\n    var dateA = a instanceof Date\n      , dateB = b instanceof Date;\n    if (dateA != dateB) return false;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n\n    var regexpA = a instanceof RegExp\n      , regexpB = b instanceof RegExp;\n    if (regexpA != regexpB) return false;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n\n    var keys = keyList(a);\n    length = keys.length;\n\n    if (length !== keyList(b).length)\n      return false;\n\n    for (i = length; i-- !== 0;)\n      if (!hasProp.call(b, keys[i])) return false;\n    // end fast-deep-equal\n\n    // start react-fast-compare\n    // custom handling for DOM elements\n    if (hasElementType && a instanceof Element && b instanceof Element)\n      return a === b;\n\n    // custom handling for React\n    for (i = length; i-- !== 0;) {\n      key = keys[i];\n      if (key === '_owner' && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner.\n        //  _owner contains circular references\n        // and is not needed when comparing the actual elements (and not their owners)\n        // .$$typeof and ._store on just reasonable markers of a react element\n        continue;\n      } else {\n        // all other properties should be traversed as usual\n        if (!equal(a[key], b[key])) return false;\n      }\n    }\n    // end react-fast-compare\n\n    // fast-deep-equal index.js 2.0.1\n    return true;\n  }\n\n  return a !== a && b !== b;\n}\n// end fast-deep-equal\n\nmodule.exports = function exportedEqual(a, b) {\n  try {\n    return equal(a, b);\n  } catch (error) {\n    if ((error.message && error.message.match(/stack|recursion/i)) || (error.number === -2146828260)) {\n      // warn on circular references, don't crash\n      // browsers give this different errors name and messages:\n      // chrome/safari: \"RangeError\", \"Maximum call stack size exceeded\"\n      // firefox: \"InternalError\", too much recursion\"\n      // edge: \"Error\", \"Out of stack space\"\n      console.warn('Warning: react-fast-compare does not handle circular references.', error.name, error.message);\n      return false;\n    }\n    // some other error. we should definitely know about these\n    throw error;\n  }\n};\n","const reWords = /[A-Z\\xc0-\\xd6\\xd8-\\xde]?[a-z\\xdf-\\xf6\\xf8-\\xff]+(?:['’](?:d|ll|m|re|s|t|ve))?(?=[\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000]|[A-Z\\xc0-\\xd6\\xd8-\\xde]|$)|(?:[A-Z\\xc0-\\xd6\\xd8-\\xde]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['’](?:D|LL|M|RE|S|T|VE))?(?=[\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000]|[A-Z\\xc0-\\xd6\\xd8-\\xde](?:[a-z\\xdf-\\xf6\\xf8-\\xff]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])|$)|[A-Z\\xc0-\\xd6\\xd8-\\xde]?(?:[a-z\\xdf-\\xf6\\xf8-\\xff]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['’](?:d|ll|m|re|s|t|ve))?|[A-Z\\xc0-\\xd6\\xd8-\\xde]+(?:['’](?:D|LL|M|RE|S|T|VE))?|\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])|\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])|\\d+|(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?(?:\\u200d(?:[^\\ud800-\\udfff]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?)*/g\n\nconst words = (str) => str.match(reWords) || []\n\nconst upperFirst = (str) => str[0].toUpperCase() + str.slice(1)\n\nconst join = (str, d) => words(str).join(d).toLowerCase()\n\nconst camelCase = (str) =>\n  words(str).reduce(\n    (acc, next) =>\n      `${acc}${\n        !acc\n          ? next.toLowerCase()\n          : next[0].toUpperCase() + next.slice(1).toLowerCase()\n      }`,\n    '',\n  )\n\nconst pascalCase = (str) => upperFirst(camelCase(str))\n\nconst snakeCase = (str) => join(str, '_')\n\nconst kebabCase = (str) => join(str, '-')\n\nconst sentenceCase = (str) => upperFirst(join(str, ' '))\n\nconst titleCase = (str) => words(str).map(upperFirst).join(' ')\n\nmodule.exports = {\n  words,\n  upperFirst,\n  camelCase,\n  pascalCase,\n  snakeCase,\n  kebabCase,\n  sentenceCase,\n  titleCase,\n}\n","\n/**\n * Topological sorting function\n *\n * @param {Array} edges\n * @returns {Array}\n */\n\nmodule.exports = function(edges) {\n  return toposort(uniqueNodes(edges), edges)\n}\n\nmodule.exports.array = toposort\n\nfunction toposort(nodes, edges) {\n  var cursor = nodes.length\n    , sorted = new Array(cursor)\n    , visited = {}\n    , i = cursor\n    // Better data structures make algorithm much faster.\n    , outgoingEdges = makeOutgoingEdges(edges)\n    , nodesHash = makeNodesHash(nodes)\n\n  // check for unknown nodes\n  edges.forEach(function(edge) {\n    if (!nodesHash.has(edge[0]) || !nodesHash.has(edge[1])) {\n      throw new Error('Unknown node. There is an unknown node in the supplied edges.')\n    }\n  })\n\n  while (i--) {\n    if (!visited[i]) visit(nodes[i], i, new Set())\n  }\n\n  return sorted\n\n  function visit(node, i, predecessors) {\n    if(predecessors.has(node)) {\n      var nodeRep\n      try {\n        nodeRep = \", node was:\" + JSON.stringify(node)\n      } catch(e) {\n        nodeRep = \"\"\n      }\n      throw new Error('Cyclic dependency' + nodeRep)\n    }\n\n    if (!nodesHash.has(node)) {\n      throw new Error('Found unknown node. Make sure to provided all involved nodes. Unknown node: '+JSON.stringify(node))\n    }\n\n    if (visited[i]) return;\n    visited[i] = true\n\n    var outgoing = outgoingEdges.get(node) || new Set()\n    outgoing = Array.from(outgoing)\n\n    if (i = outgoing.length) {\n      predecessors.add(node)\n      do {\n        var child = outgoing[--i]\n        visit(child, nodesHash.get(child), predecessors)\n      } while (i)\n      predecessors.delete(node)\n    }\n\n    sorted[--cursor] = node\n  }\n}\n\nfunction uniqueNodes(arr){\n  var res = new Set()\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var edge = arr[i]\n    res.add(edge[0])\n    res.add(edge[1])\n  }\n  return Array.from(res)\n}\n\nfunction makeOutgoingEdges(arr){\n  var edges = new Map()\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var edge = arr[i]\n    if (!edges.has(edge[0])) edges.set(edge[0], new Set())\n    if (!edges.has(edge[1])) edges.set(edge[1], new Set())\n    edges.get(edge[0]).add(edge[1])\n  }\n  return edges\n}\n\nfunction makeNodesHash(arr){\n  var res = new Map()\n  for (var i = 0, len = arr.length; i < len; i++) {\n    res.set(arr[i], i)\n  }\n  return res\n}\n","import { getter, forEach, split, normalizePath, join } from 'property-expr';\nimport { camelCase, snakeCase } from 'tiny-case';\nimport toposort from 'toposort';\n\nconst toString = Object.prototype.toString;\nconst errorToString = Error.prototype.toString;\nconst regExpToString = RegExp.prototype.toString;\nconst symbolToString = typeof Symbol !== 'undefined' ? Symbol.prototype.toString : () => '';\nconst SYMBOL_REGEXP = /^Symbol\\((.*)\\)(.*)$/;\nfunction printNumber(val) {\n  if (val != +val) return 'NaN';\n  const isNegativeZero = val === 0 && 1 / val < 0;\n  return isNegativeZero ? '-0' : '' + val;\n}\nfunction printSimpleValue(val, quoteStrings = false) {\n  if (val == null || val === true || val === false) return '' + val;\n  const typeOf = typeof val;\n  if (typeOf === 'number') return printNumber(val);\n  if (typeOf === 'string') return quoteStrings ? `\"${val}\"` : val;\n  if (typeOf === 'function') return '[Function ' + (val.name || 'anonymous') + ']';\n  if (typeOf === 'symbol') return symbolToString.call(val).replace(SYMBOL_REGEXP, 'Symbol($1)');\n  const tag = toString.call(val).slice(8, -1);\n  if (tag === 'Date') return isNaN(val.getTime()) ? '' + val : val.toISOString(val);\n  if (tag === 'Error' || val instanceof Error) return '[' + errorToString.call(val) + ']';\n  if (tag === 'RegExp') return regExpToString.call(val);\n  return null;\n}\nfunction printValue(value, quoteStrings) {\n  let result = printSimpleValue(value, quoteStrings);\n  if (result !== null) return result;\n  return JSON.stringify(value, function (key, value) {\n    let result = printSimpleValue(this[key], quoteStrings);\n    if (result !== null) return result;\n    return value;\n  }, 2);\n}\n\nfunction toArray(value) {\n  return value == null ? [] : [].concat(value);\n}\n\nlet strReg = /\\$\\{\\s*(\\w+)\\s*\\}/g;\nclass ValidationError extends Error {\n  static formatError(message, params) {\n    const path = params.label || params.path || 'this';\n    if (path !== params.path) params = Object.assign({}, params, {\n      path\n    });\n    if (typeof message === 'string') return message.replace(strReg, (_, key) => printValue(params[key]));\n    if (typeof message === 'function') return message(params);\n    return message;\n  }\n  static isError(err) {\n    return err && err.name === 'ValidationError';\n  }\n  constructor(errorOrErrors, value, field, type) {\n    super();\n    this.value = void 0;\n    this.path = void 0;\n    this.type = void 0;\n    this.errors = void 0;\n    this.params = void 0;\n    this.inner = void 0;\n    this.name = 'ValidationError';\n    this.value = value;\n    this.path = field;\n    this.type = type;\n    this.errors = [];\n    this.inner = [];\n    toArray(errorOrErrors).forEach(err => {\n      if (ValidationError.isError(err)) {\n        this.errors.push(...err.errors);\n        this.inner = this.inner.concat(err.inner.length ? err.inner : err);\n      } else {\n        this.errors.push(err);\n      }\n    });\n    this.message = this.errors.length > 1 ? `${this.errors.length} errors occurred` : this.errors[0];\n    if (Error.captureStackTrace) Error.captureStackTrace(this, ValidationError);\n  }\n}\n\nlet mixed = {\n  default: '${path} is invalid',\n  required: '${path} is a required field',\n  defined: '${path} must be defined',\n  notNull: '${path} cannot be null',\n  oneOf: '${path} must be one of the following values: ${values}',\n  notOneOf: '${path} must not be one of the following values: ${values}',\n  notType: ({\n    path,\n    type,\n    value,\n    originalValue\n  }) => {\n    const castMsg = originalValue != null && originalValue !== value ? ` (cast from the value \\`${printValue(originalValue, true)}\\`).` : '.';\n    return type !== 'mixed' ? `${path} must be a \\`${type}\\` type, ` + `but the final value was: \\`${printValue(value, true)}\\`` + castMsg : `${path} must match the configured type. ` + `The validated value was: \\`${printValue(value, true)}\\`` + castMsg;\n  }\n};\nlet string = {\n  length: '${path} must be exactly ${length} characters',\n  min: '${path} must be at least ${min} characters',\n  max: '${path} must be at most ${max} characters',\n  matches: '${path} must match the following: \"${regex}\"',\n  email: '${path} must be a valid email',\n  url: '${path} must be a valid URL',\n  uuid: '${path} must be a valid UUID',\n  trim: '${path} must be a trimmed string',\n  lowercase: '${path} must be a lowercase string',\n  uppercase: '${path} must be a upper case string'\n};\nlet number = {\n  min: '${path} must be greater than or equal to ${min}',\n  max: '${path} must be less than or equal to ${max}',\n  lessThan: '${path} must be less than ${less}',\n  moreThan: '${path} must be greater than ${more}',\n  positive: '${path} must be a positive number',\n  negative: '${path} must be a negative number',\n  integer: '${path} must be an integer'\n};\nlet date = {\n  min: '${path} field must be later than ${min}',\n  max: '${path} field must be at earlier than ${max}'\n};\nlet boolean = {\n  isValue: '${path} field must be ${value}'\n};\nlet object = {\n  noUnknown: '${path} field has unspecified keys: ${unknown}'\n};\nlet array = {\n  min: '${path} field must have at least ${min} items',\n  max: '${path} field must have less than or equal to ${max} items',\n  length: '${path} must have ${length} items'\n};\nlet tuple = {\n  notType: params => {\n    const {\n      path,\n      value,\n      spec\n    } = params;\n    const typeLen = spec.types.length;\n    if (Array.isArray(value)) {\n      if (value.length < typeLen) return `${path} tuple value has too few items, expected a length of ${typeLen} but got ${value.length} for value: \\`${printValue(value, true)}\\``;\n      if (value.length > typeLen) return `${path} tuple value has too many items, expected a length of ${typeLen} but got ${value.length} for value: \\`${printValue(value, true)}\\``;\n    }\n    return ValidationError.formatError(mixed.notType, params);\n  }\n};\nvar locale = Object.assign(Object.create(null), {\n  mixed,\n  string,\n  number,\n  date,\n  object,\n  array,\n  boolean\n});\n\nconst isSchema = obj => obj && obj.__isYupSchema__;\n\nclass Condition {\n  static fromOptions(refs, config) {\n    if (!config.then && !config.otherwise) throw new TypeError('either `then:` or `otherwise:` is required for `when()` conditions');\n    let {\n      is,\n      then,\n      otherwise\n    } = config;\n    let check = typeof is === 'function' ? is : (...values) => values.every(value => value === is);\n    return new Condition(refs, (values, schema) => {\n      var _branch;\n      let branch = check(...values) ? then : otherwise;\n      return (_branch = branch == null ? void 0 : branch(schema)) != null ? _branch : schema;\n    });\n  }\n  constructor(refs, builder) {\n    this.fn = void 0;\n    this.refs = refs;\n    this.refs = refs;\n    this.fn = builder;\n  }\n  resolve(base, options) {\n    let values = this.refs.map(ref =>\n    // TODO: ? operator here?\n    ref.getValue(options == null ? void 0 : options.value, options == null ? void 0 : options.parent, options == null ? void 0 : options.context));\n    let schema = this.fn(values, base, options);\n    if (schema === undefined ||\n    // @ts-ignore this can be base\n    schema === base) {\n      return base;\n    }\n    if (!isSchema(schema)) throw new TypeError('conditions must return a schema object');\n    return schema.resolve(options);\n  }\n}\n\nconst prefixes = {\n  context: '$',\n  value: '.'\n};\nfunction create$9(key, options) {\n  return new Reference(key, options);\n}\nclass Reference {\n  constructor(key, options = {}) {\n    this.key = void 0;\n    this.isContext = void 0;\n    this.isValue = void 0;\n    this.isSibling = void 0;\n    this.path = void 0;\n    this.getter = void 0;\n    this.map = void 0;\n    if (typeof key !== 'string') throw new TypeError('ref must be a string, got: ' + key);\n    this.key = key.trim();\n    if (key === '') throw new TypeError('ref must be a non-empty string');\n    this.isContext = this.key[0] === prefixes.context;\n    this.isValue = this.key[0] === prefixes.value;\n    this.isSibling = !this.isContext && !this.isValue;\n    let prefix = this.isContext ? prefixes.context : this.isValue ? prefixes.value : '';\n    this.path = this.key.slice(prefix.length);\n    this.getter = this.path && getter(this.path, true);\n    this.map = options.map;\n  }\n  getValue(value, parent, context) {\n    let result = this.isContext ? context : this.isValue ? value : parent;\n    if (this.getter) result = this.getter(result || {});\n    if (this.map) result = this.map(result);\n    return result;\n  }\n\n  /**\n   *\n   * @param {*} value\n   * @param {Object} options\n   * @param {Object=} options.context\n   * @param {Object=} options.parent\n   */\n  cast(value, options) {\n    return this.getValue(value, options == null ? void 0 : options.parent, options == null ? void 0 : options.context);\n  }\n  resolve() {\n    return this;\n  }\n  describe() {\n    return {\n      type: 'ref',\n      key: this.key\n    };\n  }\n  toString() {\n    return `Ref(${this.key})`;\n  }\n  static isRef(value) {\n    return value && value.__isYupRef;\n  }\n}\n\n// @ts-ignore\nReference.prototype.__isYupRef = true;\n\nconst isAbsent = value => value == null;\n\nfunction createValidation(config) {\n  function validate({\n    value,\n    path = '',\n    options,\n    originalValue,\n    schema\n  }, panic, next) {\n    const {\n      name,\n      test,\n      params,\n      message,\n      skipAbsent\n    } = config;\n    let {\n      parent,\n      context,\n      abortEarly = schema.spec.abortEarly\n    } = options;\n    function resolve(item) {\n      return Reference.isRef(item) ? item.getValue(value, parent, context) : item;\n    }\n    function createError(overrides = {}) {\n      const nextParams = Object.assign({\n        value,\n        originalValue,\n        label: schema.spec.label,\n        path: overrides.path || path,\n        spec: schema.spec\n      }, params, overrides.params);\n      for (const key of Object.keys(nextParams)) nextParams[key] = resolve(nextParams[key]);\n      const error = new ValidationError(ValidationError.formatError(overrides.message || message, nextParams), value, nextParams.path, overrides.type || name);\n      error.params = nextParams;\n      return error;\n    }\n    const invalid = abortEarly ? panic : next;\n    let ctx = {\n      path,\n      parent,\n      type: name,\n      from: options.from,\n      createError,\n      resolve,\n      options,\n      originalValue,\n      schema\n    };\n    const handleResult = validOrError => {\n      if (ValidationError.isError(validOrError)) invalid(validOrError);else if (!validOrError) invalid(createError());else next(null);\n    };\n    const handleError = err => {\n      if (ValidationError.isError(err)) invalid(err);else panic(err);\n    };\n    const shouldSkip = skipAbsent && isAbsent(value);\n    if (!options.sync) {\n      try {\n        Promise.resolve(!shouldSkip ? test.call(ctx, value, ctx) : true).then(handleResult, handleError);\n      } catch (err) {\n        handleError(err);\n      }\n      return;\n    }\n    let result;\n    try {\n      var _result;\n      result = !shouldSkip ? test.call(ctx, value, ctx) : true;\n      if (typeof ((_result = result) == null ? void 0 : _result.then) === 'function') {\n        throw new Error(`Validation test of type: \"${ctx.type}\" returned a Promise during a synchronous validate. ` + `This test will finish after the validate call has returned`);\n      }\n    } catch (err) {\n      handleError(err);\n      return;\n    }\n    handleResult(result);\n  }\n  validate.OPTIONS = config;\n  return validate;\n}\n\nfunction getIn(schema, path, value, context = value) {\n  let parent, lastPart, lastPartDebug;\n\n  // root path: ''\n  if (!path) return {\n    parent,\n    parentPath: path,\n    schema\n  };\n  forEach(path, (_part, isBracket, isArray) => {\n    let part = isBracket ? _part.slice(1, _part.length - 1) : _part;\n    schema = schema.resolve({\n      context,\n      parent,\n      value\n    });\n    let isTuple = schema.type === 'tuple';\n    let idx = isArray ? parseInt(part, 10) : 0;\n    if (schema.innerType || isTuple) {\n      if (isTuple && !isArray) throw new Error(`Yup.reach cannot implicitly index into a tuple type. the path part \"${lastPartDebug}\" must contain an index to the tuple element, e.g. \"${lastPartDebug}[0]\"`);\n      if (value && idx >= value.length) {\n        throw new Error(`Yup.reach cannot resolve an array item at index: ${_part}, in the path: ${path}. ` + `because there is no value at that index. `);\n      }\n      parent = value;\n      value = value && value[idx];\n      schema = isTuple ? schema.spec.types[idx] : schema.innerType;\n    }\n\n    // sometimes the array index part of a path doesn't exist: \"nested.arr.child\"\n    // in these cases the current part is the next schema and should be processed\n    // in this iteration. For cases where the index signature is included this\n    // check will fail and we'll handle the `child` part on the next iteration like normal\n    if (!isArray) {\n      if (!schema.fields || !schema.fields[part]) throw new Error(`The schema does not contain the path: ${path}. ` + `(failed at: ${lastPartDebug} which is a type: \"${schema.type}\")`);\n      parent = value;\n      value = value && value[part];\n      schema = schema.fields[part];\n    }\n    lastPart = part;\n    lastPartDebug = isBracket ? '[' + _part + ']' : '.' + _part;\n  });\n  return {\n    schema,\n    parent,\n    parentPath: lastPart\n  };\n}\nfunction reach(obj, path, value, context) {\n  return getIn(obj, path, value, context).schema;\n}\n\nclass ReferenceSet extends Set {\n  describe() {\n    const description = [];\n    for (const item of this.values()) {\n      description.push(Reference.isRef(item) ? item.describe() : item);\n    }\n    return description;\n  }\n  resolveAll(resolve) {\n    let result = [];\n    for (const item of this.values()) {\n      result.push(resolve(item));\n    }\n    return result;\n  }\n  clone() {\n    return new ReferenceSet(this.values());\n  }\n  merge(newItems, removeItems) {\n    const next = this.clone();\n    newItems.forEach(value => next.add(value));\n    removeItems.forEach(value => next.delete(value));\n    return next;\n  }\n}\n\n// tweaked from https://github.com/Kelin2025/nanoclone/blob/0abeb7635bda9b68ef2277093f76dbe3bf3948e1/src/index.js\nfunction clone(src, seen = new Map()) {\n  if (isSchema(src) || !src || typeof src !== 'object') return src;\n  if (seen.has(src)) return seen.get(src);\n  let copy;\n  if (src instanceof Date) {\n    // Date\n    copy = new Date(src.getTime());\n    seen.set(src, copy);\n  } else if (src instanceof RegExp) {\n    // RegExp\n    copy = new RegExp(src);\n    seen.set(src, copy);\n  } else if (Array.isArray(src)) {\n    // Array\n    copy = new Array(src.length);\n    seen.set(src, copy);\n    for (let i = 0; i < src.length; i++) copy[i] = clone(src[i], seen);\n  } else if (src instanceof Map) {\n    // Map\n    copy = new Map();\n    seen.set(src, copy);\n    for (const [k, v] of src.entries()) copy.set(k, clone(v, seen));\n  } else if (src instanceof Set) {\n    // Set\n    copy = new Set();\n    seen.set(src, copy);\n    for (const v of src) copy.add(clone(v, seen));\n  } else if (src instanceof Object) {\n    // Object\n    copy = {};\n    seen.set(src, copy);\n    for (const [k, v] of Object.entries(src)) copy[k] = clone(v, seen);\n  } else {\n    throw Error(`Unable to clone ${src}`);\n  }\n  return copy;\n}\n\nclass Schema {\n  constructor(options) {\n    this.type = void 0;\n    this.deps = [];\n    this.tests = void 0;\n    this.transforms = void 0;\n    this.conditions = [];\n    this._mutate = void 0;\n    this.internalTests = {};\n    this._whitelist = new ReferenceSet();\n    this._blacklist = new ReferenceSet();\n    this.exclusiveTests = Object.create(null);\n    this._typeCheck = void 0;\n    this.spec = void 0;\n    this.tests = [];\n    this.transforms = [];\n    this.withMutation(() => {\n      this.typeError(mixed.notType);\n    });\n    this.type = options.type;\n    this._typeCheck = options.check;\n    this.spec = Object.assign({\n      strip: false,\n      strict: false,\n      abortEarly: true,\n      recursive: true,\n      nullable: false,\n      optional: true,\n      coerce: true\n    }, options == null ? void 0 : options.spec);\n    this.withMutation(s => {\n      s.nonNullable();\n    });\n  }\n\n  // TODO: remove\n  get _type() {\n    return this.type;\n  }\n  clone(spec) {\n    if (this._mutate) {\n      if (spec) Object.assign(this.spec, spec);\n      return this;\n    }\n\n    // if the nested value is a schema we can skip cloning, since\n    // they are already immutable\n    const next = Object.create(Object.getPrototypeOf(this));\n\n    // @ts-expect-error this is readonly\n    next.type = this.type;\n    next._typeCheck = this._typeCheck;\n    next._whitelist = this._whitelist.clone();\n    next._blacklist = this._blacklist.clone();\n    next.internalTests = Object.assign({}, this.internalTests);\n    next.exclusiveTests = Object.assign({}, this.exclusiveTests);\n\n    // @ts-expect-error this is readonly\n    next.deps = [...this.deps];\n    next.conditions = [...this.conditions];\n    next.tests = [...this.tests];\n    next.transforms = [...this.transforms];\n    next.spec = clone(Object.assign({}, this.spec, spec));\n    return next;\n  }\n  label(label) {\n    let next = this.clone();\n    next.spec.label = label;\n    return next;\n  }\n  meta(...args) {\n    if (args.length === 0) return this.spec.meta;\n    let next = this.clone();\n    next.spec.meta = Object.assign(next.spec.meta || {}, args[0]);\n    return next;\n  }\n  withMutation(fn) {\n    let before = this._mutate;\n    this._mutate = true;\n    let result = fn(this);\n    this._mutate = before;\n    return result;\n  }\n  concat(schema) {\n    if (!schema || schema === this) return this;\n    if (schema.type !== this.type && this.type !== 'mixed') throw new TypeError(`You cannot \\`concat()\\` schema's of different types: ${this.type} and ${schema.type}`);\n    let base = this;\n    let combined = schema.clone();\n    const mergedSpec = Object.assign({}, base.spec, combined.spec);\n    combined.spec = mergedSpec;\n    combined.internalTests = Object.assign({}, base.internalTests, combined.internalTests);\n\n    // manually merge the blacklist/whitelist (the other `schema` takes\n    // precedence in case of conflicts)\n    combined._whitelist = base._whitelist.merge(schema._whitelist, schema._blacklist);\n    combined._blacklist = base._blacklist.merge(schema._blacklist, schema._whitelist);\n\n    // start with the current tests\n    combined.tests = base.tests;\n    combined.exclusiveTests = base.exclusiveTests;\n\n    // manually add the new tests to ensure\n    // the deduping logic is consistent\n    combined.withMutation(next => {\n      schema.tests.forEach(fn => {\n        next.test(fn.OPTIONS);\n      });\n    });\n    combined.transforms = [...base.transforms, ...combined.transforms];\n    return combined;\n  }\n  isType(v) {\n    if (v == null) {\n      if (this.spec.nullable && v === null) return true;\n      if (this.spec.optional && v === undefined) return true;\n      return false;\n    }\n    return this._typeCheck(v);\n  }\n  resolve(options) {\n    let schema = this;\n    if (schema.conditions.length) {\n      let conditions = schema.conditions;\n      schema = schema.clone();\n      schema.conditions = [];\n      schema = conditions.reduce((prevSchema, condition) => condition.resolve(prevSchema, options), schema);\n      schema = schema.resolve(options);\n    }\n    return schema;\n  }\n  resolveOptions(options) {\n    var _options$strict, _options$abortEarly, _options$recursive;\n    return Object.assign({}, options, {\n      from: options.from || [],\n      strict: (_options$strict = options.strict) != null ? _options$strict : this.spec.strict,\n      abortEarly: (_options$abortEarly = options.abortEarly) != null ? _options$abortEarly : this.spec.abortEarly,\n      recursive: (_options$recursive = options.recursive) != null ? _options$recursive : this.spec.recursive\n    });\n  }\n\n  /**\n   * Run the configured transform pipeline over an input value.\n   */\n\n  cast(value, options = {}) {\n    let resolvedSchema = this.resolve(Object.assign({\n      value\n    }, options));\n    let allowOptionality = options.assert === 'ignore-optionality';\n    let result = resolvedSchema._cast(value, options);\n    if (options.assert !== false && !resolvedSchema.isType(result)) {\n      if (allowOptionality && isAbsent(result)) {\n        return result;\n      }\n      let formattedValue = printValue(value);\n      let formattedResult = printValue(result);\n      throw new TypeError(`The value of ${options.path || 'field'} could not be cast to a value ` + `that satisfies the schema type: \"${resolvedSchema.type}\". \\n\\n` + `attempted value: ${formattedValue} \\n` + (formattedResult !== formattedValue ? `result of cast: ${formattedResult}` : ''));\n    }\n    return result;\n  }\n  _cast(rawValue, _options) {\n    let value = rawValue === undefined ? rawValue : this.transforms.reduce((prevValue, fn) => fn.call(this, prevValue, rawValue, this), rawValue);\n    if (value === undefined) {\n      value = this.getDefault();\n    }\n    return value;\n  }\n  _validate(_value, options = {}, panic, next) {\n    let {\n      path,\n      originalValue = _value,\n      strict = this.spec.strict\n    } = options;\n    let value = _value;\n    if (!strict) {\n      value = this._cast(value, Object.assign({\n        assert: false\n      }, options));\n    }\n    let initialTests = [];\n    for (let test of Object.values(this.internalTests)) {\n      if (test) initialTests.push(test);\n    }\n    this.runTests({\n      path,\n      value,\n      originalValue,\n      options,\n      tests: initialTests\n    }, panic, initialErrors => {\n      // even if we aren't ending early we can't proceed further if the types aren't correct\n      if (initialErrors.length) {\n        return next(initialErrors, value);\n      }\n      this.runTests({\n        path,\n        value,\n        originalValue,\n        options,\n        tests: this.tests\n      }, panic, next);\n    });\n  }\n\n  /**\n   * Executes a set of validations, either schema, produced Tests or a nested\n   * schema validate result.\n   */\n  runTests(runOptions, panic, next) {\n    let fired = false;\n    let {\n      tests,\n      value,\n      originalValue,\n      path,\n      options\n    } = runOptions;\n    let panicOnce = arg => {\n      if (fired) return;\n      fired = true;\n      panic(arg, value);\n    };\n    let nextOnce = arg => {\n      if (fired) return;\n      fired = true;\n      next(arg, value);\n    };\n    let count = tests.length;\n    let nestedErrors = [];\n    if (!count) return nextOnce([]);\n    let args = {\n      value,\n      originalValue,\n      path,\n      options,\n      schema: this\n    };\n    for (let i = 0; i < tests.length; i++) {\n      const test = tests[i];\n      test(args, panicOnce, function finishTestRun(err) {\n        if (err) {\n          nestedErrors = nestedErrors.concat(err);\n        }\n        if (--count <= 0) {\n          nextOnce(nestedErrors);\n        }\n      });\n    }\n  }\n  asNestedTest({\n    key,\n    index,\n    parent,\n    parentPath,\n    originalParent,\n    options\n  }) {\n    const k = key != null ? key : index;\n    if (k == null) {\n      throw TypeError('Must include `key` or `index` for nested validations');\n    }\n    const isIndex = typeof k === 'number';\n    let value = parent[k];\n    const testOptions = Object.assign({}, options, {\n      // Nested validations fields are always strict:\n      //    1. parent isn't strict so the casting will also have cast inner values\n      //    2. parent is strict in which case the nested values weren't cast either\n      strict: true,\n      parent,\n      value,\n      originalValue: originalParent[k],\n      // FIXME: tests depend on `index` being passed around deeply,\n      //   we should not let the options.key/index bleed through\n      key: undefined,\n      // index: undefined,\n      [isIndex ? 'index' : 'key']: k,\n      path: isIndex || k.includes('.') ? `${parentPath || ''}[${value ? k : `\"${k}\"`}]` : (parentPath ? `${parentPath}.` : '') + key\n    });\n    return (_, panic, next) => this.resolve(testOptions)._validate(value, testOptions, panic, next);\n  }\n  validate(value, options) {\n    let schema = this.resolve(Object.assign({}, options, {\n      value\n    }));\n    return new Promise((resolve, reject) => schema._validate(value, options, (error, parsed) => {\n      if (ValidationError.isError(error)) error.value = parsed;\n      reject(error);\n    }, (errors, validated) => {\n      if (errors.length) reject(new ValidationError(errors, validated));else resolve(validated);\n    }));\n  }\n  validateSync(value, options) {\n    let schema = this.resolve(Object.assign({}, options, {\n      value\n    }));\n    let result;\n    schema._validate(value, Object.assign({}, options, {\n      sync: true\n    }), (error, parsed) => {\n      if (ValidationError.isError(error)) error.value = parsed;\n      throw error;\n    }, (errors, validated) => {\n      if (errors.length) throw new ValidationError(errors, value);\n      result = validated;\n    });\n    return result;\n  }\n  isValid(value, options) {\n    return this.validate(value, options).then(() => true, err => {\n      if (ValidationError.isError(err)) return false;\n      throw err;\n    });\n  }\n  isValidSync(value, options) {\n    try {\n      this.validateSync(value, options);\n      return true;\n    } catch (err) {\n      if (ValidationError.isError(err)) return false;\n      throw err;\n    }\n  }\n  _getDefault() {\n    let defaultValue = this.spec.default;\n    if (defaultValue == null) {\n      return defaultValue;\n    }\n    return typeof defaultValue === 'function' ? defaultValue.call(this) : clone(defaultValue);\n  }\n  getDefault(options\n  // If schema is defaulted we know it's at least not undefined\n  ) {\n    let schema = this.resolve(options || {});\n    return schema._getDefault();\n  }\n  default(def) {\n    if (arguments.length === 0) {\n      return this._getDefault();\n    }\n    let next = this.clone({\n      default: def\n    });\n    return next;\n  }\n  strict(isStrict = true) {\n    return this.clone({\n      strict: isStrict\n    });\n  }\n  nullability(nullable, message) {\n    const next = this.clone({\n      nullable\n    });\n    next.internalTests.nullable = createValidation({\n      message,\n      name: 'nullable',\n      test(value) {\n        return value === null ? this.schema.spec.nullable : true;\n      }\n    });\n    return next;\n  }\n  optionality(optional, message) {\n    const next = this.clone({\n      optional\n    });\n    next.internalTests.optionality = createValidation({\n      message,\n      name: 'optionality',\n      test(value) {\n        return value === undefined ? this.schema.spec.optional : true;\n      }\n    });\n    return next;\n  }\n  optional() {\n    return this.optionality(true);\n  }\n  defined(message = mixed.defined) {\n    return this.optionality(false, message);\n  }\n  nullable() {\n    return this.nullability(true);\n  }\n  nonNullable(message = mixed.notNull) {\n    return this.nullability(false, message);\n  }\n  required(message = mixed.required) {\n    return this.clone().withMutation(next => next.nonNullable(message).defined(message));\n  }\n  notRequired() {\n    return this.clone().withMutation(next => next.nullable().optional());\n  }\n  transform(fn) {\n    let next = this.clone();\n    next.transforms.push(fn);\n    return next;\n  }\n\n  /**\n   * Adds a test function to the schema's queue of tests.\n   * tests can be exclusive or non-exclusive.\n   *\n   * - exclusive tests, will replace any existing tests of the same name.\n   * - non-exclusive: can be stacked\n   *\n   * If a non-exclusive test is added to a schema with an exclusive test of the same name\n   * the exclusive test is removed and further tests of the same name will be stacked.\n   *\n   * If an exclusive test is added to a schema with non-exclusive tests of the same name\n   * the previous tests are removed and further tests of the same name will replace each other.\n   */\n\n  test(...args) {\n    let opts;\n    if (args.length === 1) {\n      if (typeof args[0] === 'function') {\n        opts = {\n          test: args[0]\n        };\n      } else {\n        opts = args[0];\n      }\n    } else if (args.length === 2) {\n      opts = {\n        name: args[0],\n        test: args[1]\n      };\n    } else {\n      opts = {\n        name: args[0],\n        message: args[1],\n        test: args[2]\n      };\n    }\n    if (opts.message === undefined) opts.message = mixed.default;\n    if (typeof opts.test !== 'function') throw new TypeError('`test` is a required parameters');\n    let next = this.clone();\n    let validate = createValidation(opts);\n    let isExclusive = opts.exclusive || opts.name && next.exclusiveTests[opts.name] === true;\n    if (opts.exclusive) {\n      if (!opts.name) throw new TypeError('Exclusive tests must provide a unique `name` identifying the test');\n    }\n    if (opts.name) next.exclusiveTests[opts.name] = !!opts.exclusive;\n    next.tests = next.tests.filter(fn => {\n      if (fn.OPTIONS.name === opts.name) {\n        if (isExclusive) return false;\n        if (fn.OPTIONS.test === validate.OPTIONS.test) return false;\n      }\n      return true;\n    });\n    next.tests.push(validate);\n    return next;\n  }\n  when(keys, options) {\n    if (!Array.isArray(keys) && typeof keys !== 'string') {\n      options = keys;\n      keys = '.';\n    }\n    let next = this.clone();\n    let deps = toArray(keys).map(key => new Reference(key));\n    deps.forEach(dep => {\n      // @ts-ignore readonly array\n      if (dep.isSibling) next.deps.push(dep.key);\n    });\n    next.conditions.push(typeof options === 'function' ? new Condition(deps, options) : Condition.fromOptions(deps, options));\n    return next;\n  }\n  typeError(message) {\n    let next = this.clone();\n    next.internalTests.typeError = createValidation({\n      message,\n      name: 'typeError',\n      test(value) {\n        if (!isAbsent(value) && !this.schema._typeCheck(value)) return this.createError({\n          params: {\n            type: this.schema.type\n          }\n        });\n        return true;\n      }\n    });\n    return next;\n  }\n  oneOf(enums, message = mixed.oneOf) {\n    let next = this.clone();\n    enums.forEach(val => {\n      next._whitelist.add(val);\n      next._blacklist.delete(val);\n    });\n    next.internalTests.whiteList = createValidation({\n      message,\n      name: 'oneOf',\n      skipAbsent: true,\n      test(value) {\n        let valids = this.schema._whitelist;\n        let resolved = valids.resolveAll(this.resolve);\n        return resolved.includes(value) ? true : this.createError({\n          params: {\n            values: Array.from(valids).join(', '),\n            resolved\n          }\n        });\n      }\n    });\n    return next;\n  }\n  notOneOf(enums, message = mixed.notOneOf) {\n    let next = this.clone();\n    enums.forEach(val => {\n      next._blacklist.add(val);\n      next._whitelist.delete(val);\n    });\n    next.internalTests.blacklist = createValidation({\n      message,\n      name: 'notOneOf',\n      test(value) {\n        let invalids = this.schema._blacklist;\n        let resolved = invalids.resolveAll(this.resolve);\n        if (resolved.includes(value)) return this.createError({\n          params: {\n            values: Array.from(invalids).join(', '),\n            resolved\n          }\n        });\n        return true;\n      }\n    });\n    return next;\n  }\n  strip(strip = true) {\n    let next = this.clone();\n    next.spec.strip = strip;\n    return next;\n  }\n\n  /**\n   * Return a serialized description of the schema including validations, flags, types etc.\n   *\n   * @param options Provide any needed context for resolving runtime schema alterations (lazy, when conditions, etc).\n   */\n  describe(options) {\n    const next = (options ? this.resolve(options) : this).clone();\n    const {\n      label,\n      meta,\n      optional,\n      nullable\n    } = next.spec;\n    const description = {\n      meta,\n      label,\n      optional,\n      nullable,\n      default: next.getDefault(options),\n      type: next.type,\n      oneOf: next._whitelist.describe(),\n      notOneOf: next._blacklist.describe(),\n      tests: next.tests.map(fn => ({\n        name: fn.OPTIONS.name,\n        params: fn.OPTIONS.params\n      })).filter((n, idx, list) => list.findIndex(c => c.name === n.name) === idx)\n    };\n    return description;\n  }\n}\n// @ts-expect-error\nSchema.prototype.__isYupSchema__ = true;\nfor (const method of ['validate', 'validateSync']) Schema.prototype[`${method}At`] = function (path, value, options = {}) {\n  const {\n    parent,\n    parentPath,\n    schema\n  } = getIn(this, path, value, options.context);\n  return schema[method](parent && parent[parentPath], Object.assign({}, options, {\n    parent,\n    path\n  }));\n};\nfor (const alias of ['equals', 'is']) Schema.prototype[alias] = Schema.prototype.oneOf;\nfor (const alias of ['not', 'nope']) Schema.prototype[alias] = Schema.prototype.notOneOf;\n\nconst returnsTrue = () => true;\nfunction create$8(spec) {\n  return new MixedSchema(spec);\n}\nclass MixedSchema extends Schema {\n  constructor(spec) {\n    super(typeof spec === 'function' ? {\n      type: 'mixed',\n      check: spec\n    } : Object.assign({\n      type: 'mixed',\n      check: returnsTrue\n    }, spec));\n  }\n}\ncreate$8.prototype = MixedSchema.prototype;\n\nfunction create$7() {\n  return new BooleanSchema();\n}\nclass BooleanSchema extends Schema {\n  constructor() {\n    super({\n      type: 'boolean',\n      check(v) {\n        if (v instanceof Boolean) v = v.valueOf();\n        return typeof v === 'boolean';\n      }\n    });\n    this.withMutation(() => {\n      this.transform((value, _raw, ctx) => {\n        if (ctx.spec.coerce && !ctx.isType(value)) {\n          if (/^(true|1)$/i.test(String(value))) return true;\n          if (/^(false|0)$/i.test(String(value))) return false;\n        }\n        return value;\n      });\n    });\n  }\n  isTrue(message = boolean.isValue) {\n    return this.test({\n      message,\n      name: 'is-value',\n      exclusive: true,\n      params: {\n        value: 'true'\n      },\n      test(value) {\n        return isAbsent(value) || value === true;\n      }\n    });\n  }\n  isFalse(message = boolean.isValue) {\n    return this.test({\n      message,\n      name: 'is-value',\n      exclusive: true,\n      params: {\n        value: 'false'\n      },\n      test(value) {\n        return isAbsent(value) || value === false;\n      }\n    });\n  }\n  default(def) {\n    return super.default(def);\n  }\n  defined(msg) {\n    return super.defined(msg);\n  }\n  optional() {\n    return super.optional();\n  }\n  required(msg) {\n    return super.required(msg);\n  }\n  notRequired() {\n    return super.notRequired();\n  }\n  nullable() {\n    return super.nullable();\n  }\n  nonNullable(msg) {\n    return super.nonNullable(msg);\n  }\n  strip(v) {\n    return super.strip(v);\n  }\n}\ncreate$7.prototype = BooleanSchema.prototype;\n\n// Taken from HTML spec: https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address\nlet rEmail =\n// eslint-disable-next-line\n/^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\nlet rUrl =\n// eslint-disable-next-line\n/^((https?|ftp):)?\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i;\n\n// eslint-disable-next-line\nlet rUUID = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\nlet isTrimmed = value => isAbsent(value) || value === value.trim();\nlet objStringTag = {}.toString();\nfunction create$6() {\n  return new StringSchema();\n}\nclass StringSchema extends Schema {\n  constructor() {\n    super({\n      type: 'string',\n      check(value) {\n        if (value instanceof String) value = value.valueOf();\n        return typeof value === 'string';\n      }\n    });\n    this.withMutation(() => {\n      this.transform((value, _raw, ctx) => {\n        if (!ctx.spec.coerce || ctx.isType(value)) return value;\n\n        // don't ever convert arrays\n        if (Array.isArray(value)) return value;\n        const strValue = value != null && value.toString ? value.toString() : value;\n\n        // no one wants plain objects converted to [Object object]\n        if (strValue === objStringTag) return value;\n        return strValue;\n      });\n    });\n  }\n  required(message) {\n    return super.required(message).withMutation(schema => schema.test({\n      message: message || mixed.required,\n      name: 'required',\n      skipAbsent: true,\n      test: value => !!value.length\n    }));\n  }\n  notRequired() {\n    return super.notRequired().withMutation(schema => {\n      schema.tests = schema.tests.filter(t => t.OPTIONS.name !== 'required');\n      return schema;\n    });\n  }\n  length(length, message = string.length) {\n    return this.test({\n      message,\n      name: 'length',\n      exclusive: true,\n      params: {\n        length\n      },\n      skipAbsent: true,\n      test(value) {\n        return value.length === this.resolve(length);\n      }\n    });\n  }\n  min(min, message = string.min) {\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        min\n      },\n      skipAbsent: true,\n      test(value) {\n        return value.length >= this.resolve(min);\n      }\n    });\n  }\n  max(max, message = string.max) {\n    return this.test({\n      name: 'max',\n      exclusive: true,\n      message,\n      params: {\n        max\n      },\n      skipAbsent: true,\n      test(value) {\n        return value.length <= this.resolve(max);\n      }\n    });\n  }\n  matches(regex, options) {\n    let excludeEmptyString = false;\n    let message;\n    let name;\n    if (options) {\n      if (typeof options === 'object') {\n        ({\n          excludeEmptyString = false,\n          message,\n          name\n        } = options);\n      } else {\n        message = options;\n      }\n    }\n    return this.test({\n      name: name || 'matches',\n      message: message || string.matches,\n      params: {\n        regex\n      },\n      skipAbsent: true,\n      test: value => value === '' && excludeEmptyString || value.search(regex) !== -1\n    });\n  }\n  email(message = string.email) {\n    return this.matches(rEmail, {\n      name: 'email',\n      message,\n      excludeEmptyString: true\n    });\n  }\n  url(message = string.url) {\n    return this.matches(rUrl, {\n      name: 'url',\n      message,\n      excludeEmptyString: true\n    });\n  }\n  uuid(message = string.uuid) {\n    return this.matches(rUUID, {\n      name: 'uuid',\n      message,\n      excludeEmptyString: false\n    });\n  }\n\n  //-- transforms --\n  ensure() {\n    return this.default('').transform(val => val === null ? '' : val);\n  }\n  trim(message = string.trim) {\n    return this.transform(val => val != null ? val.trim() : val).test({\n      message,\n      name: 'trim',\n      test: isTrimmed\n    });\n  }\n  lowercase(message = string.lowercase) {\n    return this.transform(value => !isAbsent(value) ? value.toLowerCase() : value).test({\n      message,\n      name: 'string_case',\n      exclusive: true,\n      skipAbsent: true,\n      test: value => isAbsent(value) || value === value.toLowerCase()\n    });\n  }\n  uppercase(message = string.uppercase) {\n    return this.transform(value => !isAbsent(value) ? value.toUpperCase() : value).test({\n      message,\n      name: 'string_case',\n      exclusive: true,\n      skipAbsent: true,\n      test: value => isAbsent(value) || value === value.toUpperCase()\n    });\n  }\n}\ncreate$6.prototype = StringSchema.prototype;\n\n//\n// String Interfaces\n//\n\nlet isNaN$1 = value => value != +value;\nfunction create$5() {\n  return new NumberSchema();\n}\nclass NumberSchema extends Schema {\n  constructor() {\n    super({\n      type: 'number',\n      check(value) {\n        if (value instanceof Number) value = value.valueOf();\n        return typeof value === 'number' && !isNaN$1(value);\n      }\n    });\n    this.withMutation(() => {\n      this.transform((value, _raw, ctx) => {\n        if (!ctx.spec.coerce) return value;\n        let parsed = value;\n        if (typeof parsed === 'string') {\n          parsed = parsed.replace(/\\s/g, '');\n          if (parsed === '') return NaN;\n          // don't use parseFloat to avoid positives on alpha-numeric strings\n          parsed = +parsed;\n        }\n        if (ctx.isType(parsed)) return parsed;\n        return parseFloat(parsed);\n      });\n    });\n  }\n  min(min, message = number.min) {\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        min\n      },\n      skipAbsent: true,\n      test(value) {\n        return value >= this.resolve(min);\n      }\n    });\n  }\n  max(max, message = number.max) {\n    return this.test({\n      message,\n      name: 'max',\n      exclusive: true,\n      params: {\n        max\n      },\n      skipAbsent: true,\n      test(value) {\n        return value <= this.resolve(max);\n      }\n    });\n  }\n  lessThan(less, message = number.lessThan) {\n    return this.test({\n      message,\n      name: 'max',\n      exclusive: true,\n      params: {\n        less\n      },\n      skipAbsent: true,\n      test(value) {\n        return value < this.resolve(less);\n      }\n    });\n  }\n  moreThan(more, message = number.moreThan) {\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        more\n      },\n      skipAbsent: true,\n      test(value) {\n        return value > this.resolve(more);\n      }\n    });\n  }\n  positive(msg = number.positive) {\n    return this.moreThan(0, msg);\n  }\n  negative(msg = number.negative) {\n    return this.lessThan(0, msg);\n  }\n  integer(message = number.integer) {\n    return this.test({\n      name: 'integer',\n      message,\n      skipAbsent: true,\n      test: val => Number.isInteger(val)\n    });\n  }\n  truncate() {\n    return this.transform(value => !isAbsent(value) ? value | 0 : value);\n  }\n  round(method) {\n    var _method;\n    let avail = ['ceil', 'floor', 'round', 'trunc'];\n    method = ((_method = method) == null ? void 0 : _method.toLowerCase()) || 'round';\n\n    // this exists for symemtry with the new Math.trunc\n    if (method === 'trunc') return this.truncate();\n    if (avail.indexOf(method.toLowerCase()) === -1) throw new TypeError('Only valid options for round() are: ' + avail.join(', '));\n    return this.transform(value => !isAbsent(value) ? Math[method](value) : value);\n  }\n}\ncreate$5.prototype = NumberSchema.prototype;\n\n//\n// Number Interfaces\n//\n\n/* eslint-disable */\n/**\n *\n * Date.parse with progressive enhancement for ISO 8601 <https://github.com/csnover/js-iso8601>\n * NON-CONFORMANT EDITION.\n * © 2011 Colin Snover <http://zetafleet.com>\n * Released under MIT license.\n */\n\n//              1 YYYY                 2 MM        3 DD              4 HH     5 mm        6 ss            7 msec         8 Z 9 ±    10 tzHH    11 tzmm\nvar isoReg = /^(\\d{4}|[+\\-]\\d{6})(?:-?(\\d{2})(?:-?(\\d{2}))?)?(?:[ T]?(\\d{2}):?(\\d{2})(?::?(\\d{2})(?:[,\\.](\\d{1,}))?)?(?:(Z)|([+\\-])(\\d{2})(?::?(\\d{2}))?)?)?$/;\nfunction parseIsoDate(date) {\n  var numericKeys = [1, 4, 5, 6, 7, 10, 11],\n    minutesOffset = 0,\n    timestamp,\n    struct;\n  if (struct = isoReg.exec(date)) {\n    // avoid NaN timestamps caused by “undefined” values being passed to Date.UTC\n    for (var i = 0, k; k = numericKeys[i]; ++i) struct[k] = +struct[k] || 0;\n\n    // allow undefined days and months\n    struct[2] = (+struct[2] || 1) - 1;\n    struct[3] = +struct[3] || 1;\n\n    // allow arbitrary sub-second precision beyond milliseconds\n    struct[7] = struct[7] ? String(struct[7]).substr(0, 3) : 0;\n\n    // timestamps without timezone identifiers should be considered local time\n    if ((struct[8] === undefined || struct[8] === '') && (struct[9] === undefined || struct[9] === '')) timestamp = +new Date(struct[1], struct[2], struct[3], struct[4], struct[5], struct[6], struct[7]);else {\n      if (struct[8] !== 'Z' && struct[9] !== undefined) {\n        minutesOffset = struct[10] * 60 + struct[11];\n        if (struct[9] === '+') minutesOffset = 0 - minutesOffset;\n      }\n      timestamp = Date.UTC(struct[1], struct[2], struct[3], struct[4], struct[5] + minutesOffset, struct[6], struct[7]);\n    }\n  } else timestamp = Date.parse ? Date.parse(date) : NaN;\n  return timestamp;\n}\n\n// @ts-ignore\nlet invalidDate = new Date('');\nlet isDate = obj => Object.prototype.toString.call(obj) === '[object Date]';\nfunction create$4() {\n  return new DateSchema();\n}\nclass DateSchema extends Schema {\n  constructor() {\n    super({\n      type: 'date',\n      check(v) {\n        return isDate(v) && !isNaN(v.getTime());\n      }\n    });\n    this.withMutation(() => {\n      this.transform((value, _raw, ctx) => {\n        if (!ctx.spec.coerce || ctx.isType(value)) return value;\n        value = parseIsoDate(value);\n\n        // 0 is a valid timestamp equivalent to 1970-01-01T00:00:00Z(unix epoch) or before.\n        return !isNaN(value) ? new Date(value) : DateSchema.INVALID_DATE;\n      });\n    });\n  }\n  prepareParam(ref, name) {\n    let param;\n    if (!Reference.isRef(ref)) {\n      let cast = this.cast(ref);\n      if (!this._typeCheck(cast)) throw new TypeError(`\\`${name}\\` must be a Date or a value that can be \\`cast()\\` to a Date`);\n      param = cast;\n    } else {\n      param = ref;\n    }\n    return param;\n  }\n  min(min, message = date.min) {\n    let limit = this.prepareParam(min, 'min');\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        min\n      },\n      skipAbsent: true,\n      test(value) {\n        return value >= this.resolve(limit);\n      }\n    });\n  }\n  max(max, message = date.max) {\n    let limit = this.prepareParam(max, 'max');\n    return this.test({\n      message,\n      name: 'max',\n      exclusive: true,\n      params: {\n        max\n      },\n      skipAbsent: true,\n      test(value) {\n        return value <= this.resolve(limit);\n      }\n    });\n  }\n}\nDateSchema.INVALID_DATE = invalidDate;\ncreate$4.prototype = DateSchema.prototype;\ncreate$4.INVALID_DATE = invalidDate;\n\n// @ts-expect-error\nfunction sortFields(fields, excludedEdges = []) {\n  let edges = [];\n  let nodes = new Set();\n  let excludes = new Set(excludedEdges.map(([a, b]) => `${a}-${b}`));\n  function addNode(depPath, key) {\n    let node = split(depPath)[0];\n    nodes.add(node);\n    if (!excludes.has(`${key}-${node}`)) edges.push([key, node]);\n  }\n  for (const key of Object.keys(fields)) {\n    let value = fields[key];\n    nodes.add(key);\n    if (Reference.isRef(value) && value.isSibling) addNode(value.path, key);else if (isSchema(value) && 'deps' in value) value.deps.forEach(path => addNode(path, key));\n  }\n  return toposort.array(Array.from(nodes), edges).reverse();\n}\n\nfunction findIndex(arr, err) {\n  let idx = Infinity;\n  arr.some((key, ii) => {\n    var _err$path;\n    if ((_err$path = err.path) != null && _err$path.includes(key)) {\n      idx = ii;\n      return true;\n    }\n  });\n  return idx;\n}\nfunction sortByKeyOrder(keys) {\n  return (a, b) => {\n    return findIndex(keys, a) - findIndex(keys, b);\n  };\n}\n\nconst parseJson = (value, _, ctx) => {\n  if (typeof value !== 'string') {\n    return value;\n  }\n  let parsed = value;\n  try {\n    parsed = JSON.parse(value);\n  } catch (err) {\n    /* */\n  }\n  return ctx.isType(parsed) ? parsed : value;\n};\n\n// @ts-ignore\nfunction deepPartial(schema) {\n  if ('fields' in schema) {\n    const partial = {};\n    for (const [key, fieldSchema] of Object.entries(schema.fields)) {\n      partial[key] = deepPartial(fieldSchema);\n    }\n    return schema.setFields(partial);\n  }\n  if (schema.type === 'array') {\n    const nextArray = schema.optional();\n    if (nextArray.innerType) nextArray.innerType = deepPartial(nextArray.innerType);\n    return nextArray;\n  }\n  if (schema.type === 'tuple') {\n    return schema.optional().clone({\n      types: schema.spec.types.map(deepPartial)\n    });\n  }\n  if ('optional' in schema) {\n    return schema.optional();\n  }\n  return schema;\n}\nconst deepHas = (obj, p) => {\n  const path = [...normalizePath(p)];\n  if (path.length === 1) return path[0] in obj;\n  let last = path.pop();\n  let parent = getter(join(path), true)(obj);\n  return !!(parent && last in parent);\n};\nlet isObject = obj => Object.prototype.toString.call(obj) === '[object Object]';\nfunction unknown(ctx, value) {\n  let known = Object.keys(ctx.fields);\n  return Object.keys(value).filter(key => known.indexOf(key) === -1);\n}\nconst defaultSort = sortByKeyOrder([]);\nfunction create$3(spec) {\n  return new ObjectSchema(spec);\n}\nclass ObjectSchema extends Schema {\n  constructor(spec) {\n    super({\n      type: 'object',\n      check(value) {\n        return isObject(value) || typeof value === 'function';\n      }\n    });\n    this.fields = Object.create(null);\n    this._sortErrors = defaultSort;\n    this._nodes = [];\n    this._excludedEdges = [];\n    this.withMutation(() => {\n      if (spec) {\n        this.shape(spec);\n      }\n    });\n  }\n  _cast(_value, options = {}) {\n    var _options$stripUnknown;\n    let value = super._cast(_value, options);\n\n    //should ignore nulls here\n    if (value === undefined) return this.getDefault();\n    if (!this._typeCheck(value)) return value;\n    let fields = this.fields;\n    let strip = (_options$stripUnknown = options.stripUnknown) != null ? _options$stripUnknown : this.spec.noUnknown;\n    let props = [].concat(this._nodes, Object.keys(value).filter(v => !this._nodes.includes(v)));\n    let intermediateValue = {}; // is filled during the transform below\n    let innerOptions = Object.assign({}, options, {\n      parent: intermediateValue,\n      __validating: options.__validating || false\n    });\n    let isChanged = false;\n    for (const prop of props) {\n      let field = fields[prop];\n      let exists = (prop in value);\n      if (field) {\n        let fieldValue;\n        let inputValue = value[prop];\n\n        // safe to mutate since this is fired in sequence\n        innerOptions.path = (options.path ? `${options.path}.` : '') + prop;\n        field = field.resolve({\n          value: inputValue,\n          context: options.context,\n          parent: intermediateValue\n        });\n        let fieldSpec = field instanceof Schema ? field.spec : undefined;\n        let strict = fieldSpec == null ? void 0 : fieldSpec.strict;\n        if (fieldSpec != null && fieldSpec.strip) {\n          isChanged = isChanged || prop in value;\n          continue;\n        }\n        fieldValue = !options.__validating || !strict ?\n        // TODO: use _cast, this is double resolving\n        field.cast(value[prop], innerOptions) : value[prop];\n        if (fieldValue !== undefined) {\n          intermediateValue[prop] = fieldValue;\n        }\n      } else if (exists && !strip) {\n        intermediateValue[prop] = value[prop];\n      }\n      if (exists !== prop in intermediateValue || intermediateValue[prop] !== value[prop]) {\n        isChanged = true;\n      }\n    }\n    return isChanged ? intermediateValue : value;\n  }\n  _validate(_value, options = {}, panic, next) {\n    let {\n      from = [],\n      originalValue = _value,\n      recursive = this.spec.recursive\n    } = options;\n    options.from = [{\n      schema: this,\n      value: originalValue\n    }, ...from];\n    // this flag is needed for handling `strict` correctly in the context of\n    // validation vs just casting. e.g strict() on a field is only used when validating\n    options.__validating = true;\n    options.originalValue = originalValue;\n    super._validate(_value, options, panic, (objectErrors, value) => {\n      if (!recursive || !isObject(value)) {\n        next(objectErrors, value);\n        return;\n      }\n      originalValue = originalValue || value;\n      let tests = [];\n      for (let key of this._nodes) {\n        let field = this.fields[key];\n        if (!field || Reference.isRef(field)) {\n          continue;\n        }\n        tests.push(field.asNestedTest({\n          options,\n          key,\n          parent: value,\n          parentPath: options.path,\n          originalParent: originalValue\n        }));\n      }\n      this.runTests({\n        tests,\n        value,\n        originalValue,\n        options\n      }, panic, fieldErrors => {\n        next(fieldErrors.sort(this._sortErrors).concat(objectErrors), value);\n      });\n    });\n  }\n  clone(spec) {\n    const next = super.clone(spec);\n    next.fields = Object.assign({}, this.fields);\n    next._nodes = this._nodes;\n    next._excludedEdges = this._excludedEdges;\n    next._sortErrors = this._sortErrors;\n    return next;\n  }\n  concat(schema) {\n    let next = super.concat(schema);\n    let nextFields = next.fields;\n    for (let [field, schemaOrRef] of Object.entries(this.fields)) {\n      const target = nextFields[field];\n      nextFields[field] = target === undefined ? schemaOrRef : target;\n    }\n    return next.withMutation(s => s.setFields(nextFields, this._excludedEdges));\n  }\n  _getDefault() {\n    if ('default' in this.spec) {\n      return super._getDefault();\n    }\n\n    // if there is no default set invent one\n    if (!this._nodes.length) {\n      return undefined;\n    }\n    let dft = {};\n    this._nodes.forEach(key => {\n      const field = this.fields[key];\n      dft[key] = field && 'getDefault' in field ? field.getDefault() : undefined;\n    });\n    return dft;\n  }\n  setFields(shape, excludedEdges) {\n    let next = this.clone();\n    next.fields = shape;\n    next._nodes = sortFields(shape, excludedEdges);\n    next._sortErrors = sortByKeyOrder(Object.keys(shape));\n    // XXX: this carries over edges which may not be what you want\n    if (excludedEdges) next._excludedEdges = excludedEdges;\n    return next;\n  }\n  shape(additions, excludes = []) {\n    return this.clone().withMutation(next => {\n      let edges = next._excludedEdges;\n      if (excludes.length) {\n        if (!Array.isArray(excludes[0])) excludes = [excludes];\n        edges = [...next._excludedEdges, ...excludes];\n      }\n\n      // XXX: excludes here is wrong\n      return next.setFields(Object.assign(next.fields, additions), edges);\n    });\n  }\n  partial() {\n    const partial = {};\n    for (const [key, schema] of Object.entries(this.fields)) {\n      partial[key] = 'optional' in schema && schema.optional instanceof Function ? schema.optional() : schema;\n    }\n    return this.setFields(partial);\n  }\n  deepPartial() {\n    const next = deepPartial(this);\n    return next;\n  }\n  pick(keys) {\n    const picked = {};\n    for (const key of keys) {\n      if (this.fields[key]) picked[key] = this.fields[key];\n    }\n    return this.setFields(picked);\n  }\n  omit(keys) {\n    const fields = Object.assign({}, this.fields);\n    for (const key of keys) {\n      delete fields[key];\n    }\n    return this.setFields(fields);\n  }\n  from(from, to, alias) {\n    let fromGetter = getter(from, true);\n    return this.transform(obj => {\n      if (!obj) return obj;\n      let newObj = obj;\n      if (deepHas(obj, from)) {\n        newObj = Object.assign({}, obj);\n        if (!alias) delete newObj[from];\n        newObj[to] = fromGetter(obj);\n      }\n      return newObj;\n    });\n  }\n\n  /** Parse an input JSON string to an object */\n  json() {\n    return this.transform(parseJson);\n  }\n  noUnknown(noAllow = true, message = object.noUnknown) {\n    if (typeof noAllow !== 'boolean') {\n      message = noAllow;\n      noAllow = true;\n    }\n    let next = this.test({\n      name: 'noUnknown',\n      exclusive: true,\n      message: message,\n      test(value) {\n        if (value == null) return true;\n        const unknownKeys = unknown(this.schema, value);\n        return !noAllow || unknownKeys.length === 0 || this.createError({\n          params: {\n            unknown: unknownKeys.join(', ')\n          }\n        });\n      }\n    });\n    next.spec.noUnknown = noAllow;\n    return next;\n  }\n  unknown(allow = true, message = object.noUnknown) {\n    return this.noUnknown(!allow, message);\n  }\n  transformKeys(fn) {\n    return this.transform(obj => {\n      if (!obj) return obj;\n      const result = {};\n      for (const key of Object.keys(obj)) result[fn(key)] = obj[key];\n      return result;\n    });\n  }\n  camelCase() {\n    return this.transformKeys(camelCase);\n  }\n  snakeCase() {\n    return this.transformKeys(snakeCase);\n  }\n  constantCase() {\n    return this.transformKeys(key => snakeCase(key).toUpperCase());\n  }\n  describe(options) {\n    let base = super.describe(options);\n    base.fields = {};\n    for (const [key, value] of Object.entries(this.fields)) {\n      var _innerOptions;\n      let innerOptions = options;\n      if ((_innerOptions = innerOptions) != null && _innerOptions.value) {\n        innerOptions = Object.assign({}, innerOptions, {\n          parent: innerOptions.value,\n          value: innerOptions.value[key]\n        });\n      }\n      base.fields[key] = value.describe(innerOptions);\n    }\n    return base;\n  }\n}\ncreate$3.prototype = ObjectSchema.prototype;\n\nfunction create$2(type) {\n  return new ArraySchema(type);\n}\nclass ArraySchema extends Schema {\n  constructor(type) {\n    super({\n      type: 'array',\n      check(v) {\n        return Array.isArray(v);\n      }\n    });\n\n    // `undefined` specifically means uninitialized, as opposed to \"no subtype\"\n    this.innerType = void 0;\n    this.innerType = type;\n  }\n  _cast(_value, _opts) {\n    const value = super._cast(_value, _opts);\n\n    // should ignore nulls here\n    if (!this._typeCheck(value) || !this.innerType) {\n      return value;\n    }\n    let isChanged = false;\n    const castArray = value.map((v, idx) => {\n      const castElement = this.innerType.cast(v, Object.assign({}, _opts, {\n        path: `${_opts.path || ''}[${idx}]`\n      }));\n      if (castElement !== v) {\n        isChanged = true;\n      }\n      return castElement;\n    });\n    return isChanged ? castArray : value;\n  }\n  _validate(_value, options = {}, panic, next) {\n    var _options$recursive;\n    // let sync = options.sync;\n    // let path = options.path;\n    let innerType = this.innerType;\n    // let endEarly = options.abortEarly ?? this.spec.abortEarly;\n    let recursive = (_options$recursive = options.recursive) != null ? _options$recursive : this.spec.recursive;\n    options.originalValue != null ? options.originalValue : _value;\n    super._validate(_value, options, panic, (arrayErrors, value) => {\n      var _options$originalValu2;\n      if (!recursive || !innerType || !this._typeCheck(value)) {\n        next(arrayErrors, value);\n        return;\n      }\n\n      // #950 Ensure that sparse array empty slots are validated\n      let tests = new Array(value.length);\n      for (let index = 0; index < value.length; index++) {\n        var _options$originalValu;\n        tests[index] = innerType.asNestedTest({\n          options,\n          index,\n          parent: value,\n          parentPath: options.path,\n          originalParent: (_options$originalValu = options.originalValue) != null ? _options$originalValu : _value\n        });\n      }\n      this.runTests({\n        value,\n        tests,\n        originalValue: (_options$originalValu2 = options.originalValue) != null ? _options$originalValu2 : _value,\n        options\n      }, panic, innerTypeErrors => next(innerTypeErrors.concat(arrayErrors), value));\n    });\n  }\n  clone(spec) {\n    const next = super.clone(spec);\n    // @ts-expect-error readonly\n    next.innerType = this.innerType;\n    return next;\n  }\n\n  /** Parse an input JSON string to an object */\n  json() {\n    return this.transform(parseJson);\n  }\n  concat(schema) {\n    let next = super.concat(schema);\n\n    // @ts-expect-error readonly\n    next.innerType = this.innerType;\n    if (schema.innerType)\n      // @ts-expect-error readonly\n      next.innerType = next.innerType ?\n      // @ts-expect-error Lazy doesn't have concat and will break\n      next.innerType.concat(schema.innerType) : schema.innerType;\n    return next;\n  }\n  of(schema) {\n    // FIXME: this should return a new instance of array without the default to be\n    let next = this.clone();\n    if (!isSchema(schema)) throw new TypeError('`array.of()` sub-schema must be a valid yup schema not: ' + printValue(schema));\n\n    // @ts-expect-error readonly\n    next.innerType = schema;\n    return next;\n  }\n  length(length, message = array.length) {\n    return this.test({\n      message,\n      name: 'length',\n      exclusive: true,\n      params: {\n        length\n      },\n      skipAbsent: true,\n      test(value) {\n        return value.length === this.resolve(length);\n      }\n    });\n  }\n  min(min, message) {\n    message = message || array.min;\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        min\n      },\n      skipAbsent: true,\n      // FIXME(ts): Array<typeof T>\n      test(value) {\n        return value.length >= this.resolve(min);\n      }\n    });\n  }\n  max(max, message) {\n    message = message || array.max;\n    return this.test({\n      message,\n      name: 'max',\n      exclusive: true,\n      params: {\n        max\n      },\n      skipAbsent: true,\n      test(value) {\n        return value.length <= this.resolve(max);\n      }\n    });\n  }\n  ensure() {\n    return this.default(() => []).transform((val, original) => {\n      // We don't want to return `null` for nullable schema\n      if (this._typeCheck(val)) return val;\n      return original == null ? [] : [].concat(original);\n    });\n  }\n  compact(rejector) {\n    let reject = !rejector ? v => !!v : (v, i, a) => !rejector(v, i, a);\n    return this.transform(values => values != null ? values.filter(reject) : values);\n  }\n  describe(options) {\n    let base = super.describe();\n    if (this.innerType) {\n      var _innerOptions;\n      let innerOptions = options;\n      if ((_innerOptions = innerOptions) != null && _innerOptions.value) {\n        innerOptions = Object.assign({}, innerOptions, {\n          parent: innerOptions.value,\n          value: innerOptions.value[0]\n        });\n      }\n      base.innerType = this.innerType.describe(options);\n    }\n    return base;\n  }\n}\ncreate$2.prototype = ArraySchema.prototype;\n\n// @ts-ignore\nfunction create$1(schemas) {\n  return new TupleSchema(schemas);\n}\nclass TupleSchema extends Schema {\n  constructor(schemas) {\n    super({\n      type: 'tuple',\n      spec: {\n        types: schemas\n      },\n      check(v) {\n        const types = this.spec.types;\n        return Array.isArray(v) && v.length === types.length;\n      }\n    });\n    this.withMutation(() => {\n      this.typeError(tuple.notType);\n    });\n  }\n  _cast(inputValue, options) {\n    const {\n      types\n    } = this.spec;\n    const value = super._cast(inputValue, options);\n    if (!this._typeCheck(value)) {\n      return value;\n    }\n    let isChanged = false;\n    const castArray = types.map((type, idx) => {\n      const castElement = type.cast(value[idx], Object.assign({}, options, {\n        path: `${options.path || ''}[${idx}]`\n      }));\n      if (castElement !== value[idx]) isChanged = true;\n      return castElement;\n    });\n    return isChanged ? castArray : value;\n  }\n  _validate(_value, options = {}, panic, next) {\n    let itemTypes = this.spec.types;\n    super._validate(_value, options, panic, (tupleErrors, value) => {\n      var _options$originalValu2;\n      // intentionally not respecting recursive\n      if (!this._typeCheck(value)) {\n        next(tupleErrors, value);\n        return;\n      }\n      let tests = [];\n      for (let [index, itemSchema] of itemTypes.entries()) {\n        var _options$originalValu;\n        tests[index] = itemSchema.asNestedTest({\n          options,\n          index,\n          parent: value,\n          parentPath: options.path,\n          originalParent: (_options$originalValu = options.originalValue) != null ? _options$originalValu : _value\n        });\n      }\n      this.runTests({\n        value,\n        tests,\n        originalValue: (_options$originalValu2 = options.originalValue) != null ? _options$originalValu2 : _value,\n        options\n      }, panic, innerTypeErrors => next(innerTypeErrors.concat(tupleErrors), value));\n    });\n  }\n}\ncreate$1.prototype = TupleSchema.prototype;\n\nfunction create(builder) {\n  return new Lazy(builder);\n}\nclass Lazy {\n  constructor(builder) {\n    this.type = 'lazy';\n    this.__isYupSchema__ = true;\n    this.spec = void 0;\n    this._resolve = (value, options = {}) => {\n      let schema = this.builder(value, options);\n      if (!isSchema(schema)) throw new TypeError('lazy() functions must return a valid schema');\n      if (this.spec.optional) schema = schema.optional();\n      return schema.resolve(options);\n    };\n    this.builder = builder;\n    this.spec = {\n      meta: undefined,\n      optional: false\n    };\n  }\n  clone(spec) {\n    const next = new Lazy(this.builder);\n    next.spec = Object.assign({}, this.spec, spec);\n    return next;\n  }\n  optionality(optional) {\n    const next = this.clone({\n      optional\n    });\n    return next;\n  }\n  optional() {\n    return this.optionality(true);\n  }\n  resolve(options) {\n    return this._resolve(options.value, options);\n  }\n  cast(value, options) {\n    return this._resolve(value, options).cast(value, options);\n  }\n  asNestedTest(config) {\n    let {\n      key,\n      index,\n      parent,\n      options\n    } = config;\n    let value = parent[index != null ? index : key];\n    return this._resolve(value, Object.assign({}, options, {\n      value,\n      parent\n    })).asNestedTest(config);\n  }\n  validate(value, options) {\n    return this._resolve(value, options).validate(value, options);\n  }\n  validateSync(value, options) {\n    return this._resolve(value, options).validateSync(value, options);\n  }\n  validateAt(path, value, options) {\n    return this._resolve(value, options).validateAt(path, value, options);\n  }\n  validateSyncAt(path, value, options) {\n    return this._resolve(value, options).validateSyncAt(path, value, options);\n  }\n  isValid(value, options) {\n    return this._resolve(value, options).isValid(value, options);\n  }\n  isValidSync(value, options) {\n    return this._resolve(value, options).isValidSync(value, options);\n  }\n  describe(options) {\n    return options ? this.resolve(options).describe(options) : {\n      type: 'lazy',\n      meta: this.spec.meta,\n      label: undefined\n    };\n  }\n  meta(...args) {\n    if (args.length === 0) return this.spec.meta;\n    let next = this.clone();\n    next.spec.meta = Object.assign(next.spec.meta || {}, args[0]);\n    return next;\n  }\n}\n\nfunction setLocale(custom) {\n  Object.keys(custom).forEach(type => {\n    // @ts-ignore\n    Object.keys(custom[type]).forEach(method => {\n      // @ts-ignore\n      locale[type][method] = custom[type][method];\n    });\n  });\n}\n\nfunction addMethod(schemaType, name, fn) {\n  if (!schemaType || !isSchema(schemaType.prototype)) throw new TypeError('You must provide a yup schema constructor function');\n  if (typeof name !== 'string') throw new TypeError('A Method name must be provided');\n  if (typeof fn !== 'function') throw new TypeError('Method function must be provided');\n  schemaType.prototype[name] = fn;\n}\n\nexport { ArraySchema, BooleanSchema, DateSchema, MixedSchema, NumberSchema, ObjectSchema, Schema, StringSchema, TupleSchema, ValidationError, addMethod, create$2 as array, create$7 as bool, create$7 as boolean, create$4 as date, getIn, isSchema, create as lazy, create$8 as mixed, create$5 as number, create$3 as object, reach, create$9 as ref, setLocale, create$6 as string, create$1 as tuple };\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.h = () => (\"fcc75779ef5b271438e4\")","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"names":[],"sourceRoot":""}