{"version":3,"file":"main.2373656beed6450645e6.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;ACvCA","sources":["webpack://adiba-central/./src/redux/api/apiSlice.ts","webpack://adiba-central/webpack/runtime/getFullHash"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nimport { logOut, setCredentials } from \"../../member/redux/authSlice\";\n\nconst baseQuery = fetchBaseQuery({\n  baseUrl: \"http://localhost:3112/ \",\n  credentials: \"include\",\n  prepareHeaders: (headers, { getState }: any) => {\n    const token = getState().auth.token;\n    if (token) {\n      headers.set(\"authorization\", `Bearer ${token}`);\n    }\n    return headers;\n  },\n});\n\nconst baseQueryWithReauth = async (arg, api, options) => {\n  let result: any = await baseQuery(arg, api, options);\n\n  if (result?.error?.originalStatus === 403) {\n    console.log(\"sending refresh token\");\n\n    const refreshResult: any = await baseQuery(\"/refresh\", api, options);\n    console.log(refreshResult);\n\n    if (refreshResult?.data) {\n      const user = api.getState().auth.user;\n      api.dispatch(setCredentials({ ...refreshResult.data, user }));\n\n      result = await baseQuery(arg, api, options);\n    } else {\n      api.dispatch(logOut(\"/\"));\n    }\n  }\n  return result;\n};\n\nexport const apiSlice = createApi({\n  baseQuery: baseQueryWithReauth,\n  endpoints: (builder) => ({}),\n});\n","__webpack_require__.h = () => (\"422ea2de503f10e0d8fa\")"],"names":[],"sourceRoot":""}