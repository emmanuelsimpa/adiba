{"version":3,"file":"main.99bceff8fbe2c51288d7.hot-update.js","mappings":";;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAUA;AAKA;AAHA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AAMA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAWA;AAGA;AAMA;AAGA;AAAA;AACA;AAAA;AAEA;AAGA;AAKA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AAGA;AAQA;;;;;;;;AChHA","sources":["webpack://adiba-central/./src/member/formT/components/selectPlan.tsx","webpack://adiba-central/webpack/runtime/getFullHash"],"sourcesContent":["import { Plan } from \"AppTypes\";\nimport { Card } from \"./card\";\n// import classNames from 'classNames';\n// import { calculatePrice } from '../utils/calculatePrice';\nimport { classNames } from \"../../../_app/shared/utils/className\";\nimport * as React from \"react\";\n\nconst activeClasses =\n  \"border border-primary-purplish-blue bg-neutral-magnolia falopa\";\n\nconst plans: Plan[] = [\n  {\n    name: \"Arcade\",\n    icon: \"icon-arcade.svg\",\n    monthlyPrice: 9,\n  },\n  {\n    name: \"Advanced\",\n    icon: \"icon-advanced.svg\",\n    monthlyPrice: 12,\n  },\n  {\n    name: \"Pro\",\n    icon: \"icon-pro.svg\",\n    monthlyPrice: 15,\n  },\n];\n\ninterface SelectPlanProps {\n  selectedPlan: Plan | null;\n  monthly: boolean;\n  updateSelectedPlan: (selectedPlan: Plan) => void;\n  updateIsMonthly: (isMonthly: boolean) => void;\n}\n\nexport const SelectPlan = ({\n  selectedPlan,\n  monthly,\n  updateSelectedPlan,\n  updateIsMonthly,\n}: SelectPlanProps) => {\n  return (\n    <section className='flex flex-col gap-4 w-full'>\n      <h2>Select your plan</h2>\n      <p>You have the option of monthly or yearly billing</p>\n      <ul className='flex flex-col gap-2 lg:flex-row'>\n        {plans.map((plan) => (\n          <li key={plan.name} className='lg:w-full'>\n            <div\n              className={classNames(\n                \"p-4 flex gap-4 transition-all w-full lg:flex-col lg:gap-8 hover:border-primary-purplish-blue hover:bg-neutral-magnolia cursor-pointer\",\n                plan.name === selectedPlan?.name\n                  ? activeClasses\n                  : \"border border-neutral-light-gray\"\n              )}\n              onClick={() => updateSelectedPlan(plan)}\n            >\n              <figure className='w-10 h-10'>\n                <img src={`./assets/images/${plan.icon}`} alt='' />\n              </figure>\n              <div className=''>\n                <h3 className='leading-5'>{plan.name}</h3>\n                <p>\n                  $\n                  {/* {calculatePrice(\n\t\t\t\t\t\t\t\t\t\tplan.monthlyPrice,\n\t\t\t\t\t\t\t\t\t\tmonthly\n\t\t\t\t\t\t\t\t\t).toLocaleString()} */}\n                  /{monthly ? \"mo\" : \"yr\"}\n                </p>\n\n                <p\n                  className={classNames(\n                    \"text-primary-marine-blue\",\n                    monthly && \"hidden\"\n                  )}\n                >\n                  2 months free\n                </p>\n              </div>\n            </div>\n          </li>\n        ))}\n      </ul>\n      <div className='bg-neutral-alabaster w-full rounded-sm mt-8 felx p-4'>\n        <label className='flex relative items-center cursor-pointer mx-auto w-min'>\n          <span\n            className={classNames(\n              `mr-4 font-medium`,\n              monthly ? \"text-primary-marine-blue\" : \"\"\n            )}\n          >\n            Monthly\n          </span>\n          <input\n            type='checkbox'\n            onChange={() => updateIsMonthly(!monthly)}\n            className='sr-only peer'\n          />\n          <div className=\"w-11 h-6 peer-focus:outline-none rounded-full peer bg-primary-marine-blue peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[80px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all\"></div>\n          <span\n            className={classNames(\n              `ml-4 font-medium`,\n              !monthly ? \"text-primary-marine-blue\" : \"\"\n            )}\n          >\n            Yearly\n          </span>\n        </label>\n      </div>\n    </section>\n  );\n};\n","__webpack_require__.h = () => (\"824f3b3a639b34a6714b\")"],"names":[],"sourceRoot":""}