{"version":3,"file":"main.f5c6cc2dfa5b51ffeeda.hot-update.js","mappings":";;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAEA;AAOA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;;;;;;;ACvCA","sources":["webpack://adiba-central/./src/redux/store.tsx","webpack://adiba-central/webpack/runtime/getFullHash"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\n\nexport const store = configureStore({\n  reducer: {},\n});\n\nconsole.log(\"store\", store.getState());\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n\n// import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\n// // import { reduxBatch } from \"@manaflair/redux-batch\";\n// // import { persistStore } from \"redux-persist\";\n// // import { rootReducer, rootSaga } from \"./rootReducer\";\n// // import createSagaMiddleware from \"redux-saga\";\n\n// // const sagaMiddleware = createSagaMiddleware;\n// const middleware = [\n//   ...getDefaultMiddleware({\n//     immutableCheck: false,\n//     serializableCheck: false,\n//     thunk: true,\n//   }),\n//   // sagaMiddleware,\n// ];\n\n// const store = configureStore({\n//   reducer: [],\n//   middleware,\n//   devTools: process.env.NODE_ENV !== \"production\",\n//   // enhancers: [reduxBatch],\n// });\n\n// // export const persistor = persistStore(store);\n\n// // sagaMiddleware.run(rootSaga);\n// export default store;\n","__webpack_require__.h = () => (\"38899e95ea5d3fbb1ab4\")"],"names":[],"sourceRoot":""}