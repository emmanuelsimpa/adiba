{"version":3,"file":"main.194d584eefea96866f43.hot-update.js","mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACtBA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AAgBA;AAGA;AAAA;AAAA;AAEA;AAEA;AAAA;AAEA;AAAA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAGA;AAMA;AAGA;AAAA;AAAA;AAEA;AAAA;AACA;AAGA;AAGA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAIA;AAAA;AACA;AAAA;AAGA;AAAA;AAOA;AAAA;AAAA;AAEA;AAAA;AACA;AAGA;AAGA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAGA;AAAA;AAOA;AAAA;AAAA;AAEA;AAAA;AACA;AAGA;AAGA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAGA;AAAA;AAYA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAOA;AAKA;AAAA;AACA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AANA;AAAA;AAQA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACrMA","sources":["webpack://adiba-central/./node_modules/@heroicons/react/24/solid/CheckIcon.js","webpack://adiba-central/./src/_app/shared/member/SignUpSteps.tsx","webpack://adiba-central/./src/_app/shared/member/UserWizard.tsx","webpack://adiba-central/./src/member/formT/SignWizard.tsx","webpack://adiba-central/webpack/runtime/getFullHash"],"sourcesContent":["const React = require(\"react\");\n\nfunction CheckIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M19.916 4.626a.75.75 0 01.208 1.04l-9 13.5a.75.75 0 01-1.154.114l-6-6a.75.75 0 011.06-1.06l5.353 5.353 8.493-12.739a.75.75 0 011.04-.208z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(CheckIcon);\nmodule.exports = ForwardRef;","import * as React from \"react\";\n\nexport const SignUpSteps = [\n  {\n    id: \"01\",\n    name: \"Administrator\",\n    description: \"Vitae sed mi luctus laoreet.\",\n    href: \"#\",\n    status: \"current\",\n  },\n  {\n    id: \"02\",\n    name: \"Business Entity\",\n    description: \"Cursus semper viverra.\",\n    href: \"#\",\n    status: \"upcoming\",\n  },\n  {\n    id: \"03\",\n    name: \"Summary\",\n    description: \"Penatibus eu quis ante.\",\n    href: \"#\",\n    status: \"upcoming\",\n  },\n];\n","import * as React from \"react\";\n// import Steps from '../Steps';\nimport { classNames } from \"../utils/className\";\nimport { CheckIcon } from \"@heroicons/react/24/solid\";\n\ninterface StepsList {\n  id: string;\n  name?: string;\n  description?: string;\n  href?: string;\n  status?: string;\n}\n\ninterface UserWizardProps {\n  content?: React.ReactNode;\n  steps: Array<StepsList>;\n  handleSwitch: Function;\n}\n\nexport default function UserWizard(\n  props: React.PropsWithChildren<UserWizardProps>\n) {\n  const { content, steps, handleSwitch } = props;\n\n  return (\n    <>\n      <div className='mt-8 lg:border-t lg:border-b lg:border-gray-200'>\n        <nav\n          className='mx-auto max-w-7xl px-4 sm:px-6 lg:px-8'\n          aria-label='Progress'\n        >\n          <ol className='overflow-hidden rounded-md lg:flex lg:rounded-none lg:border-l lg:border-r lg:border-gray-200'>\n            {steps.map((step, stepIdx) => (\n              <li\n                key={step.id}\n                className='relative overflow-hidden lg:flex-1'\n                onClick={handleSwitch(step.id)}\n              >\n                <div\n                  className={classNames(\n                    stepIdx === 0 ? \"border-b-0 rounded-t-md\" : \"\",\n                    stepIdx === steps.length - 1\n                      ? \"border-t-0 rounded-b-md\"\n                      : \"\",\n                    \"border border-gray-200 overflow-hidden lg:border-0\"\n                  )}\n                >\n                  {step.status === \"complete\" ? (\n                    <a href={step.href} className='group'>\n                      <span\n                        className='absolute top-0 left-0 h-full w-1 bg-transparent group-hover:bg-gray-200 lg:bottom-0 lg:top-auto lg:h-1 lg:w-full'\n                        aria-hidden='true'\n                      />\n                      <span\n                        className={classNames(\n                          stepIdx !== 0 ? \"lg:pl-9\" : \"\",\n                          \"px-6 py-5 flex items-start text-sm font-medium\"\n                        )}\n                      >\n                        <span className='flex-shrink-0'>\n                          <span className='flex h-10 w-10 items-center justify-center rounded-full bg-indigo-600'>\n                            <CheckIcon\n                              className='h-6 w-6 text-white'\n                              aria-hidden='true'\n                            />\n                          </span>\n                        </span>\n                        <span className='mt-0.5 ml-4 flex min-w-0 flex-col'>\n                          <span className='text-sm font-medium'>\n                            {step.name}\n                          </span>\n                          <span className='text-sm font-medium text-gray-500'>\n                            {step.description}\n                          </span>\n                        </span>\n                      </span>\n                    </a>\n                  ) : step.status === \"current\" ? (\n                    <a href={step.href} aria-current='step'>\n                      <span\n                        className='absolute top-0 left-0 h-full w-1 bg-indigo-600 lg:bottom-0 lg:top-auto lg:h-1 lg:w-full'\n                        aria-hidden='true'\n                      />\n                      <span\n                        className={classNames(\n                          stepIdx !== 0 ? \"lg:pl-9\" : \"\",\n                          \"px-6 py-5 flex items-start text-sm font-medium\"\n                        )}\n                      >\n                        <span className='flex-shrink-0'>\n                          <span className='flex h-10 w-10 items-center justify-center rounded-full border-2 border-indigo-600'>\n                            <span className='text-indigo-600'>{step.id}</span>\n                          </span>\n                        </span>\n                        <span className='mt-0.5 ml-4 flex min-w-0 flex-col'>\n                          <span className='text-sm font-medium text-indigo-600'>\n                            {step.name}\n                          </span>\n                          <span className='text-sm font-medium text-gray-500'>\n                            {step.description}\n                          </span>\n                        </span>\n                      </span>\n                    </a>\n                  ) : (\n                    <a href={step.href} className='group'>\n                      <span\n                        className='absolute top-0 left-0 h-full w-1 bg-transparent group-hover:bg-gray-200 lg:bottom-0 lg:top-auto lg:h-1 lg:w-full'\n                        aria-hidden='true'\n                      />\n                      <span\n                        className={classNames(\n                          stepIdx !== 0 ? \"lg:pl-9\" : \"\",\n                          \"px-6 py-5 flex items-start text-sm font-medium\"\n                        )}\n                      >\n                        <span className='flex-shrink-0'>\n                          <span className='flex h-10 w-10 items-center justify-center rounded-full border-2 border-gray-300'>\n                            <span className='text-gray-500'>{step.id}</span>\n                          </span>\n                        </span>\n                        <span className='mt-0.5 ml-4 flex min-w-0 flex-col'>\n                          <span className='text-sm font-medium text-gray-500'>\n                            {step.name}\n                          </span>\n                          <span className='text-sm font-medium text-gray-500'>\n                            {step.description}\n                          </span>\n                        </span>\n                      </span>\n                    </a>\n                  )}\n\n                  {stepIdx !== 0 ? (\n                    <>\n                      {/* Separator */}\n                      <div\n                        className='absolute inset-0 top-0 left-0 hidden w-3 lg:block'\n                        aria-hidden='true'\n                      >\n                        <svg\n                          className='h-full w-full text-gray-300'\n                          viewBox='0 0 12 82'\n                          fill='none'\n                          preserveAspectRatio='none'\n                        >\n                          <path\n                            d='M0.5 0V31L10.5 41L0.5 51V82'\n                            stroke='currentcolor'\n                            vectorEffect='non-scaling-stroke'\n                          />\n                        </svg>\n                      </div>\n                    </>\n                  ) : null}\n                </div>\n              </li>\n            ))}\n          </ol>\n        </nav>\n      </div>\n      <div className='mt-8 sm:mx-auto'>\n        <div className='sm:min-w-[80rem]'>{content}</div>\n      </div>\n    </>\n  );\n}\n","// import { Addon, Plan, UserInfo, UserServiceConfiguration } from \"AppTypes\";\nimport { UserInfo } from \"AppTypes\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport UserWizard from \"../../_app/shared/member/UserWizard\";\nimport { SignUpSteps } from \"../../_app/shared/member/SignUpSteps\";\n// import UserWizard from \"../../_app/shared/member/UserWizard\";\n// import { Addons } from \"./components/Addons\";\n// import { Button } from \"./components/button\";\n// import { PersonalInfo } from \"./components/personalInfo\";\n// import { SelectPlan } from \"./components/selectPlan\";\n// import { ServiceSummary } from \"./components/serviceSummary\";\n// import { ThankYou } from \"./components/thankYou\";\nimport StepOne from \"./StepOne\";\nimport StepTwo from \"./StepTwo\";\n// import { Addon, Plan, UserInfo, UserServiceConfiguration } from 'AppTypes';\n\nfunction SignWizard() {\n  const [currentStep, setCurrentStep] = useState(0);\n  //   const [showRequired, setShowRequiredFields] = useState(false);\n\n  const [data, setData] = useState<UserInfo>({\n    first_name: \"\",\n    last_name: \"\",\n    email_address: \"\",\n    phone_number: \"\",\n    password: \"\",\n  });\n\n  const makeRequest = (data) => {\n    console.log(\"hhdhd\", data);\n  };\n\n  const handleNextStep = (newData, final = false) => {\n    console.log(\"hhdhd\", newData);\n    setData((prev) => ({ ...prev, ...newData }));\n    if (final) {\n      makeRequest(newData);\n      return;\n    }\n    setCurrentStep((prev) => prev + 1);\n  };\n\n  const handlePrevStep = (newData) => {\n    setData((prev) => ({ ...prev, ...newData }));\n    setCurrentStep((prev) => prev - 1);\n  };\n\n  const handleSwitch = (id: string) => (e: any) => {\n    SignUpSteps[currentStep - 1][\"status\"] = \"complete\";\n    SignUpSteps[parseInt(id) - 1][\"status\"] = \"current\";\n    setCurrentStep(parseInt(id));\n    // this.setState({ currentStep: parseInt(id) });\n  };\n\n  const steps = [\n    <UserWizard\n      handleSwitch={}\n      steps={SignUpSteps}\n      content={<StepOne next={handleNextStep} data={data} />}\n    />,\n    <StepTwo next={handleNextStep} prev={handlePrevStep} data={data} />,\n  ];\n\n  const content = steps[currentStep];\n\n  return content;\n\n  //   const updateUserInfo = (userInfo: UserInfo) => {\n  //     setUserServiceConfiguration({ ...userServiceConfiguration, userInfo });\n  //   };\n\n  //   const updateSelectedPlan = (plan: Plan) => {\n  //     setUserServiceConfiguration({\n  //       ...userServiceConfiguration,\n  //       selectedPlan: plan,\n  //     });\n  //   };\n\n  //   const updateMonthly = () => {\n  //     setUserServiceConfiguration((prevVal) => ({\n  //       ...userServiceConfiguration,\n  //       monthly: !prevVal.monthly,\n  //     }));\n  //   };\n\n  //   const updateAddons = (addon: Addon) => {\n  //     const addons = userServiceConfiguration.addons;\n  //     const index = addons.findIndex(\n  //       (currentAddon) => currentAddon.name === addon.name\n  //     );\n  //     if (index === -1) {\n  //       setUserServiceConfiguration({\n  //         ...userServiceConfiguration,\n  //         addons: [...addons, addon],\n  //       });\n  //     } else {\n  //       addons.splice(index, 1);\n  //       setUserServiceConfiguration({\n  //         ...userServiceConfiguration,\n  //         addons: [...addons],\n  //       });\n  //     }\n  //   };\n\n  //   const nextStep = (onGoingStep?: number) => {\n  //     if (step === 2) return;\n  //     if (step === 1 || (onGoingStep && onGoingStep !== 1 && step === 1)) {\n  //       if (\n  //         !userServiceConfiguration.userInfo.first_name ||\n  //         !userServiceConfiguration.userInfo.last_name ||\n  //         !userServiceConfiguration.userInfo.email_address ||\n  //         !userServiceConfiguration.userInfo.email_address.includes(\"@\") ||\n  //         !userServiceConfiguration.userInfo.phone_number ||\n  //         !userServiceConfiguration.userInfo.password\n  //       ) {\n  //         setShowRequiredFields(true);\n  //         return;\n  //       }\n  //     }\n  //     setStep((step) => {\n  //       if (onGoingStep) return onGoingStep;\n  //       return step + 1;\n  //     });\n  //   };\n\n  //   const goBack = () => {\n  //     if (step === 1) return;\n  //     setStep((step) => step - 1);\n  //   };\n\n  //   const handleSwitch = (id: string) => (e: any) => {\n  //     SignUpSteps[parseInt(id) - 1][\"status\"] = \"current\";\n  //     setStep(parseInt(id));\n  //   };\n\n  //   return (\n  //     <div>\n  //       <form>\n  //         {step === 1 && (\n  //           <UserWizard\n  //             handleSwitch={handleSwitch}\n  //             steps={SignUpSteps}\n  //             content={\n  //               <PersonalInfo\n  //                 userInfo={userServiceConfiguration.userInfo}\n  //                 updateUserInfo={updateUserInfo}\n  //                 showRequired={showRequired}\n  //               />\n  //             }\n  //           />\n  //         )}\n  //         {step === 2 && (\n  //           <SelectPlan\n  //             selectedPlan={userServiceConfiguration.selectedPlan}\n  //             monthly={userServiceConfiguration.monthly}\n  //             updateSelectedPlan={updateSelectedPlan}\n  //             updateIsMonthly={updateMonthly}\n  //           />\n  //         )}\n  //         {/* {step === 3 && (\n  //           <Addons\n  //             selectedAddons={userServiceConfiguration.addons}\n  //             monthly={userServiceConfiguration.monthly}\n  //             updateAddons={updateAddons}\n  //           />\n  //         )} */}\n  //         {/* {step === 4 && (\n  //           <ServiceSummary userServiceConfiguration={userServiceConfiguration} />\n  //         )} */}\n  //         {/* {step === 5 && <ThankYou />} */}\n  //       </form>\n  //       {step > 1 ? (\n  //         <menu className='flex justify-between p-4 mt-auto'>\n  //           <li>\n  //             <Button type='ghost' onClick={goBack}>\n  //               Go Back\n  //             </Button>\n  //           </li>\n  //           <li>\n  //             <Button\n  //               onClick={() => nextStep()}\n  //               type={step > 2 ? \"secondary\" : \"primary\"}\n  //             >\n  //               {/* {step > 2 ? \"Next Step\" : \"Confirm\"} */}\n  //             </Button>\n  //           </li>\n  //         </menu>\n  //       ) : (\n  //         <Button type='ghost' onClick={() => nextStep()}>\n  //           Go Next\n  //         </Button>\n  //       )}\n  //     </div>\n  //   );\n}\n\nexport default SignWizard;\n","__webpack_require__.h = () => (\"3c8fb5289eb4881bf0f6\")"],"names":[],"sourceRoot":""}