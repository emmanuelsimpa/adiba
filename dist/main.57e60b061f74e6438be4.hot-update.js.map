{"version":3,"file":"main.57e60b061f74e6438be4.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;;AAGA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;;;;;;;;ACjCA","sources":["webpack://adiba-central/./src/redux/store.ts","webpack://adiba-central/webpack/runtime/getFullHash"],"sourcesContent":["import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { reduxBatch } from \"@manaflair/redux-batch\";\r\nimport { persistStore } from \"redux-persist\";\r\nimport { rootReducer, rootSaga } from \"./rootReducer\";\r\nimport logger from \"redux-logger\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    immutableCheck: false,\r\n    serializableCheck: false,\r\n    thunk: true,\r\n  }),\r\n  sagaMiddleware,\r\n  // logger,\r\n];\r\n\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  middleware.push(logger);\r\n}\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n  devTools: true,\r\n  enhancers: [reduxBatch],\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\r\nexport type AppDispatch = typeof store.dispatch;\r\n","__webpack_require__.h = () => (\"e8c7e213f1a1907ae9e2\")"],"names":[],"sourceRoot":""}