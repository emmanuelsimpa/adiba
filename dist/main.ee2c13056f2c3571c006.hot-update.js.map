{"version":3,"file":"main.ee2c13056f2c3571c006.hot-update.js","mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AAAA;AAGA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;;;;;;;;AChDA","sources":["webpack://adiba-central/./src/redux/setupAxios.js","webpack://adiba-central/webpack/runtime/getFullHash"],"sourcesContent":["// import { refresh_token } from \"../app/modules/Auth/_redux/authCrud\";\r\n// import * as auth_actions from \"../app/modules/Auth/_redux/authRedux\";\r\nimport { refresh_token } from \"../member/redux/_redux/authCrud\";\r\nimport * as auth_actions from \"../member/redux/_redux/authRedux\";\r\n\r\n// import { AxiosAuthRefreshRequestConfig } from \"axios-auth-refresh\";\r\nimport createAuthRefreshInterceptor from \"axios-auth-refresh\";\r\n\r\n// Function that will be called to refresh authorization\r\n\r\nexport default function setupAxios(axios, store) {\r\n  const refreshAuthLogic = (failedRequest) =>\r\n    refresh_token()\r\n      .then((response) => {\r\n        var data = response.data;\r\n        if (data.status === \"Success\") {\r\n          store.dispatch(\r\n            auth_actions.actions.fulfillToken(data.data.access_token)\r\n          );\r\n          failedRequest.response.config.headers[\"Authorization\"] =\r\n            \"Bearer \" + data.data.access_token;\r\n          return Promise.resolve();\r\n        }\r\n        return Promise.resolve();\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Refresh token error\", error);\r\n        store.dispatch(auth_actions.actions.logout());\r\n        return Promise.reject(error);\r\n      });\r\n\r\n  axios.interceptors.request.use(\r\n    (config) => {\r\n      const {\r\n        auth: { authToken },\r\n      } = store.getState();\r\n\r\n      console.log(\"Auth token\", authToken);\r\n\r\n      if (authToken) {\r\n        config.headers.Authorization = `Bearer ${authToken}`;\r\n      }\r\n      return config;\r\n    },\r\n    (err) => Promise.reject(err)\r\n  );\r\n\r\n  createAuthRefreshInterceptor(axios, refreshAuthLogic);\r\n}\r\n","__webpack_require__.h = () => (\"ecaa94d308b9605a5d66\")"],"names":[],"sourceRoot":""}