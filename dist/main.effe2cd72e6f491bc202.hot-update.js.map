{"version":3,"file":"main.effe2cd72e6f491bc202.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AAAA;AAoFA;AAAA;AAAA;AAAA;AAjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAKA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAKA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAKA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;;;;;;;;;AC5JA","sources":["webpack://adiba-central/./src/member/forms/SignUpWizard.tsx","webpack://adiba-central/webpack/runtime/getFullHash"],"sourcesContent":["import * as React from \"react\";\nimport UserWizard from \"../../_app/shared/member/UserWizard\";\nimport UserMgtViewModel from \"../../_app/shared/ViewModels/UserMgtViewModel\";\nimport Summary from \"./Summary\";\nimport { Component } from \"react\";\nimport Administrator from \"./Administrator\";\nimport BusinessEntity from \"./BusinessEntity\";\nimport { SignUpSteps } from \"../../_app/shared/member/SignUpSteps\";\nimport { register } from \"../redux/_redux/authCrud\";\n\nexport default class SignUpWizard extends Component {\n  state = {\n    step: 1,\n    first_name: \"\",\n    last_name: \"\",\n    email_address: \"\",\n    phone_number: \"\",\n    license_number: \"\",\n    password: \"\",\n    confirm_password: \"\",\n    business_name: \"\",\n    business_address: \"\",\n    business_email: \"\",\n    business_url: \"\",\n  };\n\n  prevStep = () => {\n    const { step } = this.state;\n    SignUpSteps[step - 1][\"status\"] = \"upcoming\";\n    SignUpSteps[step - 2][\"status\"] = \"current\";\n    this.setState({ step: step - 1 });\n  };\n\n  nextStep = () => {\n    const { step } = this.state;\n    SignUpSteps[step - 1][\"status\"] = \"complete\";\n    SignUpSteps[step][\"status\"] = \"current\";\n    this.setState({ step: step + 1 });\n  };\n\n  // handleChange = (data) => {\n  //   this.setState({ first_name: 'emmy' });\n  //   console.log('ln 41', data.first_name);\n  // };\n\n  handleChange = (input: any) => (e: any) => {\n    this.setState({ [input]: e.target.value });\n  };\n\n  handleSwitch = (id: string) => (e: any) => {\n    const { step } = this.state;\n    SignUpSteps[step - 1][\"status\"] = \"complete\";\n    SignUpSteps[parseInt(id) - 1][\"status\"] = \"current\";\n    this.setState({ step: parseInt(id) });\n  };\n\n  handleSubmit = () => {\n    console.log(this.state);\n    const clientsViewModelsInstance = new UserMgtViewModel(\"signup\");\n    const signUp = clientsViewModelsInstance.signUp(this.state);\n    // signUp.then((response: any) => {\n    register(this.state)\n      .then((response: any) => {\n        if (response.status == 200) {\n          console.log(\"User registered successfully\");\n          // history.push(\"/dashboard\");\n        } else {\n          console.log(\" errrrhrfhf\");\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  render() {\n    const { step } = this.state;\n    const {\n      first_name,\n      last_name,\n      email_address,\n      phone_number,\n      license_number,\n      password,\n      confirm_password,\n      business_name,\n      business_address,\n      business_email,\n      business_url,\n    } = this.state;\n    const values = {\n      first_name,\n      last_name,\n      email_address,\n      phone_number,\n      license_number,\n      password,\n      confirm_password,\n      business_name,\n      business_address,\n      business_email,\n      business_url,\n    };\n    switch (step) {\n      case 1:\n        return (\n          <>\n            <UserWizard\n              handleSwitch={this.handleSwitch}\n              steps={SignUpSteps}\n              content={\n                <Administrator\n                  nextStep={this.nextStep}\n                  handleChange={this.handleChange}\n                  values={values}\n                />\n              }\n            />\n          </>\n        );\n      case 2:\n        return (\n          <>\n            <UserWizard\n              handleSwitch={this.handleSwitch}\n              steps={SignUpSteps}\n              content={\n                <BusinessEntity\n                  prevStep={this.prevStep}\n                  nextStep={this.nextStep}\n                  handleChange={this.handleChange}\n                  values={values}\n                />\n              }\n            />\n          </>\n        );\n      case 3:\n        return (\n          <>\n            <UserWizard\n              handleSwitch={this.handleSwitch}\n              steps={SignUpSteps}\n              content={\n                <Summary\n                  prevStep={this.prevStep}\n                  values={values}\n                  handleSubmit={this.handleSubmit}\n                />\n              }\n            />\n          </>\n        );\n      default:\n      // do nothing\n    }\n  }\n}\n","__webpack_require__.h = () => (\"a5d44e001b881e14e691\")"],"names":[],"sourceRoot":""}