{"version":3,"file":"main.8dcb2c01fb470e43d69c.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AAAA;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;;;;;;;AC1BA","sources":["webpack://adiba-central/./src/index.tsx","webpack://adiba-central/./src/redux/store.tsx","webpack://adiba-central/webpack/runtime/getFullHash"],"sourcesContent":["import * as React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { createInstance, Piral, createStandardApi } from \"piral\";\n\nimport { setupShell } from \"./_app/app\";\nimport { createPageLayoutsApi } from \"piral-page-layouts\";\nimport { errors, layout } from \"./_app/shared/components/layouts/default\";\nimport Landing from \"./landing\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\n// change to your feed URL here (either using feed.piral.cloud or your own service)\nconst feedUrl = \"https://feed.piral.cloud/api/v1/pilet/empty\";\n\nexport const instance = createInstance({\n  state: {\n    components: layout,\n    errorComponents: errors,\n    // routes: {\n    //   \"/\": Landing,\n    // },\n  },\n  plugins: [...createStandardApi(), createPageLayoutsApi()],\n  requestPilets() {\n    return fetch(feedUrl)\n      .then((res) => res.json())\n      .then((res) => res.items);\n  },\n});\n\nsetupShell(instance.root);\n\nconst root = createRoot(document.querySelector(\"#app\"));\nroot.render(\n  <Provider store={store}>\n    <Piral instance={instance} />\n  </Provider>\n);\n","// import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\n// // import { reduxBatch } from \"@manaflair/redux-batch\";\n// // import { persistStore } from \"redux-persist\";\n// // import { rootReducer, rootSaga } from \"./rootReducer\";\n// // import createSagaMiddleware from \"redux-saga\";\n\n// const sagaMiddleware = createSagaMiddleware;\n// const middleware = [\n//   ...getDefaultMiddleware({\n//     immutableCheck: false,\n//     serializableCheck: false,\n//     thunk: true,\n//   }),\n//   sagaMiddleware,\n// ];\n\n// const store = configureStore({\n//   reducer: rootReducer,\n//   middleware,\n//   devTools: process.env.NODE_ENV !== \"production\",\n//   enhancers: [reduxBatch],\n// });\n\n// export const persistor = persistStore(store);\n\n// sagaMiddleware.run(rootSaga);\n// export default store;\n","__webpack_require__.h = () => (\"36971482b411398b613a\")"],"names":[],"sourceRoot":""}