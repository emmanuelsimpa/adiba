{"version":3,"file":"main.ca4d19c7080fbf4a71b3.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AASA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAGA;AAIA;AAGA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAIA;AAGA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAGA;AAAA;AACA;AAEA;AAAA;AAEA;AAMA;AAKA;;;;;;;;AC5IA","sources":["webpack://adiba-central/./src/_app/shared/MasterLayout/components/FlyoutMenu.tsx","webpack://adiba-central/webpack/runtime/getFullHash"],"sourcesContent":["import * as React from \"react\";\nimport { Popover, Transition } from \"@headlessui/react\";\nimport { ChevronDownIcon } from \"@heroicons/react/20/solid\";\nimport {\n  ArrowPathIcon,\n  ChartBarIcon,\n  CursorArrowRaysIcon,\n  PhoneIcon,\n  PlayIcon,\n  ShieldCheckIcon,\n  Squares2X2Icon,\n} from \"@heroicons/react/24/outline\";\nimport { classNames } from \"../../utils/className\";\n\nexport const solutions = [\n  {\n    name: \"Channels Engine\",\n    description:\n      \"Get a better understanding of where your traffic is coming from.\",\n    href: \"/channels\",\n    icon: ChartBarIcon,\n  },\n  {\n    name: \"Retail/Loan Engine\",\n    description: \"Speak directly to your customers in a more meaningful way.\",\n    href: \"#\",\n    icon: CursorArrowRaysIcon,\n  },\n  {\n    name: \"Security\",\n    description: \"Your customers' data will be safe and secure.\",\n    href: \"#\",\n    icon: ShieldCheckIcon,\n  },\n  {\n    name: \"CRM/Helpdesk Engine\",\n    description: \"Connect with third-party tools that you're already using.\",\n    href: \"#\",\n    icon: Squares2X2Icon,\n  },\n  {\n    name: \"Performance Insights\",\n    description:\n      \"Build strategic funnels that will drive your customers to convert\",\n    href: \"#\",\n    icon: ArrowPathIcon,\n  },\n];\nconst callsToAction = [\n  { name: \"Watch Demo\", href: \"#\", icon: PlayIcon },\n  { name: \"Contact Sales\", href: \"#\", icon: PhoneIcon },\n];\nexport const CurrentAppContext = React.createContext<string | null>(null);\nexport default function FlyoutMenu() {\n  const [currentApp, setCurrentApp] = React.useState<string | null>(null);\n\n  const handleSwitch = (name: string, e) => {\n    console.log(\"handleSwitch\", e.target);\n    localStorage.setItem(\"currentApp\", name);\n  };\n\n  return (\n    <CurrentAppContext.Provider value={currentApp}>\n      <Popover className='relative'>\n        {({ open }) => (\n          <>\n            <Popover.Button\n              className={classNames(\n                open ? \"text-gray-900\" : \"text-gray-500\",\n                \"group inline-flex items-center rounded-md bg-white text-base font-medium hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 md:pl-12\"\n              )}\n            >\n              <span>Choose an application {currentApp}</span>\n              <ChevronDownIcon\n                className={classNames(\n                  open ? \"text-gray-600\" : \"text-gray-400\",\n                  \"ml-2 h-5 w-5 group-hover:text-gray-500\"\n                )}\n                aria-hidden='true'\n              />\n            </Popover.Button>\n\n            <Transition\n              as={React.Fragment}\n              enter='transition ease-out duration-200'\n              enterFrom='opacity-0 translate-y-1'\n              enterTo='opacity-100 translate-y-0'\n              leave='transition ease-in duration-150'\n              leaveFrom='opacity-100 translate-y-0'\n              leaveTo='opacity-0 translate-y-1'\n            >\n              <Popover.Panel className='absolute md:left-64 left-32 z-10 mt-3 w-screen max-w-md -translate-x-1/2 transform px-2 sm:px-0'>\n                <div className='overflow-hidden rounded-lg shadow-lg ring-1 ring-black ring-opacity-5'>\n                  <div className='relative grid gap-6 bg-white px-5 py-6 sm:gap-8 sm:p-8'>\n                    {solutions.map((item) => (\n                      <a\n                        key={item.name}\n                        href={item.href}\n                        onClick={() => handleSwitch(item.href.slice(1))}\n                        className='-m-3 flex items-start rounded-lg p-3 transition duration-150 ease-in-out hover:bg-gray-50'\n                      >\n                        <item.icon\n                          className='h-6 w-6 flex-shrink-0 text-indigo-600'\n                          aria-hidden='true'\n                        />\n                        <div className='ml-4'>\n                          <p className='text-base font-medium text-gray-900'>\n                            {item.name}\n                          </p>\n                          <p className='mt-1 text-sm text-gray-500'>\n                            {item.description}\n                          </p>\n                        </div>\n                      </a>\n                    ))}\n                  </div>\n                  <div className='space-y-6 bg-gray-50 px-5 py-5 sm:flex sm:space-y-0 sm:space-x-10 sm:px-8'>\n                    {callsToAction.map((item) => (\n                      <div key={item.name} className='flow-root'>\n                        <a\n                          href={item.href}\n                          className='-m-3 flex items-center rounded-md p-3 text-base font-medium text-gray-900 transition duration-150 ease-in-out hover:bg-gray-100'\n                        >\n                          <item.icon\n                            className='h-6 w-6 flex-shrink-0 text-gray-400'\n                            aria-hidden='true'\n                          />\n                          <span className='ml-3'>{item.name}</span>\n                        </a>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </Popover.Panel>\n            </Transition>\n          </>\n        )}\n      </Popover>\n    </CurrentAppContext.Provider>\n  );\n}\n","__webpack_require__.h = () => (\"61b9faf074b8a95f1063\")"],"names":[],"sourceRoot":""}