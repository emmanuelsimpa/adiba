{"version":3,"file":"main.e6de610071d1ff9ef2a9.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AAUA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AATA;AAAA;AAWA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;ACtKA;AACA;AAEA;AACA;AAKA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAKA;AAEA;;;;;;;;;;;;;;;;;ACrBA;AACA;AAEA;AACA;AAKA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAEA;;;;;;;;ACpBA","sources":["webpack://adiba-central/./src/member/formT/SignWizard.tsx","webpack://adiba-central/./src/member/formT/StepOne.tsx","webpack://adiba-central/./src/member/formT/StepTwo.tsx","webpack://adiba-central/webpack/runtime/getFullHash"],"sourcesContent":["import { Addon, Plan, UserInfo, UserServiceConfiguration } from \"AppTypes\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport { SignUpSteps } from \"../../_app/shared/member/SignUpSteps\";\nimport UserWizard from \"../../_app/shared/member/UserWizard\";\nimport { Addons } from \"./components/Addons\";\nimport { Button } from \"./components/button\";\nimport { PersonalInfo } from \"./components/personalInfo\";\nimport { SelectPlan } from \"./components/selectPlan\";\nimport { ServiceSummary } from \"./components/serviceSummary\";\nimport { ThankYou } from \"./components/thankYou\";\nimport * as Yup from \"yup\";\nimport StepOne from \"./StepOne\";\nimport StepTwo from \"./StepTwo\";\n// import { Addon, Plan, UserInfo, UserServiceConfiguration } from 'AppTypes';\n\nfunction SignWizard() {\n  const [currentStep, setCurrentStep] = useState(0);\n  const [showRequired, setShowRequiredFields] = useState(false);\n\n  const [userServiceConfiguration, setUserServiceConfiguration] =\n    useState<UserServiceConfiguration>({\n      userInfo: {\n        first_name: \"\",\n        last_name: \"\",\n        email_address: \"\",\n        phone_number: \"\",\n        password: \"\",\n      },\n    });\n\n  const steps = [<StepOne />, <StepTwo />];\n\n  const content = steps[currentStep];\n\n  return content;\n\n  //   const updateUserInfo = (userInfo: UserInfo) => {\n  //     setUserServiceConfiguration({ ...userServiceConfiguration, userInfo });\n  //   };\n\n  //   const updateSelectedPlan = (plan: Plan) => {\n  //     setUserServiceConfiguration({\n  //       ...userServiceConfiguration,\n  //       selectedPlan: plan,\n  //     });\n  //   };\n\n  //   const updateMonthly = () => {\n  //     setUserServiceConfiguration((prevVal) => ({\n  //       ...userServiceConfiguration,\n  //       monthly: !prevVal.monthly,\n  //     }));\n  //   };\n\n  //   const updateAddons = (addon: Addon) => {\n  //     const addons = userServiceConfiguration.addons;\n  //     const index = addons.findIndex(\n  //       (currentAddon) => currentAddon.name === addon.name\n  //     );\n  //     if (index === -1) {\n  //       setUserServiceConfiguration({\n  //         ...userServiceConfiguration,\n  //         addons: [...addons, addon],\n  //       });\n  //     } else {\n  //       addons.splice(index, 1);\n  //       setUserServiceConfiguration({\n  //         ...userServiceConfiguration,\n  //         addons: [...addons],\n  //       });\n  //     }\n  //   };\n\n  //   const nextStep = (onGoingStep?: number) => {\n  //     if (step === 2) return;\n  //     if (step === 1 || (onGoingStep && onGoingStep !== 1 && step === 1)) {\n  //       if (\n  //         !userServiceConfiguration.userInfo.first_name ||\n  //         !userServiceConfiguration.userInfo.last_name ||\n  //         !userServiceConfiguration.userInfo.email_address ||\n  //         !userServiceConfiguration.userInfo.email_address.includes(\"@\") ||\n  //         !userServiceConfiguration.userInfo.phone_number ||\n  //         !userServiceConfiguration.userInfo.password\n  //       ) {\n  //         setShowRequiredFields(true);\n  //         return;\n  //       }\n  //     }\n  //     setStep((step) => {\n  //       if (onGoingStep) return onGoingStep;\n  //       return step + 1;\n  //     });\n  //   };\n\n  //   const goBack = () => {\n  //     if (step === 1) return;\n  //     setStep((step) => step - 1);\n  //   };\n\n  //   const handleSwitch = (id: string) => (e: any) => {\n  //     SignUpSteps[parseInt(id) - 1][\"status\"] = \"current\";\n  //     setStep(parseInt(id));\n  //   };\n\n  //   return (\n  //     <div>\n  //       <form>\n  //         {step === 1 && (\n  //           <UserWizard\n  //             handleSwitch={handleSwitch}\n  //             steps={SignUpSteps}\n  //             content={\n  //               <PersonalInfo\n  //                 userInfo={userServiceConfiguration.userInfo}\n  //                 updateUserInfo={updateUserInfo}\n  //                 showRequired={showRequired}\n  //               />\n  //             }\n  //           />\n  //         )}\n  //         {step === 2 && (\n  //           <SelectPlan\n  //             selectedPlan={userServiceConfiguration.selectedPlan}\n  //             monthly={userServiceConfiguration.monthly}\n  //             updateSelectedPlan={updateSelectedPlan}\n  //             updateIsMonthly={updateMonthly}\n  //           />\n  //         )}\n  //         {/* {step === 3 && (\n  //           <Addons\n  //             selectedAddons={userServiceConfiguration.addons}\n  //             monthly={userServiceConfiguration.monthly}\n  //             updateAddons={updateAddons}\n  //           />\n  //         )} */}\n  //         {/* {step === 4 && (\n  //           <ServiceSummary userServiceConfiguration={userServiceConfiguration} />\n  //         )} */}\n  //         {/* {step === 5 && <ThankYou />} */}\n  //       </form>\n  //       {step > 1 ? (\n  //         <menu className='flex justify-between p-4 mt-auto'>\n  //           <li>\n  //             <Button type='ghost' onClick={goBack}>\n  //               Go Back\n  //             </Button>\n  //           </li>\n  //           <li>\n  //             <Button\n  //               onClick={() => nextStep()}\n  //               type={step > 2 ? \"secondary\" : \"primary\"}\n  //             >\n  //               {/* {step > 2 ? \"Next Step\" : \"Confirm\"} */}\n  //             </Button>\n  //           </li>\n  //         </menu>\n  //       ) : (\n  //         <Button type='ghost' onClick={() => nextStep()}>\n  //           Go Next\n  //         </Button>\n  //       )}\n  //     </div>\n  //   );\n}\n\nexport default SignWizard;\n","import { Field, Formik } from \"formik\"\nimport * as React from \"react\"\n\nconst StepOne = () => {\n    return (\n        <Formik>\n            (() => {\n                <>\n                <p>First</p>\n                <Field name=\"first_name\" />\n                <p>Last</p>\n                <Field name=\"last_name\" />\n                <p>Password</p>\n                <Field name=\"Password\" />\n                <button type=\"submit\">NEXT</button>\n                </>\n            })\n        </Formik>\n    )\n}\n\nexport default StepOne","import { Field, Formik } from \"formik\"\nimport * as React from \"react\"\n\nconst StepTwo = () => {\n    return (\n        <Formik>\n            (() => {\n                <>\n                <p>First</p>\n                <Field name=\"email_address\" />\n                <p>Last</p>\n                <Field name=\"Phone Number\" />\n                <button type=\"submit\">Back</button>\n                <button type=\"submit\">Submit</button>\n                </>\n            })\n        </Formik>\n    )\n}\n\nexport default StepTwo","__webpack_require__.h = () => (\"1058836a5641fe0db7f7\")"],"names":[],"sourceRoot":""}